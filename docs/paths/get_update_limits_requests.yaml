/v3/update_limits_requests:
  get:
    tags:
      - Requests
    summary: Get list of update_limits requests
    description: |
      Allows to get a filtered list of `UpdateLimitsRequest` with details
    operationId: getUpdateLimitsRequests
    parameters:
      - name: filter[requestor]
        in: query
        description: |
          Filters requests by requestor - source of the operation.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: filter[reviewer]
        in: query
        description: |
          Filters requests by reviewer - account assigned to review request.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: filter[state]
        in: query
        description: |
          Filters requests by their state.
          * 1 - pending
          * 2 - canceled
          * 3 - approved
          * 4 - rejected
          * 5 - permanently_rejected
        required: false
        style: form
        explode: false
        schema:
          type: integer
          minimum: 1
          maximum: 5
      - name: filter[pending_tasks]
        in: query
        description: |
          Filters requests by pending tasks bit mask. Returns requests if all bit are set.
        required: false
        style: form
        explode: false
        schema:
          type: integer
      - name: filter[pending_tasks_not_set]
        in: query
        description: |
          Filters requests by pending tasks bit mask. Returns requests if all bits not set.
        required: false
        style: form
        explode: false
        schema:
          type: integer
      - name: filter[pending_tasks_any_of]
        in: query
        description: |
          Filters requests by pending tasks bit mask. Returns requests if at least one bit is set.
        required: false
        style: form
        explode: false
        schema:
          type: integer
      - name: include
        in: query
        description: |
          Relationships may be used for the included parameter.
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum:
            - "request_details"
      - $ref: '#/components/schemas/pageNumberParam'
      - $ref: '#/components/schemas/pageLimitParam'
      - $ref: '#/components/schemas/sortingParam'
    responses:
      200:
        description: requests exist
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
                - included
              properties:
                data:
                  type: array
                  items:
                    type: object
                    $ref: '#/components/schemas/ReviewableRequest'
                included:
                  type: array
                  items:
                    type: object
                    anyOf:
                      - $ref: '#/components/schemas/UpdateLimitsDetails'
                      - $ref: '#/components/schemas/UpdateLimitsDetails'
                links:
                  type: object
                  description: "Provides links for pagination"
                  properties:
                    next:
                      type: string
                      description: "link to the next page"
                      example: "/v3/update_limits_requests?include=details&page[number]=2&page[limit]=15"
                    self:
                      type: string
                      description: "link to the current page"
                      example: "/v3/update_limits_requests?include=details&page[number]=1&page[limit]=15"
      400:
        description: bad input parameter
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Errors'
      404:
        description: requests do not exist
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Errors'
