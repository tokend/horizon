/v3/requests:
  get:
    tags:
      - Requests
    summary: Reviewable Request List
    description: |
      Allows getting a filtered list of `ReviewableRequest` with details\n
      ðŸ”’ Requestor's or reviewer's signature is needed
    operationId: getRequests
    parameters:
      - name: filter[requestor]
        in: query
        description: |
          Filters requests by requestor - source of the operation.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: filter[reviewer]
        in: query
        description: |
          Filters requests by reviewer - account assigned to review requests.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: filter[state]
        in: query
        description: |
          Filters requests by their state.
          * 1 - pending
          * 2 - canceled
          * 3 - approved
          * 4 - rejected
          * 5 - permanently_rejected
        required: false
        style: form
        explode: false
        schema:
          type: integer
          minimum: 1
          maximum: 5
      - name: filter[type]
        in: query
        description: |
          Filters requests by their type.
          * 2 -   "create_pre_issuance"
          * 3 -   "create_issuance"
          * 4 -   "create_withdraw"
          * 5 -   "create_sale"
          * 6 -   "update_limits"
          * 7 -   "create_aml_alert"
          * 8 -   "change_role"
          * 9 -   "update_sale_details"
          * 10 -  "create_asset"
          * 11 -  "create_invoice"
          * 12 -  "manage_contract"
          * 13 -  "update_asset"
          * 16 -  "create_atomic_swap_bid"
          * 17 -  "create_atomic_swap"
          * 18 -  "kyc_recovery"
          * 19 -  "manage_offer"
          * 20 -  "create_payment"
          * 21 -  "perform_redemption"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          minimum: 2
          maximum: 17
      - name: filter[pending_tasks]
        in: query
        description: |
          Filters requests by existing tasks in pending tasks bit mask. Returns requests if all bits are set.
        required: false
        style: form
        explode: false
        schema:
          type: integer
      - name: filter[pending_tasks_not_set]
        in: query
        description: |
          Filters requests by existing tasks in pending tasks bit mask. Returns requests if none of bits is set.
        required: false
        style: form
        explode: false
        schema:
          type: integer
      - name: filter[pending_tasks_any_of]
        in: query
        description: |
          Filters requests by existing tasks in pending tasks bit mask. Returns requests if at least one bit is set.
        required: false
        style: form
        explode: false
        schema:
          type: integer
      - name: filter[all_tasks]
        in: query
        description: |
          Filters requests by existing tasks in `all_tasks` bit mask. Returns requests if all bits are set.
        required: false
        style: form
        explode: false
        schema:
          type: integer
      - name: filter[all_tasks_not_set]
        in: query
        description: |
          Filters requests by existing tasks in `all_tasks` bit mask. Returns requests if none of bits is set.
        required: false
        style: form
        explode: false
        schema:
          type: integer
      - name: filter[all_tasks_any_of]
        in: query
        description: |
          Filters requests by existing tasks in `all_tasks` bit mask. Returns requests if at least one bit is set.
        required: false
        style: form
        explode: false
        schema:
          type: integer
      - name: filter[created_before]
        in: query
        description: |
          Filters requests by creation timestamp earlier than passed value in filter (exclusively).
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: UTC Unix Timestamp
      - name: filter[created_after]
        description: |
          Filters requests by creation timestamp later or equal than passed value in filter (inclusively)
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: UTC Unix Timestamp
      - name: include
        in: query
        description: |
          Relationships that may be used for the included parameter.
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum:
            - "request_details"
      - $ref: '#/components/schemas/pageNumberParam'
      - $ref: '#/components/schemas/pageLimitParam'
      - $ref: '#/components/schemas/sortingParam'
    responses:
      200:
        description: requests exist
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
                - included
              properties:
                data:
                  type: array
                  items:
                    type: object
                    $ref: '#/components/schemas/ReviewableRequest'
                included:
                  type: array
                  items:
                    type: object
                    $ref: '#/components/schemas/ReviewableRequestDetails'
                links:
                  type: object
                  description: "Provides links for pagination"
                  properties:
                    next:
                      type: string
                      description: "link to the next page"
                      example: "/v3/requests?include=details&page[number]=2&page[limit]=15"
                    self:
                      type: string
                      description: "link to the current page"
                      example: "/v3/requests?include=details&page[number]=1&page[limit]=15"
      400:
        description: bad input parameter
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Errors'
      401:
        description: either an invalid signature has been provided or a signer has not been authorized to access specified resources
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Errors'
      404:
        description: requests do not exist
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Errors'
