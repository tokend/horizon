/v3/create_poll_requests/{id}:
  get:
    tags:
      - Polls
    summary: Create Poll Request by ID
    description: |
      Allows getting `CreatePoll` by ID\n
      ðŸ”’ Requestor's or reviewer's signature is needed
    operationId: getCreatePollRequest
    parameters:
      - name: filter[requestor]
        in: query
        description: |
          Filters requests by requestor - source of the operation.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: filter[reviewer]
        in: query
        description: |
          Filters requests by reviewer - account assigned to review requests.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: filter[state]
        in: query
        description: |
          Filters requests by their state.
          * 1 - pending
          * 2 - canceled
          * 3 - approved
          * 4 - rejected
          * 5 - permanently_rejected
        required: false
        style: form
        explode: false
        schema:
          type: integer
          minimum: 1
          maximum: 5
      - name: filter[pending_tasks]
        in: query
        description: |
          Filters requests by existing tasks in pending tasks bit mask. Returns requests if all bits are set.
        required: false
        style: form
        explode: false
        schema:
          type: integer
      - name: filter[pending_tasks_not_set]
        in: query
        description: |
          Filters requests by existing tasks in pending tasks bit mask. Returns requests if none of bits is set.
        required: false
        style: form
        explode: false
        schema:
          type: integer
      - name: filter[pending_tasks_any_of]
        in: query
        description: |
          Filters requests by existing tasks in pending tasks bit mask. Returns requests if at least one bit is set.
        required: false
        style: form
        explode: false
        schema:
          type: integer
      - name: filter[request_details.permission_type]
        in: query
        description: |
          Filters create_poll requests by permission type.
        required: false
        style: form
        explode: false
        schema:
          type: uint64
      - name: filter[request_details.vote_confirmation_required]
        in: query
        description: |
          Filters create_poll requests by `vote_confirmation_required` property.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: include
        in: query
        description: |
          Relationships that may be used for the included parameter.
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum:
            - "request_details"
    responses:
      200:
        description: requests exist
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
                - included
              properties:
                data:
                  type: object
                  $ref: '#/components/schemas/ReviewableRequest'
                included:
                  type: array
                  items:
                    type: object
                    anyOf:
                      - $ref: '#/components/schemas/CreatePollRequest'
      400:
        description: bad input parameter
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Errors'
      401:
        description: either an invalid signature has been provided or a signer has not been authorized to access specified resources
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Errors'
      404:
        description: request does not exist
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Errors'
