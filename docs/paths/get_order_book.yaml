/v3/order_book/{id}:
  get:
    tags:
      - OrderBooks
    summary: Get OrderBook by ID
    description: |
                  Returns the list of the placed offers without private details.
    operationId: getOrderBookByID
    parameters:
    - name: id
      in: path
      description: "The ID of the order book: 0 for secondary market, sale ID - otherwise"
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
        examle: 0
    - name: base_asset
      in: query
      description: The base asset of the requested offers
      required: false
      style: simple
      explode: false
      schema:
        type: string
        format: valid assetCode
        example: "BTC"
    - name: quote_asset
      in: query
      description: The quote asset the requested offers
      required: false
      style: simple
      explode: false
      schema:
        type: string
        format: valid assetCode
        example: "ETH"
    - name: is_buy
      in: query
      description: Defines whether searching of offer on buying `base_asset` or selling it
      required: false
      style: simple
      explode: false
      schema:
        type: number
    - name: include
      in: query
      description: |
                    Relationships may be used for the included parameter.
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - base_asset
          - quote_asset
    responses:
      200:
        description: order book exists
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
                - included
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/OrderBookEntry'
                included:
                  type: array
                  items:
                    $ref: '#/components/schemas/Asset'
      400:
        description: bad input parameter
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Errors'
      404:
        description: order book does not exist
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Errors'