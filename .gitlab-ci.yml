# docker-in-docker allows to build and publish docker images
services:
  - docker:dind

variables:
  IMAGE_NAME: registry.gitlab.com/tokend/horizon
  BUILD_IMAGE: horizonbuild
  BUILD_DOCKERFILE: build.dockerfile
  LEGACY_IMAGE: $IMAGE_NAME:$CI_COMMIT_SHA
  LEGACY_DOCKERFILE: legacy.dockerfile
  PG_IMAGE: $IMAGE_NAME:pg-$CI_COMMIT_SHA
  PG_DOCKERFILE: pg.dockerfile
  TEST_IMAGE: $IMAGE_NAME:$CI_COMMIT_SHA-test
  TEST_DOCKERFILE: test.dockerfile
  DH_IMAGE_NAME: tokend/horizon:latest

stages:
  - build
  # TODO fix tests
  # - test
  - publish

# build and publish docker image to the registry
build:
  image: docker:latest
  stage: build
  tags:
    - tokend
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    # build intermediate binary
    - docker build --pull -t $BUILD_IMAGE -f $BUILD_DOCKERFILE .
    # legacy
    - docker build -t $LEGACY_IMAGE -f $LEGACY_DOCKERFILE .
    - docker push $LEGACY_IMAGE
    # pg
    - docker pull registry.gitlab.com/tokend/deployment/postgres-ubuntu:9.6
    - docker build -t $PG_IMAGE -f $PG_DOCKERFILE .
    - docker push $PG_IMAGE

# build testing image and run tests
# test:
#   image: docker:latest
#   stage: test
#   tags:
#     - tokend
#   script:
#     - docker build --pull -t $TEST_IMAGE -f $TEST_DOCKERFILE .
#     - docker run $IMAGE_TEST_NAME ./...

publish-dh:
  image: docker:latest
  stage: publish
  tags:
    - tokend
  only:
    - dockerhub
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PWD
    - docker pull $PG_IMAGE
    - docker tag $PG_IMAGE $DH_IMAGE_NAME
    - docker push $DH_IMAGE_NAME
