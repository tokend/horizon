before_script:
  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)
  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - echo "$SSH_PRIVATE_KEY" | ssh-add -
  - mkdir -p ~/.ssh
  - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - 'echo -e "Host gitlab\n\tHostName gitlab.com\n\tIdentityFile ~/.ssh/id_rsa\n\tUser git\n" >> ~/.ssh/config'

stages:
  - prebuild
  - build
  - delivery
  - deploy
  - postdeploy

build:
  stage: build
  image: golang:1.8
  variables:
    APP_PATH: gitlab.com/tokend/horizon
  script:
    - mkdir -p $GOPATH/src/$APP_PATH
    - cp -rf ./* $GOPATH/src/$APP_PATH
    - cd $GOPATH/src/$APP_PATH
    - go build -o bin/horizon -a gitlab.com/tokend/horizon/cmd/horizon
    - cp -rf ./bin/ /builds/tokend/horizon/bin/
  artifacts:
      expire_in: 1 week
      paths:
        - bin/horizon
  only:
    - master
    - staging
    - dev

delivery:dev:
  image: shebgregor/alpine-rsync-git
  stage: delivery
  script:
    - rsync bin/horizon ubuntu@$HOST_DEV:artifacts/horizon/${CI_COMMIT_SHA:0:8}/
  only:
    - master
    - staging
    - dev

deploy:dev:
  image: shebgregor/alpine-rsync-git
  stage: deploy
  script:
    - ssh ubuntu@$HOST_DEV "artifacts/update.sh horizon dev ${CI_COMMIT_SHA:0:8}"
    - curl -X POST http://$HOST_DEV:8842/CjUwUQjuiw_QCnB5Mg0K0Q
  only:
    - dev
