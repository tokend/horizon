// Code generated by go-bindata.
// sources:
// migrations/0010_trades.sql
// migrations/0011_history_price.sql
// migrations/0012_update_pending_tx_op_key.sql
// migrations/0013_signer_name.sql
// migrations/001_squashed.sql
// migrations/003_update_forfeit_request_created_at.sql
// migrations/004_change_asset_length.sql
// migrations/005_change_exchange_kyc.sql
// migrations/006_pending_submitter.sql
// migrations/007_move_forfeit_requests_to_payment.sql
// migrations/008_use_random_salt_in_tx.sql
// migrations/009_use_long_assets.sql
// migrations/014_balance_history.sql
// migrations/015_account_type.sql
// migrations/016_balance_updates_index.sql
// migrations/017_reviewable_request.sql
// migrations/018_sale.sql
// migrations/019_add_timestamps_2_reviewable_req.sql
// migrations/020_alter_sales_details.sql
// migrations/021_sale_quote_assets.sql
// migrations/022_sale_quote_assets.sql
// migrations/023_sale_current_cap.sql
// migrations/024_sale_type.sql
// migrations/025_ledger_changes.sql
// migrations/026_contracts.sql
// migrations/027_reviewable_request_tasks.sql
// migrations/028_add_customer_details_to_contract.sql
// migrations/029_offer.sql
// migrations/030_v2.sql
// migrations/031_notifiers.sql
// migrations/032_asset_pairs.sql
// migrations/033_polls.sql
// migrations/034_poll_permission_type.sql
// migrations/035_reingest_version.sql
// migrations/036_whitelist.sql
// migrations/037_matches.sql
// migrations/038_remove_sale_participations.sql
// migrations/039_sale_access_definition_type.sql
// migrations/040_offers_state_index.sql
// migrations/041_recovery_state_for_account.sql
// migrations/042_swap.sql
// migrations/043_asset.sql
// migrations/044_data.sql
// migrations/045_deferred_payments.sql
// DO NOT EDIT!

package schema

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migrations0010_tradesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xb1\x6a\xc3\x30\x10\x86\x77\x83\xdf\xe1\x46\x9b\x3a\x43\x97\x2e\x99\x9c\x46\x14\x53\xd7\x09\xaa\x33\x64\x12\x17\xeb\x88\x45\xb1\xe5\x9e\xce\x0d\xe9\xd3\x97\xe2\x0c\x26\x34\x85\xac\xfa\x3f\xdd\xdd\xcf\xb7\x58\xc0\x43\xe7\x8e\x8c\x42\xb0\x1b\xe2\x28\x8e\x9e\xb5\xca\x6b\x05\x75\xbe\x2a\x15\xb4\x2e\x88\xe7\xb3\x11\x46\x4b\x01\x92\x38\x02\x00\x70\x16\x56\xc5\xcb\xbb\xd2\x45\x5e\x42\xb5\xa9\xa1\xda\x95\x65\x36\x65\x9e\x2d\xb1\x39\x78\xff\x61\x26\xac\xa8\xea\x6b\xe6\x80\x81\x0c\x86\x40\x02\x4d\x8b\x8c\x8d\x10\xc3\x17\xf2\xd9\xf5\xc7\xe4\xf1\x29\xbd\xe6\x3f\x47\x2f\x77\x7d\x98\x16\x74\x7e\xec\xe5\xc6\x09\x97\x91\xff\x21\x03\xbb\x86\x6e\x64\x0d\x13\x0a\x59\x83\x02\xe2\x3a\x0a\x82\xdd\x00\x27\x27\xad\x1f\xa7\x17\xf8\xf6\x3d\x5d\xe0\xad\x2e\xde\x72\xbd\x87\x57\xb5\x87\xc4\xd9\x6c\xd6\x3f\x9b\x77\x4b\xe3\x28\x5d\xfe\x2a\x98\x4b\x59\xfb\x53\x1f\x47\x6b\xbd\xd9\xfe\xa9\x64\xf9\x13\x00\x00\xff\xff\xe3\x92\x07\x7b\xc1\x01\x00\x00")

func migrations0010_tradesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations0010_tradesSql,
		"migrations/0010_trades.sql",
	)
}

func migrations0010_tradesSql() (*asset, error) {
	bytes, err := migrations0010_tradesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/0010_trades.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations0011_history_priceSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x31\x4f\xc3\x30\x10\x85\x77\x4b\xfe\x0f\x6f\x4c\x44\x3a\xb0\xb0\x74\x0a\x34\x03\x22\xb4\x95\x95\x0e\x9d\x2a\xd7\x9c\x9a\x93\x88\x6d\xec\x0b\x55\xf9\xf5\x08\x3a\x34\x8a\x58\xd8\x4e\xa7\xf7\x74\xdf\x7d\x8b\x05\xee\x06\x3e\x25\x2b\x84\x5d\xd4\x4a\xab\x27\xd3\xd4\x5d\x83\xae\x7e\x6c\x1b\xf4\x9c\x25\xa4\xcb\x21\x26\x76\x84\x42\x2b\x00\x38\xda\x4c\x07\x9b\x33\x09\x5c\x6f\x93\x75\x42\x09\x9f\x36\x5d\xd8\x9f\x8a\xfb\x87\x12\xeb\x4d\x87\xf5\xae\x6d\xab\x6b\xfe\x63\x0c\xf2\xaf\x82\xf0\x40\x59\xec\x10\x27\xd3\x99\xa5\x0f\xa3\xfc\x6e\xf0\x15\x3c\xcd\x4b\x57\xc4\xb7\x30\x1e\xdf\x09\x31\x91\xe3\xcc\xc1\xcf\x53\x5b\xf3\xfc\x5a\x9b\x3d\x5e\x9a\x3d\x8a\xdb\x23\xd5\x14\xb2\xba\x9d\x2d\xb5\x2a\x97\x3f\x56\xa6\x9e\x56\xe1\xec\xb5\x5a\x99\xcd\xf6\x2f\x4b\xcb\xef\x00\x00\x00\xff\xff\x91\x95\xf9\x33\x53\x01\x00\x00")

func migrations0011_history_priceSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations0011_history_priceSql,
		"migrations/0011_history_price.sql",
	)
}

func migrations0011_history_priceSql() (*asset, error) {
	bytes, err := migrations0011_history_priceSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/0011_history_price.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations0012_update_pending_tx_op_keySql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x5f\x4b\xc3\x30\x14\xc5\xdf\x03\xf9\x0e\xf7\xad\x2b\x3a\xd0\xe1\x9e\xc6\x1e\xaa\x0d\x58\x08\x6d\xed\x12\xd4\xa7\x10\xb6\x30\x8b\x35\xad\x69\x3a\xeb\xb7\x97\x74\x13\x5b\x1d\xb8\xf5\xa9\x7f\x72\xcf\xb9\xbf\x1c\xce\x74\x0a\x17\x6f\xf9\xd6\x48\xab\x80\x57\x18\x05\x94\x91\x0c\x58\x70\x4b\x09\x54\x4a\x6f\x72\xbd\x15\xd6\x48\x5d\xcb\xb5\xcd\x4b\x5d\xc3\x7e\xc0\xb6\x42\xe9\x9d\x2a\xca\x4a\x01\x7b\x4e\x09\x58\xd5\xda\xc5\x39\x72\xa3\xea\xa6\xb0\x63\xc4\x65\xa5\x8c\x74\x3f\xc4\xab\xfa\x84\x30\x4b\x52\x88\x13\x06\x31\x2f\x8a\x05\x46\x18\xdd\x65\x24\x60\x04\x78\x1c\x3d\x70\x02\x51\x1c\x92\x27\x67\x27\x6c\x2b\x06\x52\xd1\xe8\xfc\xbd\x51\x22\xd7\x1b\xd5\x62\x04\x90\xc4\xc7\xd7\x4e\x06\x32\xdf\x8d\x3e\xde\x93\x8c\xfc\x3a\x80\x68\x75\x00\xa1\xd4\xef\x48\x30\xea\xc7\x1b\x96\x1f\x1a\xa3\x8e\xf7\x44\xa8\xce\x84\xa7\xa1\xbb\xce\x51\xb2\x15\x61\xc3\x38\x96\x5e\x59\xb9\xa7\x77\x20\xfc\x0b\xc8\x29\x1d\x1b\xb5\xdb\x36\x48\xfa\x3f\xb4\x5e\x4b\x96\x5e\xef\xc3\xbb\xfc\x69\x40\x77\xb0\x7f\xf5\xce\x2a\xd0\xb0\x7f\x3b\x69\xd6\x2f\xd2\x4c\xae\xaf\x66\x37\xfe\xe8\x22\x7e\xbb\xcc\xe6\x73\x67\xf2\x15\x00\x00\xff\xff\xe1\xa8\x25\xb5\x1d\x03\x00\x00")

func migrations0012_update_pending_tx_op_keySqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations0012_update_pending_tx_op_keySql,
		"migrations/0012_update_pending_tx_op_key.sql",
	)
}

func migrations0012_update_pending_tx_op_keySql() (*asset, error) {
	bytes, err := migrations0012_update_pending_tx_op_keySqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/0012_update_pending_tx_op_key.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations0013_signer_nameSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xa1\xae\xc3\x20\x14\x06\x60\x4f\xc2\x3b\xfc\xae\xe2\xa6\x4f\x50\xc5\x1d\x4c\x9d\xc1\xd2\x80\x26\x64\x23\x04\xd1\xd3\x06\x48\xb6\xc7\x9f\x98\x99\x98\x98\xfd\xcc\x37\xcf\xf8\xdb\x6a\x69\x69\x64\x84\x43\x0a\x45\xde\xac\xf0\xea\x9f\x0c\x8e\xcc\xf7\xca\x25\x8e\x96\xb8\xa7\xdb\xa8\x3b\xc7\x5e\x0b\xe7\xd6\xa1\xb4\xc6\xc9\x51\xb8\x58\xbc\x29\x72\xda\x32\x46\x7e\x0e\x58\xe7\x61\x03\x11\xb4\x39\xab\x40\x1e\xd3\xb4\x48\x21\xc5\xe7\xa5\xf7\x07\xff\xbe\xe9\xd5\x5d\xbf\x74\xcb\x2b\x00\x00\xff\xff\x84\x1c\x57\x20\xbe\x00\x00\x00")

func migrations0013_signer_nameSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations0013_signer_nameSql,
		"migrations/0013_signer_name.sql",
	)
}

func migrations0013_signer_nameSql() (*asset, error) {
	bytes, err := migrations0013_signer_nameSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/0013_signer_name.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations001_squashedSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5b\xdf\x6f\xdb\xbe\x11\x7f\x0f\x90\xff\x81\x6f\x49\xb0\x64\x58\x81\x2e\xd8\x9c\x27\x37\x51\x57\x63\x8e\xbc\xc6\xf6\xda\xa0\x28\x08\x5a\xba\x38\x5c\x65\x51\x25\xe9\xc4\xee\xb0\xff\x7d\x90\xf5\xc3\x92\x28\x8a\x94\x23\xb9\xdf\xc7\x50\xc7\xbb\xfb\xf0\x7e\xf0\xee\xcc\x5c\x5d\xa1\x90\xd1\x50\x44\xe0\x49\xca\x42\x34\xfd\x19\xb8\xec\x8e\x48\x32\x65\x6b\xee\xc1\x28\xff\xf2\x91\xf1\x8f\x34\x80\xd3\x93\xd3\x93\xab\x2b\xf4\xa7\x15\x5d\x72\x22\x01\xcd\xa3\x78\x25\x5e\xdb\xad\xbb\x64\x05\x03\xf4\x4c\x85\x64\x7c\x8b\x89\xe7\xb1\x75\x28\xc5\x0d\x9a\x6d\x23\x18\xa0\xd9\xf0\xc3\xd8\xb9\x41\x53\xef\x19\x56\x64\x80\xa2\xf5\x22\xa0\xde\x0d\x9a\xbc\x86\xc0\x07\x28\x62\x42\x2e\x39\x88\x84\xd9\xe9\xc9\xed\x83\x33\x9c\x39\xc9\x26\x85\x25\x3a\x3f\x3d\x41\x08\x21\xea\xa3\x05\x5d\x0a\xe0\x94\x04\xc8\x9d\xcc\x90\x3b\x1f\x8f\x2f\x93\x6f\xc4\xf7\x39\x08\x81\xbc\x67\xc2\x89\x27\x81\xa3\x17\xc2\xb7\x34\x5c\x9e\x5f\xbf\xbf\x38\x3d\xb9\xb8\x69\x50\x7d\x41\x02\x12\x7a\xd0\xa5\xea\x19\xcb\xb2\xea\x34\x94\x55\xbd\x53\x42\x4c\xfd\x1a\xd5\xff\x7a\x7d\xa1\xe0\x14\x02\x64\x0d\xe9\x7b\x95\x32\x39\x3d\x6b\xce\x3f\xb6\x1e\xfa\x8f\x60\xe1\x22\xff\x60\x79\x6c\x98\xfa\x58\xc0\xcf\xec\xf4\xa6\xce\xe7\xb9\xe3\xde\xb6\x3e\xc0\x6c\x9f\x8e\x7f\xa2\xe5\x74\x36\x7c\x98\xa1\x2f\xa3\xd9\x27\xf4\x2e\x59\x19\xb9\xb7\x0f\xce\xbd\xe3\xce\xd0\x87\xc7\x6c\xcd\x9d\xa0\xfb\x91\xfb\xef\xe1\x78\xee\xec\x17\x86\x5f\x0b\x0b\xb7\xc3\xdb\x4f\x0e\x7a\xf7\x06\x7c\x68\xf2\xc5\x75\xee\xd0\x87\x47\x6b\xa0\xc3\xf1\xcc\x79\x30\xe2\xcc\xf9\x2a\x04\x7f\xa6\x7e\x93\xbe\x4f\x8c\x3f\x01\x95\x98\xc3\xcf\x35\x88\x4e\x23\xb1\xca\xda\xe8\xd6\x92\xf0\x65\xad\x9f\x5e\xd7\x38\xea\x2a\xf6\x53\x3b\x5a\x1a\x52\x49\x89\x04\x1f\x2f\xb6\x78\x2d\x80\xa3\x05\x63\x01\x90\xb0\xc6\xfb\x21\x92\xe0\x67\xdf\xd3\x65\x8f\xc3\x6e\x37\x91\x48\xd2\x15\x08\x49\x56\x11\x7a\xa5\xf2\x99\xad\x93\x15\xf4\x8b\x85\x90\x12\xaf\x23\xdf\x9e\x38\x3b\x22\xb9\x8d\x00\xd1\x50\xc2\x12\x38\xba\x73\x3e\x0e\xe7\xe3\x19\xfa\x8b\x6d\x4c\x55\x0f\xba\xaf\xd8\xd2\xc8\x39\x7a\x8c\x59\xe2\xed\x2c\xd6\x34\xf2\xd4\x98\xab\x12\x1a\x62\x2f\x00\x7f\x09\xbc\xcb\x90\x4b\x39\x66\x91\x26\x62\x3d\x42\x6f\xef\x5a\x15\x7f\x4f\xc8\xf1\x33\x11\xcf\x76\x91\x14\x71\x78\xa1\x6c\x2d\xb0\x71\x67\x16\xd2\x9c\x84\x82\xec\xea\x03\xbc\xbb\x59\x1a\xbc\x3c\xdd\xc2\x22\xe0\xa4\xcd\x06\x2f\x60\xc2\x18\x70\x4a\x4e\xc8\x92\x50\xf6\xf7\x2a\x62\x5c\x02\xc7\x2f\xc0\x45\x5c\xe7\x54\xc5\xbe\x53\xb2\x15\x93\x24\xc0\x5e\x5c\x1b\x69\xf2\xd9\x13\x00\x8e\x18\x0b\xb4\xb7\xb8\x00\xfc\x04\x5a\xeb\xec\xbe\x73\x10\xc0\x5f\xb4\x34\x2b\xb2\xc1\x72\x83\x05\x48\x2c\xe8\x2f\x95\xcc\x90\x39\xf6\x67\x1d\x11\x2e\xa9\x47\x23\xd2\x6d\x35\x56\x2f\xa0\x70\x13\x68\x70\xa9\xfb\xb5\xb7\x46\xa5\xf0\xd3\x13\x36\x56\x4d\xb1\xb3\x67\xa6\x3e\x3b\x1b\x0c\x14\x8a\x2a\x37\x78\x7a\x02\x4f\x8a\xa4\xfa\x39\xe8\x98\xfb\x4a\xd3\x8d\xd2\x8e\x9e\xac\x5b\x61\xef\x2c\x65\x37\x4a\x55\x13\x77\x3d\xb9\x21\x7d\xe7\x9b\x7a\x09\x18\x8b\x72\xa9\x90\x5b\xb5\x44\x24\x8a\x02\xea\x25\xd8\x18\xf7\x81\xeb\x22\xae\x54\x82\x54\xbe\xf9\x20\x09\x0d\x52\x5f\x4f\xd7\xc4\xae\xfd\xcb\xa2\xae\x8b\x88\x4a\xef\x94\x5d\x3a\xc7\xbb\xc4\xdd\x94\xcf\x33\xd6\x21\x7b\x3d\x57\x2b\x3e\x1f\x42\x49\x9f\x68\x5c\xea\xd5\x1e\x8b\x90\x71\x6f\x9a\xc2\xb5\x8d\xde\xd8\x7f\x32\xbe\xfd\x46\x6e\x55\xd2\xef\x8b\x5a\x13\xe6\xee\x23\xb6\x2a\xb1\x21\x5a\xe3\x08\xcd\x48\x9b\xd0\x44\x64\xbb\x82\xb0\x97\x26\xa7\xca\xda\x18\xb5\xd9\x06\x7d\xc4\x1e\xbb\x09\x29\x45\xb7\x6d\xe5\x50\xc5\xdd\xd7\x65\xa6\x91\x73\xf4\x80\xb0\xc4\xdb\x59\x38\x68\xe4\xa9\xc1\x50\x25\x34\x5c\x5a\x0a\xdf\xbd\x3f\x1e\xc7\x7e\x65\x79\xbf\xdf\x8e\xcd\xf8\xfb\xb3\x67\x59\xae\x85\x5d\xf7\x1b\x9a\xf0\x15\x8b\x82\x9e\x6a\x7a\x9d\x08\xfb\xaa\xde\xaa\x72\x31\xd7\xf5\x86\x14\xa5\xd3\xb3\x2f\x57\x37\xc8\x3b\xba\xab\xb7\xc4\xdf\x99\xab\x1b\xe4\xaa\xae\xae\xdb\x60\x48\x65\x85\x6d\x3d\xb9\x77\xee\xd2\x45\x0d\xed\xa7\x25\x69\x41\x6b\x9a\xc2\x58\x97\xe8\xcd\xb5\xb6\x66\x92\x9f\x4b\x6f\x98\x51\x10\x7d\xc8\xea\xa6\x31\x6f\xa9\xdd\x35\x23\x18\xb9\xc1\x10\xbe\x40\xc0\x22\x40\x12\x36\x6a\xbf\xb3\xc1\x1c\xc4\x3a\x90\xba\xaf\x2b\x90\x44\xf7\x2d\xc6\xa9\xfd\x2e\xe8\x32\x24\x72\xcd\xa1\xee\xa7\xa0\xbf\x5f\x5f\x7c\xfb\xbe\xef\x64\xfe\xfb\xbf\xba\x5e\xe6\xdb\x77\x65\x32\x03\x2b\x96\xcc\x75\xd5\xc6\x27\x67\x16\xb2\x10\x6c\x5a\xa3\x98\x99\xca\x27\x43\x47\x57\x80\x17\x6c\x1d\xfa\x22\x36\xcf\xdf\x38\x09\x97\x60\xf9\x33\x0c\xa2\x7e\x16\x3a\xa9\x52\x2d\xa3\x3f\x89\x9d\x89\x3b\x56\x7f\x79\x40\x09\xc5\xed\x64\x3c\xbf\x77\x63\x6b\x4f\x9d\xd9\xbe\x6d\x83\x8d\x7c\x21\xc1\xf9\x99\xe6\x07\x8d\xb3\xc1\x80\xc3\xd2\x0b\x88\x10\x09\x10\xab\x49\x70\x1f\x70\x14\x19\xad\x60\x69\x66\xc7\x0a\xbc\x56\xd3\x93\x3e\x60\x6a\x24\xb5\x02\xdb\x38\x75\x69\x0d\x59\x14\xda\xf8\xfe\xe0\x2a\x10\xf3\xc9\x81\x1d\xd4\x6a\xbb\x6a\x0b\x53\x69\x1c\x7b\xb0\xa9\x22\xa3\x95\x35\x35\x2d\xc8\xc1\x00\x0b\x05\xec\x71\x81\x16\x5a\xee\x76\x80\xcb\x35\xba\x2d\x70\x6d\x7d\xdc\x03\x70\xad\xac\x56\x96\x36\x54\x6c\xb6\xc0\xf3\xc4\xaf\xe4\xf4\xfd\xe8\x1d\xff\x80\x6d\x76\x0a\xb7\x13\x77\x3a\x7b\x18\x8e\xdc\x0e\x2f\x9d\xe4\x4a\x1c\xde\xdd\x15\xb8\x9b\xf4\x41\x73\x77\xf4\x79\xee\xa0\xf3\xfd\xf2\x81\x38\xa3\x3f\x04\xba\x58\x0b\xf4\xaf\x87\xd1\xfd\xf0\xe1\x11\xfd\xd3\x79\x44\xe7\x06\x40\xca\x15\xa7\xbd\xbd\xfa\x02\x58\x15\xd4\x08\xb4\x56\xab\x56\x80\x35\x97\x9d\xe1\x1e\xeb\x0b\x7c\xbd\xb8\xc6\x23\x68\xd0\xb0\xd5\x41\x28\x89\x53\x9f\x0b\x7b\x02\x5f\x15\xd4\x08\xbb\x56\xab\x56\x80\xb5\x09\xd3\x98\x0b\xfb\x3a\x00\x9d\xc0\xc6\x83\x68\xd4\xd2\xea\x40\x16\xf9\x64\x25\x03\x35\x72\xef\x9c\xaf\x6d\x7b\xe7\xdd\xa6\x02\x33\x34\x71\xeb\x3b\xe9\xf9\x74\xe4\xfe\x03\x2d\x24\x07\x40\xe7\x29\xf1\xa5\xd2\xa5\xea\x54\x8d\x9b\xee\x6e\xf4\xdc\xb5\xef\x56\x4a\x56\x9b\x7e\x9d\x6e\x49\xef\xdb\x8d\x76\x09\x2f\x3b\xfd\x2a\xe3\x85\x4b\x75\x90\xa0\x8d\x04\xcc\x22\x1c\x15\x0a\xb1\x83\x94\x4e\x6f\xcd\x44\xf7\x22\xd7\xa2\xfa\x9a\x4c\x5b\x02\xa2\x4e\xfa\x2e\x6b\x1f\x00\x5c\x22\x8b\x0b\x1a\xcb\x4d\x1f\xd0\x52\xae\x1a\xcb\x1c\x08\xae\x3c\x07\xad\x87\xc4\x22\x1c\x7b\x2d\x7b\x23\xa2\x14\xca\x9e\xdb\xa1\x46\x2a\x1a\xa4\x5e\xe3\xfc\x75\xd0\x62\xdb\xad\x1d\xca\x8c\x8b\x00\xb2\x77\x4f\x25\x8d\xf5\xfa\x15\xcf\xbd\x7b\x25\x15\xee\x76\xe1\xac\x53\x57\x26\x26\x93\xdd\x38\xc0\x9e\xdb\xe1\xae\x6c\xe1\xb6\x34\xf4\x61\x83\xab\x6f\xb2\x31\x0b\x71\xfa\xe6\xba\xbb\x13\x37\x8a\x2a\x02\xcd\x5f\x87\x97\xaf\xa3\x84\xb0\x25\x92\x2e\xdd\xa6\x49\x8a\x59\x7f\x2b\x23\xa4\x31\x12\xf3\xcc\x5f\xcc\x75\xe0\x51\x66\x21\xc6\x40\xcd\x29\xdb\xa1\xe8\xef\xfc\x4b\x42\x0e\xcd\x33\x7a\x96\x95\xa7\x86\x7d\x1a\x41\x79\xd6\x68\x04\x53\xd9\xd0\x0e\x5a\xe1\x59\xe8\x11\x6c\x53\x7c\x84\x6a\xc2\x55\xa0\x6d\x07\xa9\xee\xc9\xeb\x11\xb0\xd5\xbe\xb4\x35\x81\xac\xdb\xd4\x0e\x6d\x56\x4c\x1e\x01\x61\xfe\xc3\x94\x09\x55\x63\x6f\x50\x66\x5f\x98\xca\xf6\x9a\x20\xaa\x72\x6a\x8b\xa9\x43\xd2\x44\x99\x71\xf9\xa2\xed\x3c\x4f\x34\x09\xb3\x41\xd4\xba\x0e\xa8\x08\xdc\x46\x6f\xf3\x33\x0b\x4c\xdb\x08\xac\x90\x6c\x23\x1b\xf7\x2a\x16\x6f\xfd\x3a\x98\x2a\xa9\x7d\x11\xb9\xff\x1f\xbc\x3b\xf6\x1a\xc6\x6b\x3e\x67\x11\x92\x64\x11\x80\x5a\x50\x78\x44\x78\xc4\x87\x9b\x5a\xaa\x7c\xe2\xd9\x48\xa5\x8c\x11\x1b\xa9\xb3\x58\x6f\x24\xd2\x74\x26\x76\x7b\x0c\x74\xca\xec\xab\x91\x5a\x5b\x22\xdb\xee\xda\x53\xfe\x3f\x00\x00\xff\xff\x50\xcc\x93\x12\x53\x39\x00\x00")

func migrations001_squashedSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations001_squashedSql,
		"migrations/001_squashed.sql",
	)
}

func migrations001_squashedSql() (*asset, error) {
	bytes, err := migrations001_squashedSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/001_squashed.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations003_update_forfeit_request_created_atSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\xb1\x6a\x85\x30\x14\xc6\xf1\x3d\x90\x77\x38\x63\x4b\xf1\x09\x9c\xd4\xa4\x56\x50\x23\x69\x84\x76\x92\xd0\x1e\x6b\x06\x8d\x4d\x8e\x48\xfb\xf4\x77\x70\x11\xee\x1d\x5c\x3f\xfe\xc3\xef\x4b\x12\x78\x99\xdd\x4f\xb0\x84\xd0\xaf\x9c\x65\xb5\x91\x1a\x4c\x96\xd7\x12\x26\x17\xc9\x87\xbf\x61\xf4\x61\x44\x47\x43\xc0\xdf\x0d\x23\x45\x38\xa2\x42\xd5\x7d\xd3\xc2\x57\x40\x4b\xf8\x3d\x58\x02\xf3\xd9\x49\xc8\xab\xb2\x6a\x0d\xf4\xef\x55\x5b\x82\xfc\x30\x3a\x2b\xcc\x93\xec\x54\xf1\x06\xaf\x5a\x35\xa7\xfe\x39\xe5\x8c\xb3\xb3\x40\xf8\x7d\xb9\x68\x10\x5a\x75\xf7\x84\xf4\xea\x03\x21\x1e\xf8\xc9\xcd\x18\xc9\xce\x2b\xec\x8e\x26\xbf\x1d\x0b\xfc\xfb\x05\x53\xce\x6e\x01\x00\x00\xff\xff\xe2\x21\x0a\x66\x2b\x01\x00\x00")

func migrations003_update_forfeit_request_created_atSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations003_update_forfeit_request_created_atSql,
		"migrations/003_update_forfeit_request_created_at.sql",
	)
}

func migrations003_update_forfeit_request_created_atSql() (*asset, error) {
	bytes, err := migrations003_update_forfeit_request_created_atSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/003_update_forfeit_request_created_at.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations004_change_asset_lengthSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xc8\x2c\x2e\xc9\x2f\xaa\x8c\x4f\x4a\xcc\x49\xcc\x4b\x4e\x2d\x56\x80\x48\x3a\xfb\xfb\x84\xfa\xfa\x29\x24\x16\x17\xa7\x96\x28\x84\x44\x06\xb8\x2a\x24\x67\x24\x16\x25\x26\x97\xa4\x16\x29\x94\x25\x16\x55\x66\xe6\xa5\x6b\x98\x68\x5a\xf3\x72\xf1\x72\x21\x9b\xee\x92\x5f\x9e\x47\x35\xf3\x8d\x35\x15\x42\x83\x3d\xfd\xdc\x15\x8a\x4b\x93\x8a\x4b\x8a\x34\xc0\x8a\x75\x14\x0c\x75\x14\x8c\x35\xad\x01\x01\x00\x00\xff\xff\xc6\x71\xf2\x2d\xd4\x00\x00\x00")

func migrations004_change_asset_lengthSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations004_change_asset_lengthSql,
		"migrations/004_change_asset_length.sql",
	)
}

func migrations004_change_asset_lengthSql() (*asset, error) {
	bytes, err := migrations004_change_asset_lengthSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/004_change_asset_length.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations005_change_exchange_kycSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xc8\x2c\x2e\xc9\x2f\xaa\x8c\x4f\x4a\xcc\x49\xcc\x4b\x4e\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xae\x4c\xb6\xe6\xe5\xe2\xe5\x42\x36\xc0\x25\xbf\x3c\x8f\x80\x11\x8e\x2e\x2e\x48\x26\x28\x64\x15\xe7\xe7\x25\x59\x03\x02\x00\x00\xff\xff\x92\x1b\xba\x5b\x85\x00\x00\x00")

func migrations005_change_exchange_kycSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations005_change_exchange_kycSql,
		"migrations/005_change_exchange_kyc.sql",
	)
}

func migrations005_change_exchange_kycSql() (*asset, error) {
	bytes, err := migrations005_change_exchange_kycSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/005_change_exchange_kyc.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations006_pending_submitterSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4d\x6b\x32\x51\x0c\x85\xf7\x03\xf3\x1f\xb2\x54\xde\x57\x68\xa5\x76\xe3\xca\xb6\xee\xc4\x42\xd1\xf5\x25\xce\x84\x3b\xa1\x63\xee\x25\x37\xa3\x4e\x7f\x7d\xb1\x63\x3f\xc0\xcf\xed\xe1\x39\x27\x9c\x24\x83\x01\xfc\x5b\xb3\x57\x34\x82\x65\xcc\xb3\x3c\x7b\x7e\x9b\x4e\x16\x53\x58\x4c\x9e\x66\x53\x88\x24\x25\x8b\x77\xa6\x28\x09\x0b\xe3\x20\x2e\xb1\x17\xd2\x04\xbd\x3c\x03\x00\xe0\x12\x56\xec\x13\x29\x63\xfd\xbf\x93\x4e\xb9\x3a\x8c\xc5\x60\xfe\xba\x80\xf9\x72\x36\x3b\xc0\x5d\x9c\xe3\x92\xc4\xd8\xda\xcb\x54\x6c\x56\x35\x17\xee\x9d\x5a\x28\x2a\x54\x2c\x8c\x14\x36\xa8\x2d\x8b\xef\x3d\x3e\xf4\x7f\x6c\x79\xd6\x1f\xdf\xd2\xe6\x52\x0d\xdb\xb9\x0a\x53\x75\x65\xd2\x2f\x4c\xb2\xa1\x3a\x44\x3a\x61\xb8\xbf\x1b\x1e\x5b\x42\x24\xc5\xaf\xe5\x58\x1b\x09\x58\x8c\x3c\xe9\x79\xea\x7a\xeb\xef\x65\xd9\xfe\x9c\x67\xf2\x6c\xe7\x94\x52\x53\xdb\x89\xac\xe1\x68\x74\x14\x56\x28\xa1\x51\xe9\xd0\xc0\x78\x4d\xc9\x70\x1d\x61\xcb\x56\x85\xa6\x53\xe0\x23\x08\x1d\xe0\x26\x96\xb7\xc3\x2c\x6c\x8c\x16\xf4\xc6\x5b\xfe\xfd\xd5\x97\xb0\x95\xbd\x56\x6a\x88\x60\xb8\xaa\xe9\xd2\xaf\x8e\xaf\x81\x7b\xe2\x33\x00\x00\xff\xff\x39\x71\x2f\xbb\x0b\x03\x00\x00")

func migrations006_pending_submitterSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations006_pending_submitterSql,
		"migrations/006_pending_submitter.sql",
	)
}

func migrations006_pending_submitterSql() (*asset, error) {
	bytes, err := migrations006_pending_submitterSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/006_pending_submitter.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations007_move_forfeit_requests_to_paymentSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xc1\x4e\xeb\x30\x10\x45\xf7\x96\xfc\x0f\x77\xd9\xea\xbd\x4a\x2c\x10\x9b\xae\x42\x13\x56\xa6\x45\x55\xb2\x8e\xdc\x64\x9a\x8e\x44\x6c\xe3\x4c\xa8\xc2\xd7\x23\xda\x06\x50\x41\x22\xdb\x33\xc7\xf6\xe8\x5e\x2f\x16\xf8\xd7\x72\x13\xad\x10\x8a\xa0\x55\xba\xdd\x3c\x21\x4f\xee\x4d\x86\x03\x77\xe2\xe3\x50\xee\x7d\xdc\x13\x4b\x19\xe9\xa5\xa7\x4e\xba\xa5\x56\x89\xc9\xb3\xed\x95\x16\xec\xd0\x92\xfb\xd2\x90\xa4\x29\x56\x1b\x53\x3c\xae\x71\x61\xa5\x0c\x81\xc0\x4e\x96\x5a\x69\xf5\xfd\xe9\xd4\x1f\xdd\x07\x5b\x6d\xb3\x24\xcf\xfe\x58\x00\x33\xad\x00\x80\x6b\xec\xb8\x61\x27\x58\x6f\x72\xac\x0b\x63\xfe\x9f\x07\x62\x63\x43\x82\xea\x60\xa3\xad\x84\x22\x5e\x6d\x1c\xd8\x35\xb3\xbb\xdb\xf9\xb5\x6b\x5b\xdf\xbb\x89\x2e\x3b\x16\xb6\x42\x75\xb9\x1b\xca\xbe\xa3\x88\x9d\xf7\xcf\x64\xdd\x8f\x4b\xab\x8a\x82\x50\x3d\xce\x2f\xb8\x8a\x74\x3a\x6d\x05\xc2\x2d\x75\x62\xdb\x80\x23\xcb\xc1\xf7\x67\x82\x37\xef\xe8\x22\xf7\xa1\x9e\x2e\x8f\x11\x8d\x01\x53\x43\x11\x69\xf6\x90\x14\x26\xc7\xcd\xe7\x7a\x5a\xcd\x4f\xd1\x4f\xea\xef\xf4\x15\x7e\x29\x70\xf9\x1e\x00\x00\xff\xff\xc2\x8d\x39\x01\x34\x02\x00\x00")

func migrations007_move_forfeit_requests_to_paymentSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations007_move_forfeit_requests_to_paymentSql,
		"migrations/007_move_forfeit_requests_to_payment.sql",
	)
}

func migrations007_move_forfeit_requests_to_paymentSql() (*asset, error) {
	bytes, err := migrations007_move_forfeit_requests_to_paymentSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/007_move_forfeit_requests_to_payment.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations008_use_random_salt_in_txSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xc8\x2c\x2e\xc9\x2f\xaa\x8c\x2f\x29\x4a\xcc\x2b\x4e\x4c\x2e\xc9\xcc\xcf\x2b\x56\x08\x72\xf5\x73\xf4\x75\x55\x70\xf6\xf7\x09\xf5\xf5\x53\x48\x4c\x4e\xce\x2f\xcd\x2b\x89\x2f\x4e\x2d\x2c\x4d\xcd\x4b\x4e\x55\x08\xf1\x57\x28\x4e\xcc\x29\xb1\xe6\xe5\xe2\xe5\x42\x36\xdb\x25\xbf\x3c\x0f\x24\x46\xa2\xf9\x20\xb3\x40\x66\xa2\xdb\x63\xcd\xcb\x05\x08\x00\x00\xff\xff\xce\x55\x14\xb5\xba\x00\x00\x00")

func migrations008_use_random_salt_in_txSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations008_use_random_salt_in_txSql,
		"migrations/008_use_random_salt_in_tx.sql",
	)
}

func migrations008_use_random_salt_in_txSql() (*asset, error) {
	bytes, err := migrations008_use_random_salt_in_txSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/008_use_random_salt_in_tx.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations009_use_long_assetsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xc8\x2c\x2e\xc9\x2f\xaa\x8c\x4f\x4a\xcc\x49\xcc\x4b\x4e\x2d\x56\x80\x48\x3a\xfb\xfb\x84\xfa\xfa\x29\x24\x16\x17\xa7\x96\x28\x84\x44\x06\xb8\x2a\x24\x67\x24\x16\x25\x26\x97\xa4\x16\x29\x94\x25\x16\x55\x66\xe6\xa5\x6b\x18\x9a\x69\x5a\xf3\x72\xf1\x72\x21\x1b\xef\x92\x5f\x9e\x47\x35\x0b\xcc\x34\x15\x42\x83\x3d\xfd\xdc\x15\x8a\x4b\x93\x8a\x4b\x8a\x34\xc0\x8a\x75\x14\x0c\x75\x14\xcc\x34\xad\x01\x01\x00\x00\xff\xff\xe4\x8d\xd8\x28\xd5\x00\x00\x00")

func migrations009_use_long_assetsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations009_use_long_assetsSql,
		"migrations/009_use_long_assets.sql",
	)
}

func migrations009_use_long_assetsSql() (*asset, error) {
	bytes, err := migrations009_use_long_assetsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/009_use_long_assets.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations014_balance_historySql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xb1\x4e\xf4\x40\x0c\x84\xeb\x8b\x94\x77\x98\x32\xd1\x7f\xe9\x7e\xd1\x5c\x4b\x45\x01\x05\xa2\x8e\x9c\xc4\x97\x58\x6c\xbc\x2b\xaf\xc3\x29\x3c\x3d\x5a\x10\x70\x50\x50\xce\x78\x3c\xb6\xbe\xae\xc3\xbf\x55\x66\x23\x67\x3c\xa5\xba\xaa\xab\xd1\xb8\x08\xa7\x21\x30\x16\xc9\x1e\x6d\xef\x07\x0a\xa4\x23\xf7\x5b\x9a\xc8\x39\xa3\xa9\xab\x83\x4c\x18\x64\xce\x6c\x42\x01\xc9\x64\x25\xdb\xf1\xcc\xfb\xb1\xae\x0e\x9f\x79\x99\xf0\x42\x36\x2e\x64\xcd\xcd\xff\x16\xc6\x67\x36\xd6\x91\xf3\xef\xe6\x8c\xe6\x7b\xa7\x85\x46\x87\x6e\x21\x94\x2e\x5a\xe3\xa6\x5e\x6e\x89\xfa\x8f\xc9\xc7\x37\x53\x4f\x0e\x97\x95\xb3\xd3\x9a\x70\x11\x5f\xde\x25\x5e\xa3\xf2\x57\x1e\x5d\x77\xe5\x4a\x86\xa8\xb3\xba\x44\xa5\x70\xc4\x39\x1a\x98\xb2\xb0\xe1\xee\xf1\xe1\x1e\x89\x2c\x8b\xce\x75\xd5\x9e\x0a\x93\x6b\x4a\xb7\xf1\xa2\xc5\x9b\x2c\xa6\xbf\x29\x9d\xde\x02\x00\x00\xff\xff\xb6\xb6\x0a\xcb\x5d\x01\x00\x00")

func migrations014_balance_historySqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations014_balance_historySql,
		"migrations/014_balance_history.sql",
	)
}

func migrations014_balance_historySql() (*asset, error) {
	bytes, err := migrations014_balance_historySqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/014_balance_history.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations015_account_typeSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcd\x31\x0a\xc2\x40\x10\x85\xe1\x3e\x90\x3b\xbc\x5e\x02\xf6\x69\xbd\x82\x75\x18\x77\x47\x5d\x98\xcc\x2c\x9b\xb7\x48\x6e\x2f\x82\x85\x85\x90\xf6\x2f\xfe\x6f\x9a\x70\x5a\xcb\xa3\x09\x15\xd7\x3a\x0e\xe3\x20\x46\x6d\xa0\xdc\x4c\xf1\x2c\x1b\xa3\xed\x8b\xa4\x14\xdd\xb9\x41\x72\x46\x0a\xeb\xab\xe3\xdb\x16\xee\x55\x51\x9c\xf0\x20\xbc\x9b\x21\xeb\x5d\xba\x11\xe7\xf9\xf3\xfb\x15\x2e\xf1\xf2\x43\x23\xb7\xa8\xff\x90\xf9\x1d\x00\x00\xff\xff\x63\x5e\x52\x1f\xac\x00\x00\x00")

func migrations015_account_typeSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations015_account_typeSql,
		"migrations/015_account_type.sql",
	)
}

func migrations015_account_typeSql() (*asset, error) {
	bytes, err := migrations015_account_typeSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/015_account_type.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations016_balance_updates_indexSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\xe2\xe5\x72\x0e\x72\x75\x0c\x71\x55\xf0\xf4\x73\x71\x8d\x50\xc8\x48\x2a\x8d\x4f\x4a\xcc\x49\xcc\x4b\x4e\x8d\xcf\x4c\x89\xcf\xcc\x4b\x49\xad\x50\xf0\xf7\x53\xc8\xc8\x2c\x2e\xc9\x2f\xaa\x84\xcb\x95\x16\xa4\x24\x96\xa4\x16\x2b\x84\x06\x7b\xfa\xb9\x2b\x78\x38\x06\x7b\x28\x68\x20\xf4\x69\x5a\x83\x0c\x46\xb6\xca\x25\xbf\x3c\x0f\x24\xe6\x12\xe4\x1f\x80\xc7\x2a\x6b\x5e\x2e\x40\x00\x00\x00\xff\xff\x06\x8c\x62\xc1\xa1\x00\x00\x00")

func migrations016_balance_updates_indexSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations016_balance_updates_indexSql,
		"migrations/016_balance_updates_index.sql",
	)
}

func migrations016_balance_updates_indexSql() (*asset, error) {
	bytes, err := migrations016_balance_updates_indexSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/016_balance_updates_index.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations017_reviewable_requestSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd1\x41\x4f\xc2\x30\x14\x07\xf0\x7b\x93\x7e\x87\x77\xdc\xa2\xdc\x94\x0b\xa7\x32\xaa\x36\xce\x41\x4a\x31\x70\x5a\x0a\x7b\x4a\x09\xae\xd8\x56\x89\xdf\xde\x14\x97\x0c\xcc\x32\x7a\xec\xfb\xa5\xfd\xe7\xfd\x07\x03\xb8\xf9\x30\xef\x4e\x07\x84\xc5\x81\x12\x4a\x32\xc9\x99\xe2\xa0\xd8\x38\xe7\xe0\xf0\xdb\xe0\x51\xaf\xf7\x58\x3a\xfc\xfc\x42\x1f\x20\xa1\x04\xc0\x54\x70\x76\xc6\xe2\x51\x14\x0a\x8a\xa9\x82\x62\x91\xe7\xb7\x51\x34\xdc\xba\x93\x78\x65\x32\x7b\x62\x32\xb9\x1f\xa6\x00\xff\x61\xfc\x02\xff\x5c\x3f\x7c\x43\x87\xf5\x06\x2f\xe0\xf0\x2e\x6d\xa6\x3b\xdc\x84\xd2\xa1\xf6\xb6\x06\xc5\x97\xaa\xcd\xd7\x15\xac\x0c\x3f\x07\x04\x88\xb9\xaf\x40\x1f\xe2\x72\x7a\xe0\x56\xfb\x6d\x3b\x8a\xa9\x58\xa6\xf8\x29\xda\x25\xac\x30\x68\xb3\xf7\xad\xdd\x79\x5b\xaf\xbb\x1f\x9d\x49\xf1\xc2\xe4\x0a\x9e\xf9\x0a\x12\x53\xa5\x94\xa4\xa3\x58\xcf\x79\x61\x13\x7b\xac\xe3\xdd\x44\x4e\x67\x4d\x61\xe2\x01\xf8\x52\xcc\xd5\xbc\xa3\xba\x11\x25\xbf\x01\x00\x00\xff\xff\xf1\xbe\xd9\xd3\xef\x01\x00\x00")

func migrations017_reviewable_requestSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations017_reviewable_requestSql,
		"migrations/017_reviewable_request.sql",
	)
}

func migrations017_reviewable_requestSql() (*asset, error) {
	bytes, err := migrations017_reviewable_requestSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/017_reviewable_request.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations018_saleSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x41\x6b\xc2\x30\x1c\x47\xef\xf9\x14\xff\x63\xcb\x14\xdc\x60\xbb\xc8\x84\x58\xb3\x19\xb4\x2a\x31\x0e\x3d\x95\xac\xcd\x66\x40\x9b\x2e\x49\x29\xec\xd3\x0f\xb5\xc6\x4e\xd9\x68\x6f\xa5\xef\x51\xf2\xcb\xeb\x76\xe1\x6e\xaf\x3e\x8d\x70\x12\x56\x05\x42\x11\x23\x98\x13\xe0\x78\x38\x25\x60\xc5\x4e\xa2\x00\x01\xa8\x0c\x2e\xcf\x90\xbe\xd2\x19\x3f\xbf\xcd\xe6\x1c\x66\xab\xe9\x14\xa2\x31\x89\x26\x10\xa8\x0c\x06\xcf\xd0\x0b\x3b\x08\x40\x57\xb9\x34\x49\x2d\xbf\x61\x16\x8d\x31\x0b\x1e\x9f\xc2\x86\x76\xc0\xde\x85\x95\x89\xb0\x56\xba\x06\x76\x7f\x83\x7d\x95\xda\x79\xee\x6f\xcc\x3a\x61\x5c\xe2\xd4\x5e\x02\x00\xa7\x31\x59\x72\x1c\x2f\xa0\x52\x6e\xab\x4b\x07\xc7\x0f\xdf\x3a\x97\xbf\x24\x99\x67\x67\xa5\xbd\x54\x18\x95\x4a\xbf\xc3\x2a\x26\x8c\x46\xc1\x43\xaf\xd3\x0b\x6f\x56\x39\xa1\x83\x7a\x17\xab\x3f\x5c\x92\x8a\xa2\x85\xe8\x51\x3f\xea\x56\x98\xac\xa5\xec\x51\x2f\xa7\xa5\x31\x32\xaf\x7f\xfe\xbf\xdc\x44\xbd\x9f\x49\x27\xd4\xce\x9e\x8e\xcc\xc9\x9a\x5f\xb2\xb8\xba\x03\xe7\x97\x69\xc4\x72\x85\x2d\x18\x8d\x31\xdb\xc0\x84\x6c\x0e\xe1\x84\x28\xec\x23\xd4\x2c\x72\xa4\xab\x1c\xa1\x11\x9b\x2f\xea\x22\xe9\x0b\x90\x35\x5d\xf2\xe5\xb1\xcd\x3e\xfa\x09\x00\x00\xff\xff\x3e\x1f\x96\x35\xbf\x02\x00\x00")

func migrations018_saleSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations018_saleSql,
		"migrations/018_sale.sql",
	)
}

func migrations018_saleSql() (*asset, error) {
	bytes, err := migrations018_saleSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/018_sale.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations019_add_timestamps_2_reviewable_reqSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xb1\xca\xc2\x30\x18\x45\xf7\x3c\xc5\xdd\x7f\xfa\x04\x9d\xfa\x9b\x6e\xb1\x95\x92\xcc\x25\xda\x0f\x0d\x98\x26\xa6\x5f\x0c\xf8\xf4\x0e\x0e\x16\x1c\x4a\xd7\x0b\xf7\x70\x4e\x55\xe1\xcf\xbb\x6b\xb2\x4c\x30\x51\x88\x46\xe9\x76\x80\x6e\xfe\x55\x8b\x44\x4f\x47\xc5\x9e\xef\x34\x26\x7a\x64\x5a\x18\x8d\x94\x38\xf4\xca\x1c\x3b\x5c\x12\x59\xa6\x69\xb4\x0c\x76\x9e\x16\xb6\x3e\xa2\x38\xbe\x85\xfc\x59\xf0\x0a\x33\xa1\xeb\x35\x3a\xa3\x54\xbd\x03\x9d\xe3\xb4\x0f\x2d\xd6\x19\x32\x94\x79\x33\x44\x0e\xfd\xe9\xb7\x64\x53\x72\x7d\xfb\x5a\xd6\xe2\x1d\x00\x00\xff\xff\x43\x21\xd4\xe7\x47\x01\x00\x00")

func migrations019_add_timestamps_2_reviewable_reqSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations019_add_timestamps_2_reviewable_reqSql,
		"migrations/019_add_timestamps_2_reviewable_req.sql",
	)
}

func migrations019_add_timestamps_2_reviewable_reqSql() (*asset, error) {
	bytes, err := migrations019_add_timestamps_2_reviewable_reqSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/019_add_timestamps_2_reviewable_req.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations020_alter_sales_detailsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4e\xcc\x49\x55\x80\x08\x38\xfb\xfb\x84\xfa\xfa\x29\xa4\xa4\x96\x24\x66\xe6\x14\x2b\x84\x44\x06\xb8\x2a\x64\x15\xe7\xe7\x25\x29\x84\x06\x7b\xfa\xb9\x2b\x94\xe4\xc7\x83\xb9\x1a\x50\x15\x56\x56\x20\xae\xa6\x35\x17\x17\xb2\xf9\x2e\xf9\xe5\x79\xa4\xd8\x50\x92\x5a\x51\x62\xcd\x05\x08\x00\x00\xff\xff\xcc\x19\xc3\x59\xa2\x00\x00\x00")

func migrations020_alter_sales_detailsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations020_alter_sales_detailsSql,
		"migrations/020_alter_sales_details.sql",
	)
}

func migrations020_alter_sales_detailsSql() (*asset, error) {
	bytes, err := migrations020_alter_sales_detailsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/020_alter_sales_details.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations021_sale_quote_assetsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x6b\x84\x30\x10\x85\xef\xf9\x15\xef\xa8\xb4\x82\xed\xa1\x17\xa1\x90\x26\x01\x4b\x63\x2c\xc1\xf4\x2a\x69\x9b\x16\x17\x57\x5d\x13\xd9\xbf\xbf\xb0\x7b\x11\xd6\xd5\x3d\xcf\xf7\x66\xbe\x79\x49\x82\x87\x7d\xf3\x3f\xda\xe0\x60\x06\x42\x65\x25\x34\x2a\xfa\x26\x05\xbc\x6d\x1d\x28\xe7\x60\xa5\x34\x85\xc2\x61\xea\x83\xab\xad\xf7\x2e\x78\xec\x7c\xdf\x7d\x67\xd7\x3c\xd7\xe5\xe7\x42\x60\x83\x1c\xc6\xe6\xc7\x2d\x30\xb3\xeb\xbf\xee\xcf\x4e\x6d\xa8\x67\x4b\xf1\x45\x35\xcb\xa9\x8e\x9e\x5e\x62\x00\xaa\xac\xa0\x8c\x94\x19\x21\xf3\xaf\x78\x7f\xec\xee\xf6\xf4\x1b\xa2\x0b\x16\xeb\xda\xb8\xe1\xbb\x9e\x3a\xf7\x01\x65\x0a\xa1\xdf\x59\xf4\x9c\x3e\xa6\x31\x58\x2e\xd8\x07\xa2\xcb\xe8\x15\x69\x9c\x91\x53\x00\x00\x00\xff\xff\x98\x9b\x7e\x23\xbd\x01\x00\x00")

func migrations021_sale_quote_assetsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations021_sale_quote_assetsSql,
		"migrations/021_sale_quote_assets.sql",
	)
}

func migrations021_sale_quote_assetsSql() (*asset, error) {
	bytes, err := migrations021_sale_quote_assetsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/021_sale_quote_assets.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations022_sale_quote_assetsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4e\xcc\x49\x55\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\x4a\x2c\x4e\x8d\x4f\x2e\x2d\x2a\x4a\xcd\x2b\x89\x4f\x4e\x2c\x50\xf0\x0b\xf5\x75\x0d\xf2\x74\xd6\x30\x32\xd0\x31\xd0\x54\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\x51\x70\x71\x75\x73\x0c\xf5\x09\x51\x30\xb0\x26\x6c\x5c\x46\x62\x51\x0a\x91\x66\x71\x21\x3b\xd5\x25\xbf\x3c\x0f\xd3\x74\x97\x20\xff\x00\x5c\xae\xc5\xe2\x18\x0c\xe5\x30\xd7\x58\x73\x01\x02\x00\x00\xff\xff\x38\xd7\x1b\xb9\x17\x01\x00\x00")

func migrations022_sale_quote_assetsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations022_sale_quote_assetsSql,
		"migrations/022_sale_quote_assets.sql",
	)
}

func migrations022_sale_quote_assetsSql() (*asset, error) {
	bytes, err := migrations022_sale_quote_assetsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/022_sale_quote_assets.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations023_sale_current_capSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcb\x41\x0b\xc2\x20\x18\x06\xe0\xbb\xbf\xe2\x3d\x6e\xd4\x40\xba\x8e\x02\x53\xa3\xe8\x9b\x86\xf8\x9d\x43\x86\x44\x50\x6b\xd8\xa2\xbf\xdf\x75\xd0\xee\xcf\xd3\x34\x58\x3d\xef\xb7\x92\xa6\x0c\x1e\x85\xa2\x68\x03\xa2\xda\x93\xc5\x3b\x3d\x32\x4c\xf0\x17\x68\x4f\xdc\x39\xf4\x9f\x52\xf2\x30\x5d\xfb\x34\xb6\x42\xcc\xa7\x79\x7d\x87\xff\xab\x8c\x59\xa8\x70\xdc\xd9\x70\xd2\xd5\x46\xae\x65\x0d\xe7\x23\x1c\x13\x41\x1f\xad\x3e\xa3\x9a\xcb\xdd\x16\xb2\x86\xb1\x07\xc5\x14\x21\x5b\xf1\x0b\x00\x00\xff\xff\x3a\x90\x7e\x38\xae\x00\x00\x00")

func migrations023_sale_current_capSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations023_sale_current_capSql,
		"migrations/023_sale_current_cap.sql",
	)
}

func migrations023_sale_current_capSql() (*asset, error) {
	bytes, err := migrations023_sale_current_capSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/023_sale_current_cap.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations024_sale_typeSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4e\xcc\x49\x55\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x03\xf3\xe3\x4b\x2a\x0b\x52\x15\x3c\xfd\x42\x14\xfc\xfc\x43\x14\xfc\x42\x7d\x7c\x14\x5c\x5c\xdd\x1c\x43\x7d\x42\x14\x0c\xad\xb9\xb8\x90\x4d\x73\xc9\x2f\xcf\xc3\x34\xcf\x25\xc8\x3f\x00\x66\x20\xc2\x44\x6b\x2e\x40\x00\x00\x00\xff\xff\x55\x8f\xeb\xc7\x88\x00\x00\x00")

func migrations024_sale_typeSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations024_sale_typeSql,
		"migrations/024_sale_type.sql",
	)
}

func migrations024_sale_typeSql() (*asset, error) {
	bytes, err := migrations024_sale_typeSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/024_sale_type.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations025_ledger_changesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x6a\xc3\x30\x0c\x86\xef\x7a\x0a\x1d\x3b\xd6\x3e\x41\x4f\xed\xea\x0d\x43\x48\x47\xeb\x42\x6f\xc6\x8b\xd5\xd4\xd0\xd8\x46\xf1\x58\xfc\xf6\x23\x23\x81\x6c\x60\x98\x4e\x3a\x7c\xfa\xf5\xf3\x6d\x36\xf8\xdc\xb9\x96\x4d\x22\xbc\x44\x80\x97\x93\xd8\x29\x81\x6a\xb7\xaf\x04\xde\x5d\x9f\x02\x67\xfd\x20\xdb\x12\xeb\xe6\x6e\x7c\x4b\x3d\xac\x00\x31\x0d\xda\x59\x9c\x67\x2f\xdf\x64\xad\xc6\xad\x3e\x2a\xac\x2f\x55\xb5\x06\xc4\x10\xff\xc1\xb0\x25\xd6\xfe\xb3\xfb\x20\x46\x9c\x80\x3f\x0c\xdd\x6e\xd4\xa4\x39\xa7\xc0\xf8\xc4\x59\xa7\x1c\xa9\xcc\x44\x93\x1f\xc1\xcc\x8d\x94\xb8\xaa\xdf\x0c\x3c\x6d\x01\x1a\xa6\xd1\x85\xf3\x96\x06\x0c\xbe\xe0\x00\x57\x3f\x02\xd6\x8b\xbf\xe3\xf1\xd2\xe6\x21\x7c\x79\x80\xc3\xe9\xf8\x3e\xd9\x94\xaf\x28\xae\xf2\xac\xce\x85\xcc\xed\x77\x00\x00\x00\xff\xff\x53\x62\xbb\xdf\x8c\x01\x00\x00")

func migrations025_ledger_changesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations025_ledger_changesSql,
		"migrations/025_ledger_changes.sql",
	)
}

func migrations025_ledger_changesSql() (*asset, error) {
	bytes, err := migrations025_ledger_changesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/025_ledger_changes.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations026_contractsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x4f\x6f\xaa\x40\x14\xc5\xf7\xf3\x29\xee\x52\xf2\x9e\xc9\xdb\xbc\xb7\x31\xaf\x09\xe2\x58\x89\xf8\x27\x88\x4d\x4d\xd3\x90\x29\x4c\xea\x6d\x74\xc6\xcc\x5c\x6a\xdb\x4f\xdf\x08\x62\xa1\x86\xca\xa2\x8b\xce\x6a\x02\xe7\x9e\xdc\xf3\x3b\x84\x6e\x17\x7e\x6d\xf1\xd1\x08\x92\xb0\xdc\x31\xe6\x85\xdc\x8d\x38\x44\x6e\x3f\xe0\xb0\x46\x4b\xda\xbc\xc6\x89\x56\x64\x44\x42\x96\x75\x18\x00\xa6\x50\x3b\x7d\xff\xda\x9f\x46\xc5\x7d\x3a\x8b\x60\xba\x0c\x02\xf0\x46\xdc\x1b\x43\x07\x53\xb8\xfa\x0f\x7f\x9c\xdf\x0c\xa0\x74\xd1\xa6\xd0\xde\xb8\xa1\x37\x72\xc3\xce\xdf\x7f\xce\x69\x2e\xd7\x65\x96\xf4\x56\x9a\xd2\xbf\x49\x27\x6d\x62\xf4\xfe\x63\x8f\x26\x9d\x25\x61\x28\x26\xdc\xca\x42\x17\xf9\x13\xbe\x88\xdc\xc9\x1c\xf6\x48\x6b\x9d\x11\xe4\xef\xde\xb4\x92\x75\x7f\x95\x56\xa6\xda\xcf\xa1\x42\x42\xb1\x89\x53\x49\x02\x37\x16\x9e\xac\x56\x0f\x50\xe7\x53\xe8\x9e\x35\x26\xd2\xd6\x39\xde\xdd\x1f\xee\x03\x3e\x74\x97\x41\x2d\x03\xc9\x0a\xf3\x13\xf0\x4f\x9e\xf3\xd0\x9f\xb8\xe1\x0a\xc6\x7c\x75\x80\xef\x30\xa7\x77\xa9\xd3\x72\xcf\xbc\xdb\xf2\x69\x8c\xe9\x97\xbd\x56\x75\xa7\x82\xcb\xc0\x87\xd3\x14\x5a\x64\xb4\xbe\xf8\x01\x18\x29\x48\xa6\xb1\xa0\x76\xd0\xf3\x90\xc5\x10\xa0\x4a\xe5\x0b\x68\xd5\x9c\xb3\xb6\x7c\x1b\x3c\x68\x77\x19\xc9\x6f\xe0\x63\xa4\xb0\x5a\xc1\x8f\xe5\x73\x0c\x7a\x06\xa8\xfa\x8f\x18\xe8\xbd\x62\x6c\x10\xce\xe6\x47\x60\xfe\x10\xf8\xad\xbf\x88\x16\xe7\x8e\xbd\x96\xba\xb2\x99\xf6\xfa\xe3\xa6\xbd\xf7\x00\x00\x00\xff\xff\xee\x63\x04\x38\xbe\x04\x00\x00")

func migrations026_contractsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations026_contractsSql,
		"migrations/026_contracts.sql",
	)
}

func migrations026_contractsSql() (*asset, error) {
	bytes, err := migrations026_contractsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/026_contracts.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations027_reviewable_request_tasksSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\xb1\xca\xc2\x30\x14\x46\xf7\x3c\xc5\xdd\x3a\xfc\x14\xfe\xbd\x53\x34\x11\x84\x98\x4a\x49\xc0\xad\x44\x7a\x29\xc1\x18\x6b\x12\xad\x20\xbe\xbb\x8b\xd0\x2a\x42\x15\xef\x7e\x0e\xf7\x7c\x79\x0e\x7f\x7b\xdb\x06\x93\x10\x74\x47\x08\x15\x8a\x57\xa0\xe8\x4c\x70\x08\x78\xb6\xd8\x9b\xad\xc3\x3a\xe0\xf1\x84\x31\x01\x65\x0c\x8c\x73\x75\x32\x71\x17\xe1\x71\x4b\xa9\x00\x40\x96\x0a\xa4\x16\x02\x18\x5f\x50\x2d\x14\xfc\x17\x9f\xd8\x3a\xf4\x8d\xf5\xed\x60\xfc\xc9\x86\x97\x84\xc1\x1b\x57\x37\x98\x8c\x75\x11\x14\xdf\xa8\x37\xb6\xec\x7a\xcb\x0a\x42\xc6\xf5\xec\xd0\xfb\xc9\x7e\x56\x95\x6b\x98\x97\x42\xaf\xe4\xb0\xc3\xe4\x67\x63\xea\xa9\xf7\x2b\xf2\xb5\xad\x20\xf7\x00\x00\x00\xff\xff\xe8\xb0\xf0\x9f\xbd\x01\x00\x00")

func migrations027_reviewable_request_tasksSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations027_reviewable_request_tasksSql,
		"migrations/027_reviewable_request_tasks.sql",
	)
}

func migrations027_reviewable_request_tasksSql() (*asset, error) {
	bytes, err := migrations027_reviewable_request_tasksSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/027_reviewable_request_tasks.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations028_add_customer_details_to_contractSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcd\x31\xaa\xc2\x30\x18\x07\xf0\x3d\xa7\xf8\x6f\x1d\x1e\x3d\x41\xa7\x3c\x93\x42\xe1\xb3\x95\x36\x01\xb7\x52\x6b\xd0\x88\x4d\x24\xf9\x44\x44\xbc\xbb\x93\x20\x38\x78\x82\x5f\x59\xe2\x6f\xf1\x87\x34\xb1\x83\xbd\x08\x49\x46\xf7\x30\xf2\x9f\x34\x8e\x3e\x73\x4c\xf7\x71\x8e\x81\xd3\x34\x73\x86\x54\x0a\xab\x8e\xec\xba\xc5\x7c\xcd\x1c\x17\x97\xc6\xbd\xe3\xc9\x9f\x33\x4e\x39\x86\x1d\xda\xce\xa0\xb5\x44\x50\xba\x96\x96\x0c\x8a\xc7\xb3\xa8\x84\xf8\x64\x54\xbc\x85\x1f\x90\xea\xbb\xcd\x5b\x6a\x6a\xe8\x6d\x33\x98\xe1\xcb\xac\xc4\x2b\x00\x00\xff\xff\xaf\xf4\x61\x98\xbe\x00\x00\x00")

func migrations028_add_customer_details_to_contractSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations028_add_customer_details_to_contractSql,
		"migrations/028_add_customer_details_to_contract.sql",
	)
}

func migrations028_add_customer_details_to_contractSql() (*asset, error) {
	bytes, err := migrations028_add_customer_details_to_contractSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/028_add_customer_details_to_contract.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations029_offerSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd2\x31\x6f\xf2\x30\x10\x06\xe0\xdd\xbf\xe2\x46\xd0\xf7\x31\x74\x68\x17\x26\x03\x2e\xb5\x9a\x26\xc8\x84\xaa\x4c\x96\x49\x4c\x39\x89\xd8\xa9\x7d\x51\x44\x7f\x7d\xa5\xd0\xa1\x24\xa5\xc2\x93\x65\x3d\x27\xbd\x67\xbd\x93\x09\xfc\xab\xf0\x3d\x18\xb2\xb0\xa9\x19\x9b\x2b\xc1\x73\x01\x39\x9f\x25\x02\x0e\x18\xc9\x87\x93\xf6\xfb\xbd\x0d\x6c\xc4\x00\x00\xb0\x84\xc1\x99\xc9\xe5\x5a\x28\xc9\x13\x00\x48\xb3\x1c\xd2\x4d\x92\xfc\xef\x74\x37\xa9\x2f\x67\x66\x72\x29\xd3\xfc\x7c\xef\xe9\xd6\x0d\xf4\x2b\x57\xf3\x27\xae\x46\xf7\x0f\xe3\x9e\xde\x99\x68\xb5\x89\xd1\xd2\x50\xdf\x0d\xf4\x47\xe3\xa9\xcf\xaf\x6b\x8c\x7a\xd7\x9c\x7a\x5b\x66\x59\x22\x78\xfa\x4b\x6e\x74\x48\x68\x8e\xfa\x9c\xa8\xf2\x8d\xa3\x3f\xb6\x2c\x9a\x10\xac\xa3\x1b\x75\x1d\xb0\xb0\xc3\xff\xbe\xa2\x31\xea\xc2\xb8\xc2\x1e\x6d\x79\x43\xee\x22\x58\x43\xb6\xd4\x86\x00\x08\x2b\x1b\xc9\x54\x35\xb4\x48\x07\xdf\x50\xf7\x02\x9f\xde\xd9\xde\xd4\x4a\xc9\x17\xae\xb6\xf0\x2c\xb6\x30\xc2\x72\xcc\xc6\x53\xc6\x7e\xf6\x68\xe1\x5b\xc7\x16\x2a\x5b\x7d\xd7\x48\x3e\x82\x78\x93\xeb\x7c\x7d\x59\xa8\xe9\x57\x00\x00\x00\xff\xff\x9f\xbf\x5d\x01\x7c\x02\x00\x00")

func migrations029_offerSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations029_offerSql,
		"migrations/029_offer.sql",
	)
}

func migrations029_offerSql() (*asset, error) {
	bytes, err := migrations029_offerSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/029_offer.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations030_v2Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x4d\x93\xdb\x36\x0c\xbd\xfb\x57\xe0\xb8\x3b\x5d\x67\x3a\x49\xa7\x97\x5c\xdb\x5b\x26\xbd\x6c\xa6\xbd\x71\x20\x12\xb6\x99\xd0\xa4\x96\x00\xd7\x76\x7f\x7d\x47\xa2\xa5\xd5\x07\xb5\x96\xa7\xf1\xc9\x23\x3c\x00\x0f\x8f\x00\x28\x6d\xb7\xf0\xcb\xd1\xee\x23\x0a\xc1\xb7\x7a\xb3\xd9\xe8\x48\xcd\x7f\xc1\xca\x11\x38\x32\x7b\x8a\x0c\x0f\x1b\x00\x00\x6b\xa0\xb2\x7b\xeb\x05\x7c\x10\xf0\xc9\x39\xa8\xa3\x3d\x62\xbc\xc0\x0f\xba\x3c\xb5\x18\xa6\x97\x44\x5e\xd3\x14\x99\xad\x07\xe4\x03\xe8\x03\x46\xd4\x42\xf1\xe1\xf7\xdf\x1e\x27\x80\x3a\xd2\xab\x0d\x89\xd5\x4d\xa4\x9c\x95\x0e\xc9\x0b\xcc\xb3\x18\x14\x04\xa1\xf3\xf4\xb9\x76\x81\xc9\x28\x14\x10\x7b\x24\x16\x3c\xd6\x70\xb2\x72\x08\x29\x3f\x81\x7f\x83\xa7\xcd\xe3\xe7\x89\x08\x12\xd1\x33\x6a\xb1\xc1\x2f\x2b\xf1\x04\xdb\xed\x16\x74\xf0\x6c\x59\xf8\x2a\xdc\x9b\x1a\xc8\xf0\xe9\x23\xb0\xdd\x7b\xbb\xb3\x1a\xbd\x40\x65\x85\x3f\xc0\xdf\x04\x7c\x08\xc9\x99\x36\xd0\x29\xc4\x78\x01\x09\x70\x4c\xfa\x00\x58\x35\xc4\x4c\xaa\x9d\xd5\xd8\x64\x6f\x53\x6f\xb7\x00\x61\x07\xd6\x70\x13\x94\x1b\xa0\x65\x4e\x04\x27\xeb\x1c\x54\x04\x07\xf4\xc6\x91\x01\x93\xa2\xf5\xfb\x8e\x89\xf5\x4c\x51\xf8\xc3\xd2\x31\x7c\xfd\xeb\x19\xbe\x7e\xfb\xf2\x65\x7e\xa2\x39\x80\xea\x4b\xb1\x5e\xa8\x89\xd8\x79\x8c\x50\xad\xc4\xaa\x15\xf3\x1d\x8d\xb3\x0b\xd6\x7d\x65\x2a\x44\xd3\x92\x2c\x85\x46\x9d\x0f\xba\x27\x0c\xaf\x18\x2f\xd6\xef\x47\xc4\x33\x36\xd4\x14\x73\xc4\xbe\x39\x0a\x11\xc9\xbf\x92\x0b\x35\xe5\x26\x19\xdb\x22\x71\x72\x52\xb2\x1c\xa9\x6b\xab\xf1\xf3\x57\x74\xd6\x28\xdc\x35\xcc\xde\x29\x7a\xd2\x8c\xd9\xab\xa2\x5d\x88\xef\x6a\xd5\xbb\xcd\x1b\xb3\xd3\xfc\x80\x7e\x4f\xb9\x35\xe5\xac\xac\x81\xee\x77\xed\x51\x80\x51\xee\x50\xaf\xc0\x34\xe7\xa1\x7c\x3a\x56\x14\x01\xae\x80\x09\x86\x76\x3b\xd2\x9d\x61\x09\xe3\x25\x5e\x94\x5c\x6a\x5a\xc6\xd4\x78\x71\x01\x3b\x46\xad\xc0\x23\xcc\xb0\x70\xeb\x0d\x9d\x21\xf8\x59\xed\x6d\xe1\x4f\x83\x7c\x33\xb5\xae\x6d\x94\x75\xba\xbd\xca\xd0\x98\x48\xcc\x0b\x5d\x57\xe2\x96\xbc\x7d\x49\x03\x8a\x6f\x09\xaf\xb1\x66\x94\x2a\x74\xe8\x35\xad\xa6\x94\x03\xaa\xc2\xf6\x59\x4d\xb8\x45\x32\x93\x28\x1d\x0c\xfd\x8f\xea\xde\xb8\x2f\x55\xd7\xcf\xe2\xda\xfa\x72\xf3\x16\x4a\x6b\xfb\x67\xfa\xd0\x90\xa0\x75\x0c\xdf\x39\xf8\x6a\x64\xb9\x6b\x17\x8d\x3c\x39\xa4\xa8\xef\x51\x25\x57\x5a\x63\x14\xab\x6d\x8d\x5e\x54\x9e\x8a\x9f\x73\xa4\x57\x8d\x07\xd6\x35\xc7\x37\x98\xcd\x56\x9b\x3c\xf3\xdd\x5e\x9c\x67\x2a\xce\x57\xb1\xa4\x37\x3e\x4f\x60\xcd\x23\x9c\x0e\x14\x69\xc8\xd2\x72\x1f\x75\xaa\x51\x73\xb1\xd3\xa9\xf9\xab\x62\x73\x95\xf0\x6a\x8d\xae\xf0\x10\x57\xb4\x76\xce\x42\xeb\xa0\x3b\x8a\xed\x8d\xb6\xa8\x62\xa4\xef\xa4\x45\x45\x42\x0e\x1e\x9e\xff\xfc\xe7\x79\x12\xa1\x25\xa6\x8a\xed\xd9\x19\x59\xb2\xae\x63\xeb\xf8\x06\x5e\xe4\x98\x15\xbc\xf5\xca\x32\x72\x49\xb5\xb9\xd7\x65\x79\x92\xd0\x39\x25\xc8\x3f\x78\x56\x40\x4d\xde\x58\xbf\x5f\xb0\xd2\x59\x28\x7a\x74\xaa\x1c\x7a\x3e\x41\x8c\x6e\xf5\x1a\xe4\xb0\x13\xa5\xb1\x06\x9f\x8e\x14\xad\x7e\xf8\xf8\xe9\x09\x7e\x7d\x9c\xe8\x1b\xcd\x2d\x4c\x85\x4c\x4a\xa7\x18\xc9\xdf\x8c\xd7\x62\xd7\x04\x6d\x0a\x29\x37\x44\x38\x79\x8a\x6a\xfd\x96\x6e\x53\xb6\xb3\xbe\x02\x6c\x68\x87\xc9\x89\x7a\x49\x41\xd6\x7b\xb1\x60\x94\xfb\x36\x24\x79\x73\x9f\xc3\x72\x73\x95\x27\x63\x50\x41\xb1\x6d\x36\xc3\x2f\x96\x3f\xc2\xc9\x6f\x36\x26\x86\x7a\xf2\xc1\xa2\x91\x35\x1a\xfa\x3c\xb4\x8d\xde\xe3\x4b\x80\xc9\x3b\x45\x09\xd2\xdf\xe9\x25\x63\x7f\x25\x96\x8c\x83\xdb\xb0\x64\x2e\xed\xdb\x12\xae\xb4\x46\x4b\xb8\x3c\x50\xbd\xe5\xbf\x00\x00\x00\xff\xff\x34\x8f\xb6\xec\xe7\x0d\x00\x00")

func migrations030_v2SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations030_v2Sql,
		"migrations/030_v2.sql",
	)
}

func migrations030_v2Sql() (*asset, error) {
	bytes, err := migrations030_v2SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/030_v2.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations031_notifiersSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x93\x51\x6f\x9b\x30\x14\x85\xdf\xf9\x15\xe7\xa1\x52\x1b\xad\xec\x0f\x58\x7b\x60\x70\x61\x48\xa9\x89\x0c\x28\x7d\x43\x56\x73\x47\x2d\x11\x20\xb6\xd3\x2e\xff\x7e\xa2\x6d\xb2\xae\x4d\x96\x4d\xda\x43\xdf\x2c\xeb\xea\x3b\xe7\x9e\x63\x87\x21\x3e\xad\x4d\x6b\xb5\x67\xd4\x63\x10\x86\x41\x18\xe2\x66\xeb\x3c\x9c\xd7\x3b\x68\x87\xa1\x67\x74\xa6\xe7\xe9\xfc\x3c\x39\x58\x78\xcb\xda\x3b\x18\x3f\xdd\x3a\x7e\x60\xab\x3b\x38\x1e\xf5\x13\xc8\x79\xed\x79\xcd\xbd\x77\x13\x30\x56\x14\x55\x84\x42\x41\xd1\x62\x1e\xc5\x84\xb4\x96\x71\x95\x17\x12\x3d\x3f\x36\xf7\xc6\xf9\xc1\xee\x9a\x8e\x57\x2d\xdb\xc6\xf1\xa6\xe9\x07\x6f\xbe\xef\xae\x66\x50\x54\xd5\x4a\x96\xf0\xd6\xb4\x2d\x5b\x44\x25\x2e\x2e\x90\x50\x3c\x8f\x14\x61\xd4\xbb\x6e\xd0\x2b\x3c\x68\x7b\x77\xaf\xad\xc0\xda\xac\xb0\xdd\x9a\x95\xc0\x57\xca\x72\x79\x18\xf8\x82\x38\x2a\xab\x2b\x49\xcb\xcf\x8e\x37\x5b\xee\xef\x78\x42\x79\xfe\xe1\x67\x02\x0b\x52\x69\xa1\x6e\x30\xb6\x7b\xe1\xcb\xe3\xbe\x2e\xaf\xf7\xc4\x99\x78\xb1\x06\x49\x4b\x01\x92\x89\x98\x8c\xcd\x23\x99\xd5\x51\x46\x18\xbb\xb1\x75\x9b\x4e\x04\xfb\xe5\x2b\x95\x67\x19\x29\xfc\x0e\x75\x8d\xe9\x1d\x5b\x8f\x28\xad\x48\x21\x97\x25\xa9\x0a\x85\x7c\x3b\x86\xb4\x50\xa0\x28\xfe\x06\x55\x2c\x41\xb7\x14\xd7\x15\x61\xa1\x8a\x98\x92\x5a\xd1\xb9\x18\x45\x10\x9c\x2b\x61\xef\xe7\xc3\xa4\xff\xca\xd0\x7f\x88\xfd\x4c\xdc\xff\x10\xf3\xb1\xa0\x44\x10\xbc\xfe\x46\xc9\xf0\xd8\x07\x41\xa2\x8a\xc5\x41\x3f\x4f\x41\xb7\x79\x59\x95\xa7\x1e\xc0\xfb\xce\xc5\x33\xe1\xd0\xd2\x2f\xc4\x9f\xdb\x7e\xa9\xe3\xfa\xa9\x8a\x99\x38\xe5\xe3\xbd\xfe\x5f\xe9\x1e\x59\xff\x8d\xe0\xcf\x00\x00\x00\xff\xff\x2a\x17\x93\x69\x51\x04\x00\x00")

func migrations031_notifiersSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations031_notifiersSql,
		"migrations/031_notifiers.sql",
	)
}

func migrations031_notifiersSql() (*asset, error) {
	bytes, err := migrations031_notifiersSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/031_notifiers.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations032_asset_pairsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\x4e\xc5\x30\x0c\x45\xe7\xf8\x2b\x3c\xbe\x27\xe8\x86\x58\xba\xf2\x0b\xcc\x91\xeb\x5a\xa9\xa5\x34\x09\x8e\x43\x05\x5f\x8f\x0a\x12\xea\xc0\x80\x07\xeb\xea\xea\xdc\xe1\x4c\x13\x3e\xec\x9a\x8c\x5c\xf0\xb5\x01\x00\x9b\x9c\xd9\x69\xc9\x82\xd4\xbb\x78\x6c\xa4\xd6\xf1\x06\x21\x2c\xd4\x05\x79\x23\x23\x76\x31\x7c\x27\xfb\xd0\x92\x6e\xcf\x4f\x77\x2c\xd5\xb1\x8c\x9c\x1f\x21\x84\xb7\x51\xfd\x3f\x1c\x0f\x33\x29\x1e\x9b\x29\x0b\xe2\xa2\x49\x8b\xe3\xcf\x5d\xb9\x2c\x6b\x12\x8b\x9c\x6b\x97\xe8\xba\x0b\x9e\xaf\x3b\xed\x0d\x0f\xf5\xad\x0e\xff\x6e\xf0\xb3\x16\xf9\x5d\x42\xb8\xcf\x00\x57\xc1\x97\x7a\x14\x80\xd5\x6a\xfb\xc3\x8f\xa9\x33\xad\x32\xc3\x57\x00\x00\x00\xff\xff\xd0\xca\x19\xca\x13\x01\x00\x00")

func migrations032_asset_pairsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations032_asset_pairsSql,
		"migrations/032_asset_pairs.sql",
	)
}

func migrations032_asset_pairsSql() (*asset, error) {
	bytes, err := migrations032_asset_pairsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/032_asset_pairs.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations033_pollsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xcb\x0e\xda\x30\x10\x3c\xe3\xaf\x98\x23\xa8\xe5\x0b\x38\x55\x6a\x55\x21\x41\xa8\x04\x9c\x2d\x27\x5e\x60\x5b\xc7\x9b\xda\x1b\x20\xfd\xfa\x2a\x6d\xa8\x78\x04\xa9\x37\xcb\x33\xa3\x9d\x9d\xd9\xf9\x1c\x1f\x6a\x3e\x26\xa7\x84\x7d\x63\x8c\xa9\x12\xf5\x6f\x75\x65\x20\x34\x12\x42\xc6\xd4\x4c\xd8\x03\x25\x1f\x39\x2a\xa2\x28\x62\x1b\xc2\x47\x03\x34\x94\x6a\xce\x99\x25\x5a\xed\x1a\xc2\x33\x1e\xdb\xba\xa4\x64\xe5\x60\xab\x93\x70\x45\xf9\x85\xe1\x9d\x3a\x7c\xcf\x12\xcb\x87\xef\xac\x2e\xa9\x55\xae\x09\xc0\x6e\xb9\xfe\xb2\xdd\x7d\x5a\x7f\xc3\x85\xf5\x24\xad\xe2\x0f\xf0\x4b\x22\xa1\xd8\xec\x50\xec\x57\xab\x5e\x44\xd1\xdf\x24\xff\x2f\x92\x4b\xa4\x64\xd9\x43\xe9\xfa\x68\x2d\x51\x6e\x83\xda\x26\xc9\x99\xfd\x1b\xce\x59\x94\x6c\x25\xf1\xc0\xa9\x76\xda\xe7\x90\xe8\x67\xcb\x89\x3c\x4a\x91\x40\x2e\x3e\xaf\xa5\xaf\x29\x79\x52\xc7\x21\x8f\xc4\xd0\x24\xae\x5d\xea\xf0\x83\x3a\x4c\xd9\xcf\xcc\x64\xb6\x78\xaa\xa8\x77\xd0\x57\x04\xb0\x1f\xad\x48\x42\xb0\xe3\x50\x2f\x1d\x5f\xeb\x4d\x2b\x2f\x76\x80\x3b\x3f\x1c\x3d\x5d\x51\x76\xf6\x36\x72\x53\x0c\xee\xf6\xdb\x65\xf1\x15\xa5\x26\x22\x4c\x07\xb4\x17\xde\x1f\xdf\x67\xb9\x44\x63\x7c\x92\x66\x58\x8c\x0f\xa0\x2b\x67\xcd\xc3\x15\x56\x2e\x57\xce\xd3\x62\x9c\xf3\x77\xd0\x3f\xce\xef\x00\x00\x00\xff\xff\xec\x5d\x7d\xbf\xd7\x02\x00\x00")

func migrations033_pollsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations033_pollsSql,
		"migrations/033_polls.sql",
	)
}

func migrations033_pollsSql() (*asset, error) {
	bytes, err := migrations033_pollsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/033_polls.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations034_poll_permission_typeSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\x31\x4f\xc3\x30\x10\x46\xf7\xfc\x8a\x6f\x03\x04\xa5\x4e\x89\x10\x0d\x53\x81\x0c\x48\x05\xa1\x2a\x1d\x98\x22\x37\x3d\x1c\x8b\xe4\xec\xda\x17\x15\xfe\x3d\x8a\xbb\xa0\xae\xdf\xd3\xbd\xd3\x9b\xcd\x70\x3d\x58\x13\xb4\x10\xb6\x3e\x5b\xad\xeb\x6a\x83\x7a\xf5\xb4\xae\xe0\x5d\xdf\x47\x9c\x16\x4f\x61\xb0\x31\x5a\xc7\x8d\xfc\x7a\x42\xfd\xf9\x51\xe1\x7d\xfb\x56\x6d\x5e\x9f\x2f\x73\x75\xa3\xae\x1e\xb3\xec\xbf\xeb\xc5\x1d\x39\x2d\x47\xc2\xde\xf1\x85\xa0\xed\x34\x1b\x42\x3a\xdf\xe9\xf6\x1b\xe2\x60\x59\xb0\xa3\x56\x8f\x91\x30\xe8\x1f\xf0\x38\x50\xb0\xed\xc9\x08\x13\x48\x0b\x05\x48\xa7\x39\x61\xcb\x32\x29\x17\x2a\x5f\xce\x55\x31\x57\x4b\xe4\x0f\x65\xb1\x28\xf3\x7b\xf8\x43\x39\x61\x32\x14\xe0\x46\x81\xfb\x42\x48\xff\x3a\xcd\xfb\xde\xb2\x81\xba\x2b\x9a\x29\xa9\x39\x6b\xb9\x8d\x87\x3e\xfb\x0b\x00\x00\xff\xff\xe8\xfd\x9d\x06\x07\x01\x00\x00")

func migrations034_poll_permission_typeSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations034_poll_permission_typeSql,
		"migrations/034_poll_permission_type.sql",
	)
}

func migrations034_poll_permission_typeSql() (*asset, error) {
	bytes, err := migrations034_poll_permission_typeSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/034_poll_permission_type.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations035_reingest_versionSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcd\xb1\xaa\xc2\x40\x10\x46\xe1\xfa\xfe\x4f\x31\x65\xc2\x25\x60\x1f\xb4\xf2\x15\xac\xc3\xba\x8e\x71\x70\x33\xbb\xcc\x4c\xd4\xc7\x17\xc1\x42\xd2\x9d\xe2\xc0\x37\x0c\xf4\xbf\xc8\x6c\x29\x98\x4e\x0d\x40\x36\xfe\x74\xa4\x73\x61\xf2\xb5\xb5\x6a\x31\xb5\x64\x69\x71\x74\xf8\x13\x9d\xd9\x63\x7a\xb0\xb9\x54\x25\xd1\x20\xad\x41\xba\x96\x42\xf9\xc6\xf9\x4e\xdd\x66\x39\xec\x69\xd7\xa3\x1f\x81\x5f\xeb\x58\x9f\x0a\x5c\xac\xb6\x2f\x25\x57\xe2\x97\x78\xf8\x06\x1d\xf1\x0e\x00\x00\xff\xff\xdf\x15\x3d\x4c\xa3\x00\x00\x00")

func migrations035_reingest_versionSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations035_reingest_versionSql,
		"migrations/035_reingest_version.sql",
	)
}

func migrations035_reingest_versionSql() (*asset, error) {
	bytes, err := migrations035_reingest_versionSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/035_reingest_version.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations036_whitelistSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x41\x6e\xe3\x30\x0c\x45\xf7\x3a\x05\x97\x0e\x26\x01\x32\x03\xcc\x6c\xb2\x9d\x2b\x74\x6d\xd0\x12\x9d\xb2\x95\x25\x95\xa4\xd3\xfa\xf6\x85\x1d\x24\x75\x5c\xa7\x45\x77\x82\xf8\xf9\xf9\xf0\xc9\xdd\x0e\x7e\x75\x7c\x14\x34\x82\x87\xe2\x9c\x17\x1a\x9f\x86\x4d\x24\x40\xef\x73\x9f\xac\xd6\x42\x9e\x5b\xf6\xb5\xf4\x91\x14\x2a\x07\xc0\x01\xa0\xe1\x23\x27\x83\x94\x0d\x52\x1f\xe3\xd6\x01\x60\x08\x42\xaa\x70\x42\xf1\x8f\x28\xd5\xdf\x7f\x9b\xf1\xbb\xcd\xd2\x70\x50\x68\x72\x8e\x84\xe9\xa6\x85\x92\xc9\x50\xdb\x50\x08\x96\x6e\xcf\x34\xc0\x93\xe6\xd4\xdc\xfc\x16\xe1\x0e\x65\x98\xaa\x15\x87\x8d\xdb\x1c\x16\xdc\x8a\x91\xea\x82\x62\xec\xb9\xa0\x71\x4e\x13\xf3\x44\xbd\x02\x0d\x70\xd5\x26\xab\x39\xcc\xe9\x17\xc2\xc9\xf9\x9e\x4b\x83\x4a\x35\x76\x63\x64\x90\xfa\x8e\x84\x7d\xf5\x67\xbf\xdd\x2f\x4d\x5e\xfa\x6c\x3f\x11\xaa\x92\x5d\x99\x7e\x7f\x62\x3a\x8f\xfd\x46\x54\x84\x3d\x7d\x39\x6c\x35\x56\x8c\x46\x32\x4b\x55\xc7\x0d\x83\xcf\xb1\xef\x12\x9c\x48\x74\xcc\x76\x9e\x04\x04\x6a\xb1\x8f\x06\xfb\x83\x73\xf3\xe3\xfa\x9f\x5f\xd3\x9a\x5f\x90\x5c\x2e\x86\xdc\x02\xbd\xb1\x9a\x5e\xac\x0f\x6e\x2a\x9f\xf5\x1f\xd5\x95\xfd\x7a\x54\x8f\x81\xee\x34\xdc\x39\xe4\x6b\xd3\x7b\x00\x00\x00\xff\xff\x15\x83\xee\x93\x06\x03\x00\x00")

func migrations036_whitelistSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations036_whitelistSql,
		"migrations/036_whitelist.sql",
	)
}

func migrations036_whitelistSql() (*asset, error) {
	bytes, err := migrations036_whitelistSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/036_whitelist.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations037_matchesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xcd\x4e\xc3\x30\x10\x84\xef\xfb\x14\x7b\x4c\x84\x2b\x15\x0e\x5c\x7a\xe5\x15\x38\x47\x1b\x7b\xd3\xac\x88\x7f\x58\xaf\x29\xe5\xe9\x51\x15\x04\x45\xa2\x11\x37\x6b\x66\x34\x1e\xed\xb7\xdb\xe1\x5d\x94\xa3\x92\x31\x3e\x17\x00\xaf\x7c\x79\x1a\x8d\x0b\x63\x24\xf3\x33\x57\xec\x00\x51\x02\x8e\x72\x94\x64\x98\xb2\x61\x6a\xcb\xe2\x00\x31\x17\x56\x32\xc9\x69\xb8\xe1\x4f\x13\xeb\x0d\x6f\xa4\xca\x03\xc5\xdc\x2e\x7a\x8b\xac\xe2\xbb\x87\xbd\xdb\xf7\xbf\x52\xaf\x2d\xdb\x3f\x62\x6b\x59\xad\x6c\xf8\x46\xea\x67\xd2\xee\xfe\xf1\xcf\xa6\xcd\x4c\x51\xf1\xbc\xf1\xcd\x7a\x9e\x30\x90\xa1\x49\xe4\x6a\x14\x0b\x9e\xc4\xe6\xdc\x56\x05\x3f\x72\x62\x07\x6b\x55\x24\x3d\xe3\x0b\x9f\xb1\xfb\x99\xe7\xae\x77\x38\x94\xd0\x43\x7f\x00\xb8\xe6\xf0\x94\x4f\x09\x20\x68\x2e\x5f\x1c\x64\x42\x7e\x97\x6a\xf5\x9b\x88\xa7\xea\x29\xf0\x01\x3e\x03\x00\x00\xff\xff\x4a\x32\x70\x57\xc0\x01\x00\x00")

func migrations037_matchesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations037_matchesSql,
		"migrations/037_matches.sql",
	)
}

func migrations037_matchesSql() (*asset, error) {
	bytes, err := migrations037_matchesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/037_matches.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations038_remove_sale_participationsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x4f\x6b\xe3\x30\x10\xc5\xef\xfa\x14\x6f\xd9\x43\x6c\xd6\x81\xec\xc2\x2e\x4b\x4c\x72\xea\x57\xe8\x59\xc8\xd2\x38\x19\x62\x4b\xee\x48\x6e\x12\x4a\xbf\x7b\x71\x4c\x83\x49\xd2\x3f\xb9\x89\x99\xdf\xbc\x79\xbc\xd1\x7c\x8e\x5f\x2d\x6f\xc4\x24\xc2\x63\xa7\x94\x15\x1a\x9e\xec\x1d\x1d\xd0\x19\x49\x6c\xb9\x33\x3e\x69\xaa\x6b\xb2\x29\xea\x68\x1a\xd2\xe7\x46\xe2\xe0\xa3\x66\x77\x40\xf0\xb7\x70\xf4\x91\xfd\x06\x55\x12\x22\x64\x59\x36\x96\x7f\xae\xd7\xb3\x97\xd6\x24\xbb\x25\x57\x04\x71\x24\xba\x0a\x61\xa7\xd9\xbd\xce\xf2\xe5\x92\x7d\xca\x0b\x98\x18\x29\x69\x1b\x1c\x15\xb8\x3d\x58\xd7\x24\xd3\x99\x1c\xfb\x2d\x09\x61\x0a\xa7\x63\x47\xef\x00\x56\xf8\x0f\xe3\x1d\xbe\x6d\x03\x3f\x56\x58\x94\xca\x49\xe8\x90\x4c\xd5\x10\xb8\x06\x1d\x38\xa6\x88\xeb\x20\x60\x4d\xb4\xc6\x51\xa9\xd4\x34\xd6\x87\xb0\xf7\xe7\x60\x47\x95\x1b\xb3\x99\x02\x00\x76\xa8\x78\x33\x6c\xf6\x21\xc1\xf7\x4d\x53\x9c\xea\xd3\x68\xd9\xe1\xd9\x88\xdd\x1a\xc9\xfe\xfe\xcb\x2f\xc0\x93\xf2\x47\x2a\x95\x89\xa4\x4d\x1b\xfa\xa1\xd3\xb7\x24\x6c\xb3\x3f\x8b\x62\x71\x29\xf2\xd4\x87\x74\x0f\x38\x5c\xea\xec\xe9\xf7\x95\xa7\x71\xed\x17\x50\x27\x6c\xe9\xd3\x65\x9d\x70\x6b\xe4\x88\x1d\x1d\x91\xb1\xcb\x55\x5e\xaa\xf1\x34\x77\xff\xd6\x52\xbd\x05\x00\x00\xff\xff\x76\x88\x4c\x9d\xf8\x02\x00\x00")

func migrations038_remove_sale_participationsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations038_remove_sale_participationsSql,
		"migrations/038_remove_sale_participations.sql",
	)
}

func migrations038_remove_sale_participationsSql() (*asset, error) {
	bytes, err := migrations038_remove_sale_participationsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/038_remove_sale_participations.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations039_sale_access_definition_typeSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcd\x31\x0a\x02\x41\x0c\x05\xd0\x7e\x4e\xf1\x7b\x59\xb0\xdf\xd6\x2b\x58\x2f\x71\x27\x23\x81\x6c\x32\x4c\x32\xa8\xb7\xb7\x12\x2c\xf4\x02\xef\x2d\x0b\x4e\x87\xdc\x07\x25\xe3\xda\x4b\x21\x4d\x1e\x48\xba\x29\x23\x48\x39\x40\xb5\x62\x77\x9d\x87\x81\xf6\x9d\x23\xb6\xca\x4d\x4c\x52\xdc\xb6\x7c\x75\x86\x58\xc2\x3c\x61\x53\x15\x95\x1b\x4d\x4d\x9c\xd7\x52\xbe\xf1\x8b\x3f\xec\x17\x5f\x87\xf7\x8f\x2f\x0d\xfc\x94\xc8\xf8\x33\xad\xe5\x1d\x00\x00\xff\xff\x5e\x65\x76\xd8\xaf\x00\x00\x00")

func migrations039_sale_access_definition_typeSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations039_sale_access_definition_typeSql,
		"migrations/039_sale_access_definition_type.sql",
	)
}

func migrations039_sale_access_definition_typeSql() (*asset, error) {
	bytes, err := migrations039_sale_access_definition_typeSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/039_sale_access_definition_type.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations040_offers_state_indexSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcd\xb1\xae\xc2\x30\x0c\x85\xe1\xdd\x4f\x71\xb6\xb6\xba\x37\x03\x0b\x4b\x45\x27\x5e\x81\x39\x8a\x88\x4b\x2d\x41\x1c\x39\x96\xda\xbe\x3d\x2a\x13\x0b\xdb\x19\xce\xaf\x2f\x04\xfc\xbd\xe4\x61\xc9\x19\xb7\x4a\x74\x37\x3e\xa6\x94\xcc\x1b\x74\x9e\xd9\x5a\x6c\x9e\x9c\xa3\x94\xbc\x41\x0b\x16\x69\xae\xb6\x47\xad\x6c\xc9\x45\x4b\x43\xef\x7b\xe5\x7f\xf4\x99\x3d\xc9\xb3\x85\x69\xea\x3e\x69\x94\xdc\x0d\x03\xd6\x85\x8d\x71\x7c\x70\xc1\xe9\x3c\x12\x7d\xab\x57\x5d\x0b\x51\x36\xad\xbf\xd4\xf1\x1d\x00\x00\xff\xff\xb2\xe1\x8a\xb3\xa5\x00\x00\x00")

func migrations040_offers_state_indexSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations040_offers_state_indexSql,
		"migrations/040_offers_state_index.sql",
	)
}

func migrations040_offers_state_indexSql() (*asset, error) {
	bytes, err := migrations040_offers_state_indexSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/040_offers_state_index.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations041_recovery_state_for_accountSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcd\x31\x0e\xc2\x30\x0c\x05\xd0\x3d\xa7\xf8\x3b\xaa\xc4\xde\x95\x2b\x30\x57\x26\x71\xab\x08\xd7\xae\x1c\x07\xc8\xed\x99\x90\x18\xe0\x04\x6f\x9a\x70\xda\xeb\xe6\x14\x8c\xeb\x91\x12\x49\xb0\x23\xe8\x26\x0c\xca\xd9\xba\x46\x03\x95\x82\x6c\xd2\x77\xc5\x7d\xe4\xc5\x39\xdb\x83\x7d\x2c\x2d\x28\x7a\x43\xd5\xe0\x8d\x1d\x6a\x01\xed\x22\x28\xbc\x52\x97\xc0\x79\x4e\xe9\x1b\xb8\xd8\x53\xff\x10\xc5\xed\xf8\x18\x75\x05\xbf\x6a\x8b\xf6\x4b\x9b\xd3\x3b\x00\x00\xff\xff\x3f\xcb\x4c\x0f\xb3\x00\x00\x00")

func migrations041_recovery_state_for_accountSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations041_recovery_state_for_accountSql,
		"migrations/041_recovery_state_for_account.sql",
	)
}

func migrations041_recovery_state_for_accountSql() (*asset, error) {
	bytes, err := migrations041_recovery_state_for_accountSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/041_recovery_state_for_account.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations042_swapSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\xc1\xee\xda\x30\x0c\xc6\xef\x79\x0a\x1f\x5b\x0d\x24\x36\x6d\x5c\x38\x4d\x1b\x07\x24\x60\xd3\x06\xe7\xca\x4d\x5c\xea\xd1\x26\x55\x92\x0e\xd8\xd3\x4f\xb4\x85\xb5\x6b\xf9\x83\xea\x53\xd5\x38\xbf\x7c\xb6\xe5\x6f\x3a\x85\x77\x39\x1f\x2c\x7a\x82\x7d\x21\x84\x90\x96\xae\xdf\x1e\xe3\x8c\xc0\x9d\xb0\x70\x22\x10\x00\x00\xac\x60\x30\x62\x3e\xb0\xf6\xc3\x67\xda\x78\xd0\x65\x96\x4d\x2a\x42\x8d\x56\x11\xfe\x97\xbd\x5b\x6d\x96\x3f\x77\x9f\x37\xdf\xe1\xc4\x3e\x35\xa5\x07\xcf\x39\xc1\x1f\xa3\x09\xb6\xdf\x76\xb0\xdd\xaf\xd7\x35\x21\x33\xf2\x18\x55\x87\x63\x08\x15\xc2\x99\xd2\x4a\x8a\x50\x4a\x53\xb6\x65\xff\x46\x2b\x53\xb4\xc1\xa7\x79\xf8\xa4\x8c\x86\x10\x63\x86\x5a\xd2\x18\x82\x22\xe7\x59\xa3\x67\xa3\x3b\x42\xc6\x11\xda\x42\x5e\x23\xd4\x65\x90\xb4\xe4\xa3\x14\x5d\xda\x49\xbb\x21\xe6\x1f\x9f\x36\xa2\x22\xf4\x92\x3a\x04\x45\x09\x96\x59\xe7\x61\x74\x6e\xe8\xd6\xfd\xda\xfb\xa7\xd5\x63\xde\x9d\xdd\x2d\xb6\xfb\xcd\xf2\xc7\xea\x4b\xf0\x61\x36\x81\x59\xf8\xa6\xf4\x7a\x86\x09\x9f\x49\x45\x09\xd1\x68\x42\x41\x56\x92\xf6\xff\x18\xaf\x13\xda\x33\x6c\x0b\x19\x47\x68\x0b\x79\x8d\xd0\x20\x3c\x72\xe6\x7a\xad\xfc\xe5\x8c\x8e\x07\x86\x34\x80\x70\xfe\x6a\x18\xfd\x78\xe8\x0a\xbd\x3a\x0a\xcb\x39\xda\x0b\x1c\xe9\x02\x01\xab\x50\x84\x8b\xbb\x11\xb1\x56\x74\xae\x8d\x28\x8a\x2f\x51\xdd\x76\x30\xba\xfe\x05\xa5\x63\x7d\x80\xd8\x5b\x22\x08\xba\xbb\x1d\x2e\x1e\x30\x5a\x6d\x7b\x00\x1a\x58\xd0\xab\xa4\xb6\x59\x7e\x35\x27\x2d\x84\xb2\xa6\x68\xbc\x92\x13\xa0\x33\x3b\xef\x1a\xa0\x44\x27\x51\xd1\x42\xfc\x0d\x00\x00\xff\xff\xc9\x82\xca\x33\x63\x05\x00\x00")

func migrations042_swapSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations042_swapSql,
		"migrations/042_swap.sql",
	)
}

func migrations042_swapSql() (*asset, error) {
	bytes, err := migrations042_swapSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/042_swap.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations043_assetSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\x4f\x6f\xf2\x30\x0c\xc6\xef\xfd\x14\x3e\xb6\x7a\x41\xe2\x9d\xb4\x5d\xb8\xee\x2b\xec\x1c\xb9\x89\xe9\xbc\xa5\x49\x65\xa7\x40\xbf\xfd\x94\x16\x21\x46\xcb\x80\x9c\xda\xc4\xfe\xe9\xf1\x9f\x67\xbd\x86\x7f\x2d\x37\x82\x89\xe0\xa3\x2b\x0a\x2b\x94\x3f\x13\xd6\x9e\x00\x55\x29\x15\x65\x01\x00\x60\xa3\x23\x58\x38\x7b\x14\xfb\x89\x52\xfe\x7f\xab\x66\x6f\x21\x26\x08\xbd\xf7\xab\x91\x10\x0f\x81\xe4\x0f\xc2\xeb\x5d\x42\x27\xc4\xaa\x3d\x39\x33\x2a\x33\xca\xcd\x88\x7c\x8c\x30\x22\x5a\x3c\x9a\xcc\xc0\x60\xc9\x60\x1b\xfb\x90\xa6\xb0\xbe\x25\x61\x5b\xbe\x6c\x56\x9b\x6b\xc8\x6f\x11\x93\x82\x79\x19\x8f\x13\x70\x8f\xec\x73\x83\xcd\x2e\xca\x59\xcd\x33\x84\x8e\x82\xe3\xd0\x5c\xe4\x3e\xab\x21\x0d\xdd\xe2\x38\x6b\x6e\xf8\xd4\x92\x7b\xc3\x88\x9e\x2d\x93\x5e\x47\xdd\x4c\x9f\x0f\xc3\x51\x42\xf6\x33\x02\x7c\x69\x0c\xf5\x5d\xc4\x58\x86\x20\xfb\xdc\x09\xc7\x0d\x27\x7d\x52\x44\xfe\xd3\x94\xf7\x7d\x7e\x1e\x27\x74\xc2\x2d\xca\x00\xdf\x34\x40\x99\x6d\x52\x15\xd5\xf6\xec\x24\x0e\x8e\x8e\x93\x93\x4c\x3d\x98\xc9\x04\x31\x4c\x37\xd0\x2b\x87\x06\xea\x24\x44\x50\x8e\x6f\xd5\xf6\x46\xe6\x8d\xe5\x5f\x46\x2d\x07\x67\x59\x97\x86\x7f\x8f\x87\x50\x14\x4e\x62\x77\x32\x3c\xef\x80\x8e\xac\x49\x4f\x4c\x8b\x6a\xd1\xd1\xf6\x27\x00\x00\xff\xff\x51\xb0\x00\x72\x26\x04\x00\x00")

func migrations043_assetSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations043_assetSql,
		"migrations/043_asset.sql",
	)
}

func migrations043_assetSql() (*asset, error) {
	bytes, err := migrations043_assetSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/043_asset.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations044_dataSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xc1\x4e\xc4\x30\x0c\x44\xef\xf9\x8a\x39\xb6\x82\x3d\xc2\xa5\x57\x7e\x81\xf3\xca\x69\x4c\x31\x74\x9d\xca\x71\x77\xb7\x7f\x8f\x92\x22\x84\x50\x45\x0e\x51\x94\xa7\xf1\x8c\xe7\x74\xc2\xc3\x45\x26\x23\x67\xbc\x2e\x21\x8c\xc6\xf5\xe9\x14\x67\x46\x22\xa7\xd0\x05\x00\x90\x54\xef\x28\x93\xa8\xa3\x1d\xcd\x0e\x5d\xe7\xf9\xb1\x71\xdf\x16\xfe\x8f\xe7\x9b\xb2\xe1\x4a\x36\xbe\x93\x75\x4f\xcf\xfd\x1f\x7e\xa5\x79\x65\x7c\x94\xac\x11\x47\xfa\xc5\xe4\x42\xb6\xe1\x93\x37\x74\x92\xfa\xd0\x0f\x3f\x61\x45\x13\xdf\x5b\xd8\x73\xdc\xce\xbb\x53\xd6\xf6\x81\xb5\x88\x4e\x88\x6e\xcc\xe8\x1a\xea\x87\x63\x5d\xdb\xe0\x50\x56\x49\xb5\xfb\xdd\xd5\x4b\xbe\x69\x08\xc9\xf2\xf2\xdd\x95\xbc\x81\xef\x52\xbc\xec\x03\x46\x2a\x23\x25\x1e\xbe\x02\x00\x00\xff\xff\x68\xe3\x73\x19\x60\x01\x00\x00")

func migrations044_dataSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations044_dataSql,
		"migrations/044_data.sql",
	)
}

func migrations044_dataSql() (*asset, error) {
	bytes, err := migrations044_dataSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/044_data.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations045_deferred_paymentsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x4b\xc3\x40\x10\x85\xef\xf3\x2b\xe6\x98\x60\x0b\x45\xd0\x4b\x4f\xa5\x0a\x7a\xd0\x43\xa0\x5e\xcb\x64\x77\x5a\x46\x37\xb3\x61\x67\x82\xe6\xdf\x4b\x62\x0f\x1a\x41\xdc\xc3\x32\xbc\x79\x6f\xe0\x7d\xeb\x35\x5e\x75\x72\x2e\xe4\x8c\x87\x1e\x20\x14\x9e\x46\xa7\x36\x31\x46\x3e\x71\x29\x1c\x8f\x3d\x8d\x1d\xab\x1b\x54\x80\x88\x28\x71\xfa\x5b\x39\x8b\x3a\xce\x4f\xb3\xa3\x0e\x29\xad\xe6\x3d\x75\x79\x50\xc7\xe7\xc3\xd3\x7d\xf3\xb8\xaf\xae\x37\x2b\xdc\xd4\x0b\x4f\x64\x27\x49\x86\xaf\x96\xb5\xfd\x92\x2c\x0f\x25\xf0\x91\x42\x98\xe3\x2f\xbb\x66\xff\xb0\x6b\xaa\x9b\xdb\x65\xf6\x62\x6c\x29\x91\x06\xfe\xc3\x18\xd9\x5c\x94\x5c\xb2\xfe\xe7\xac\x4f\xd5\xa7\x4e\x3f\xf5\xbe\x48\x47\x65\xc4\x37\x1e\xb1\x92\x58\x43\xbd\x05\x80\xef\xe4\xee\xf2\xbb\x02\xc4\x92\xfb\x0b\x39\x39\x21\x7f\x88\xb9\xfd\x66\x88\x81\x2c\x50\xe4\xed\x67\x00\x00\x00\xff\xff\xe2\x3d\xeb\x09\x7b\x01\x00\x00")

func migrations045_deferred_paymentsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations045_deferred_paymentsSql,
		"migrations/045_deferred_payments.sql",
	)
}

func migrations045_deferred_paymentsSql() (*asset, error) {
	bytes, err := migrations045_deferred_paymentsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/045_deferred_payments.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migrations/0010_trades.sql": migrations0010_tradesSql,
	"migrations/0011_history_price.sql": migrations0011_history_priceSql,
	"migrations/0012_update_pending_tx_op_key.sql": migrations0012_update_pending_tx_op_keySql,
	"migrations/0013_signer_name.sql": migrations0013_signer_nameSql,
	"migrations/001_squashed.sql": migrations001_squashedSql,
	"migrations/003_update_forfeit_request_created_at.sql": migrations003_update_forfeit_request_created_atSql,
	"migrations/004_change_asset_length.sql": migrations004_change_asset_lengthSql,
	"migrations/005_change_exchange_kyc.sql": migrations005_change_exchange_kycSql,
	"migrations/006_pending_submitter.sql": migrations006_pending_submitterSql,
	"migrations/007_move_forfeit_requests_to_payment.sql": migrations007_move_forfeit_requests_to_paymentSql,
	"migrations/008_use_random_salt_in_tx.sql": migrations008_use_random_salt_in_txSql,
	"migrations/009_use_long_assets.sql": migrations009_use_long_assetsSql,
	"migrations/014_balance_history.sql": migrations014_balance_historySql,
	"migrations/015_account_type.sql": migrations015_account_typeSql,
	"migrations/016_balance_updates_index.sql": migrations016_balance_updates_indexSql,
	"migrations/017_reviewable_request.sql": migrations017_reviewable_requestSql,
	"migrations/018_sale.sql": migrations018_saleSql,
	"migrations/019_add_timestamps_2_reviewable_req.sql": migrations019_add_timestamps_2_reviewable_reqSql,
	"migrations/020_alter_sales_details.sql": migrations020_alter_sales_detailsSql,
	"migrations/021_sale_quote_assets.sql": migrations021_sale_quote_assetsSql,
	"migrations/022_sale_quote_assets.sql": migrations022_sale_quote_assetsSql,
	"migrations/023_sale_current_cap.sql": migrations023_sale_current_capSql,
	"migrations/024_sale_type.sql": migrations024_sale_typeSql,
	"migrations/025_ledger_changes.sql": migrations025_ledger_changesSql,
	"migrations/026_contracts.sql": migrations026_contractsSql,
	"migrations/027_reviewable_request_tasks.sql": migrations027_reviewable_request_tasksSql,
	"migrations/028_add_customer_details_to_contract.sql": migrations028_add_customer_details_to_contractSql,
	"migrations/029_offer.sql": migrations029_offerSql,
	"migrations/030_v2.sql": migrations030_v2Sql,
	"migrations/031_notifiers.sql": migrations031_notifiersSql,
	"migrations/032_asset_pairs.sql": migrations032_asset_pairsSql,
	"migrations/033_polls.sql": migrations033_pollsSql,
	"migrations/034_poll_permission_type.sql": migrations034_poll_permission_typeSql,
	"migrations/035_reingest_version.sql": migrations035_reingest_versionSql,
	"migrations/036_whitelist.sql": migrations036_whitelistSql,
	"migrations/037_matches.sql": migrations037_matchesSql,
	"migrations/038_remove_sale_participations.sql": migrations038_remove_sale_participationsSql,
	"migrations/039_sale_access_definition_type.sql": migrations039_sale_access_definition_typeSql,
	"migrations/040_offers_state_index.sql": migrations040_offers_state_indexSql,
	"migrations/041_recovery_state_for_account.sql": migrations041_recovery_state_for_accountSql,
	"migrations/042_swap.sql": migrations042_swapSql,
	"migrations/043_asset.sql": migrations043_assetSql,
	"migrations/044_data.sql": migrations044_dataSql,
	"migrations/045_deferred_payments.sql": migrations045_deferred_paymentsSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"migrations": &bintree{nil, map[string]*bintree{
		"0010_trades.sql": &bintree{migrations0010_tradesSql, map[string]*bintree{}},
		"0011_history_price.sql": &bintree{migrations0011_history_priceSql, map[string]*bintree{}},
		"0012_update_pending_tx_op_key.sql": &bintree{migrations0012_update_pending_tx_op_keySql, map[string]*bintree{}},
		"0013_signer_name.sql": &bintree{migrations0013_signer_nameSql, map[string]*bintree{}},
		"001_squashed.sql": &bintree{migrations001_squashedSql, map[string]*bintree{}},
		"003_update_forfeit_request_created_at.sql": &bintree{migrations003_update_forfeit_request_created_atSql, map[string]*bintree{}},
		"004_change_asset_length.sql": &bintree{migrations004_change_asset_lengthSql, map[string]*bintree{}},
		"005_change_exchange_kyc.sql": &bintree{migrations005_change_exchange_kycSql, map[string]*bintree{}},
		"006_pending_submitter.sql": &bintree{migrations006_pending_submitterSql, map[string]*bintree{}},
		"007_move_forfeit_requests_to_payment.sql": &bintree{migrations007_move_forfeit_requests_to_paymentSql, map[string]*bintree{}},
		"008_use_random_salt_in_tx.sql": &bintree{migrations008_use_random_salt_in_txSql, map[string]*bintree{}},
		"009_use_long_assets.sql": &bintree{migrations009_use_long_assetsSql, map[string]*bintree{}},
		"014_balance_history.sql": &bintree{migrations014_balance_historySql, map[string]*bintree{}},
		"015_account_type.sql": &bintree{migrations015_account_typeSql, map[string]*bintree{}},
		"016_balance_updates_index.sql": &bintree{migrations016_balance_updates_indexSql, map[string]*bintree{}},
		"017_reviewable_request.sql": &bintree{migrations017_reviewable_requestSql, map[string]*bintree{}},
		"018_sale.sql": &bintree{migrations018_saleSql, map[string]*bintree{}},
		"019_add_timestamps_2_reviewable_req.sql": &bintree{migrations019_add_timestamps_2_reviewable_reqSql, map[string]*bintree{}},
		"020_alter_sales_details.sql": &bintree{migrations020_alter_sales_detailsSql, map[string]*bintree{}},
		"021_sale_quote_assets.sql": &bintree{migrations021_sale_quote_assetsSql, map[string]*bintree{}},
		"022_sale_quote_assets.sql": &bintree{migrations022_sale_quote_assetsSql, map[string]*bintree{}},
		"023_sale_current_cap.sql": &bintree{migrations023_sale_current_capSql, map[string]*bintree{}},
		"024_sale_type.sql": &bintree{migrations024_sale_typeSql, map[string]*bintree{}},
		"025_ledger_changes.sql": &bintree{migrations025_ledger_changesSql, map[string]*bintree{}},
		"026_contracts.sql": &bintree{migrations026_contractsSql, map[string]*bintree{}},
		"027_reviewable_request_tasks.sql": &bintree{migrations027_reviewable_request_tasksSql, map[string]*bintree{}},
		"028_add_customer_details_to_contract.sql": &bintree{migrations028_add_customer_details_to_contractSql, map[string]*bintree{}},
		"029_offer.sql": &bintree{migrations029_offerSql, map[string]*bintree{}},
		"030_v2.sql": &bintree{migrations030_v2Sql, map[string]*bintree{}},
		"031_notifiers.sql": &bintree{migrations031_notifiersSql, map[string]*bintree{}},
		"032_asset_pairs.sql": &bintree{migrations032_asset_pairsSql, map[string]*bintree{}},
		"033_polls.sql": &bintree{migrations033_pollsSql, map[string]*bintree{}},
		"034_poll_permission_type.sql": &bintree{migrations034_poll_permission_typeSql, map[string]*bintree{}},
		"035_reingest_version.sql": &bintree{migrations035_reingest_versionSql, map[string]*bintree{}},
		"036_whitelist.sql": &bintree{migrations036_whitelistSql, map[string]*bintree{}},
		"037_matches.sql": &bintree{migrations037_matchesSql, map[string]*bintree{}},
		"038_remove_sale_participations.sql": &bintree{migrations038_remove_sale_participationsSql, map[string]*bintree{}},
		"039_sale_access_definition_type.sql": &bintree{migrations039_sale_access_definition_typeSql, map[string]*bintree{}},
		"040_offers_state_index.sql": &bintree{migrations040_offers_state_indexSql, map[string]*bintree{}},
		"041_recovery_state_for_account.sql": &bintree{migrations041_recovery_state_for_accountSql, map[string]*bintree{}},
		"042_swap.sql": &bintree{migrations042_swapSql, map[string]*bintree{}},
		"043_asset.sql": &bintree{migrations043_assetSql, map[string]*bintree{}},
		"044_data.sql": &bintree{migrations044_dataSql, map[string]*bintree{}},
		"045_deferred_payments.sql": &bintree{migrations045_deferred_paymentsSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

