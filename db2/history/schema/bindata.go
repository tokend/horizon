// Code generated by go-bindata.
// sources:
// migrations/0010_trades.sql
// migrations/0011_history_price.sql
// migrations/0012_update_pending_tx_op_key.sql
// migrations/0013_signer_name.sql
// migrations/001_squashed.sql
// migrations/003_update_forfeit_request_created_at.sql
// migrations/004_change_asset_length.sql
// migrations/005_change_exchange_kyc.sql
// migrations/006_pending_submitter.sql
// migrations/007_move_forfeit_requests_to_payment.sql
// migrations/008_use_random_salt_in_tx.sql
// migrations/009_use_long_assets.sql
// migrations/014_balance_history.sql
// migrations/015_account_type.sql
// migrations/016_balance_updates_index.sql
// migrations/017_reviewable_request.sql
// migrations/018_sale.sql
// migrations/019_add_timestamps_2_reviewable_req.sql
// migrations/020_alter_sales_details.sql
// migrations/021_sale_quote_assets.sql
// migrations/022_sale_quote_assets.sql
// migrations/023_sale_current_cap.sql
// migrations/024_sale_type.sql
// migrations/025_ledger_changes.sql
// migrations/026_contracts.sql
// migrations/027_reviewable_request_tasks.sql
// migrations/028_add_customer_details_to_contract.sql
// migrations/029_offer.sql
// migrations/030_v2.sql
// migrations/031_notifiers.sql
// DO NOT EDIT!

package schema

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migrations0010_tradesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xb1\x6a\xc3\x30\x10\x86\x77\x83\xdf\xe1\x46\x9b\x3a\x43\x97\x2e\x99\x9c\x46\x14\x53\xd7\x09\xaa\x33\x64\x12\x17\xeb\x88\x45\xb1\xe5\x9e\xce\x0d\xe9\xd3\x97\xe2\x0c\x26\x34\x85\xac\xfa\x3f\xdd\xdd\xcf\xb7\x58\xc0\x43\xe7\x8e\x8c\x42\xb0\x1b\xe2\x28\x8e\x9e\xb5\xca\x6b\x05\x75\xbe\x2a\x15\xb4\x2e\x88\xe7\xb3\x11\x46\x4b\x01\x92\x38\x02\x00\x70\x16\x56\xc5\xcb\xbb\xd2\x45\x5e\x42\xb5\xa9\xa1\xda\x95\x65\x36\x65\x9e\x2d\xb1\x39\x78\xff\x61\x26\xac\xa8\xea\x6b\xe6\x80\x81\x0c\x86\x40\x02\x4d\x8b\x8c\x8d\x10\xc3\x17\xf2\xd9\xf5\xc7\xe4\xf1\x29\xbd\xe6\x3f\x47\x2f\x77\x7d\x98\x16\x74\x7e\xec\xe5\xc6\x09\x97\x91\xff\x21\x03\xbb\x86\x6e\x64\x0d\x13\x0a\x59\x83\x02\xe2\x3a\x0a\x82\xdd\x00\x27\x27\xad\x1f\xa7\x17\xf8\xf6\x3d\x5d\xe0\xad\x2e\xde\x72\xbd\x87\x57\xb5\x87\xc4\xd9\x6c\xd6\x3f\x9b\x77\x4b\xe3\x28\x5d\xfe\x2a\x98\x4b\x59\xfb\x53\x1f\x47\x6b\xbd\xd9\xfe\xa9\x64\xf9\x13\x00\x00\xff\xff\xe3\x92\x07\x7b\xc1\x01\x00\x00")

func migrations0010_tradesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations0010_tradesSql,
		"migrations/0010_trades.sql",
	)
}

func migrations0010_tradesSql() (*asset, error) {
	bytes, err := migrations0010_tradesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/0010_trades.sql", size: 449, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations0011_history_priceSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x31\x4f\xc3\x30\x10\x85\x77\x4b\xfe\x0f\x6f\x4c\x44\x3a\xb0\xb0\x74\x0a\x34\x03\x22\xb4\x95\x95\x0e\x9d\x2a\xd7\x9c\x9a\x93\x88\x6d\xec\x0b\x55\xf9\xf5\x08\x3a\x34\x8a\x58\xd8\x4e\xa7\xf7\x74\xdf\x7d\x8b\x05\xee\x06\x3e\x25\x2b\x84\x5d\xd4\x4a\xab\x27\xd3\xd4\x5d\x83\xae\x7e\x6c\x1b\xf4\x9c\x25\xa4\xcb\x21\x26\x76\x84\x42\x2b\x00\x38\xda\x4c\x07\x9b\x33\x09\x5c\x6f\x93\x75\x42\x09\x9f\x36\x5d\xd8\x9f\x8a\xfb\x87\x12\xeb\x4d\x87\xf5\xae\x6d\xab\x6b\xfe\x63\x0c\xf2\xaf\x82\xf0\x40\x59\xec\x10\x27\xd3\x99\xa5\x0f\xa3\xfc\x6e\xf0\x15\x3c\xcd\x4b\x57\xc4\xb7\x30\x1e\xdf\x09\x31\x91\xe3\xcc\xc1\xcf\x53\x5b\xf3\xfc\x5a\x9b\x3d\x5e\x9a\x3d\x8a\xdb\x23\xd5\x14\xb2\xba\x9d\x2d\xb5\x2a\x97\x3f\x56\xa6\x9e\x56\xe1\xec\xb5\x5a\x99\xcd\xf6\x2f\x4b\xcb\xef\x00\x00\x00\xff\xff\x91\x95\xf9\x33\x53\x01\x00\x00")

func migrations0011_history_priceSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations0011_history_priceSql,
		"migrations/0011_history_price.sql",
	)
}

func migrations0011_history_priceSql() (*asset, error) {
	bytes, err := migrations0011_history_priceSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/0011_history_price.sql", size: 339, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations0012_update_pending_tx_op_keySql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x5f\x4b\xc3\x30\x14\xc5\xdf\x03\xf9\x0e\xf7\xad\x2b\x3a\xd0\xe1\x9e\xc6\x1e\xaa\x0d\x58\x08\x6d\xed\x12\xd4\xa7\x10\xb6\x30\x8b\x35\xad\x69\x3a\xeb\xb7\x97\x74\x13\x5b\x1d\xb8\xf5\xa9\x7f\x72\xcf\xb9\xbf\x1c\xce\x74\x0a\x17\x6f\xf9\xd6\x48\xab\x80\x57\x18\x05\x94\x91\x0c\x58\x70\x4b\x09\x54\x4a\x6f\x72\xbd\x15\xd6\x48\x5d\xcb\xb5\xcd\x4b\x5d\xc3\x7e\xc0\xb6\x42\xe9\x9d\x2a\xca\x4a\x01\x7b\x4e\x09\x58\xd5\xda\xc5\x39\x72\xa3\xea\xa6\xb0\x63\xc4\x65\xa5\x8c\x74\x3f\xc4\xab\xfa\x84\x30\x4b\x52\x88\x13\x06\x31\x2f\x8a\x05\x46\x18\xdd\x65\x24\x60\x04\x78\x1c\x3d\x70\x02\x51\x1c\x92\x27\x67\x27\x6c\x2b\x06\x52\xd1\xe8\xfc\xbd\x51\x22\xd7\x1b\xd5\x62\x04\x90\xc4\xc7\xd7\x4e\x06\x32\xdf\x8d\x3e\xde\x93\x8c\xfc\x3a\x80\x68\x75\x00\xa1\xd4\xef\x48\x30\xea\xc7\x1b\x96\x1f\x1a\xa3\x8e\xf7\x44\xa8\xce\x84\xa7\xa1\xbb\xce\x51\xb2\x15\x61\xc3\x38\x96\x5e\x59\xb9\xa7\x77\x20\xfc\x0b\xc8\x29\x1d\x1b\xb5\xdb\x36\x48\xfa\x3f\xb4\x5e\x4b\x96\x5e\xef\xc3\xbb\xfc\x69\x40\x77\xb0\x7f\xf5\xce\x2a\xd0\xb0\x7f\x3b\x69\xd6\x2f\xd2\x4c\xae\xaf\x66\x37\xfe\xe8\x22\x7e\xbb\xcc\xe6\x73\x67\xf2\x15\x00\x00\xff\xff\xe1\xa8\x25\xb5\x1d\x03\x00\x00")

func migrations0012_update_pending_tx_op_keySqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations0012_update_pending_tx_op_keySql,
		"migrations/0012_update_pending_tx_op_key.sql",
	)
}

func migrations0012_update_pending_tx_op_keySql() (*asset, error) {
	bytes, err := migrations0012_update_pending_tx_op_keySqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/0012_update_pending_tx_op_key.sql", size: 797, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations0013_signer_nameSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xa1\xae\xc3\x20\x14\x06\x60\x4f\xc2\x3b\xfc\xae\xe2\xa6\x4f\x50\xc5\x1d\x4c\x9d\xc1\xd2\x80\x26\x64\x23\x04\xd1\xd3\x06\x48\xb6\xc7\x9f\x98\x99\x98\x98\xfd\xcc\x37\xcf\xf8\xdb\x6a\x69\x69\x64\x84\x43\x0a\x45\xde\xac\xf0\xea\x9f\x0c\x8e\xcc\xf7\xca\x25\x8e\x96\xb8\xa7\xdb\xa8\x3b\xc7\x5e\x0b\xe7\xd6\xa1\xb4\xc6\xc9\x51\xb8\x58\xbc\x29\x72\xda\x32\x46\x7e\x0e\x58\xe7\x61\x03\x11\xb4\x39\xab\x40\x1e\xd3\xb4\x48\x21\xc5\xe7\xa5\xf7\x07\xff\xbe\xe9\xd5\x5d\xbf\x74\xcb\x2b\x00\x00\xff\xff\x84\x1c\x57\x20\xbe\x00\x00\x00")

func migrations0013_signer_nameSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations0013_signer_nameSql,
		"migrations/0013_signer_name.sql",
	)
}

func migrations0013_signer_nameSql() (*asset, error) {
	bytes, err := migrations0013_signer_nameSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/0013_signer_name.sql", size: 190, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations001_squashedSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5b\xdf\x6f\xdb\xbe\x11\x7f\x0f\x90\xff\x81\x6f\x49\xb0\x64\x58\x81\x2e\xd8\x9c\x27\x37\x51\x57\x63\x8e\xbc\xc6\xf6\xda\xa0\x28\x08\x5a\xba\x38\x5c\x65\x51\x25\xe9\xc4\xee\xb0\xff\x7d\x90\xf5\xc3\x92\x28\x8a\x94\x23\xb9\xdf\xc7\x50\xc7\xbb\xfb\xf0\x7e\xf0\xee\xcc\x5c\x5d\xa1\x90\xd1\x50\x44\xe0\x49\xca\x42\x34\xfd\x19\xb8\xec\x8e\x48\x32\x65\x6b\xee\xc1\x28\xff\xf2\x91\xf1\x8f\x34\x80\xd3\x93\xd3\x93\xab\x2b\xf4\xa7\x15\x5d\x72\x22\x01\xcd\xa3\x78\x25\x5e\xdb\xad\xbb\x64\x05\x03\xf4\x4c\x85\x64\x7c\x8b\x89\xe7\xb1\x75\x28\xc5\x0d\x9a\x6d\x23\x18\xa0\xd9\xf0\xc3\xd8\xb9\x41\x53\xef\x19\x56\x64\x80\xa2\xf5\x22\xa0\xde\x0d\x9a\xbc\x86\xc0\x07\x28\x62\x42\x2e\x39\x88\x84\xd9\xe9\xc9\xed\x83\x33\x9c\x39\xc9\x26\x85\x25\x3a\x3f\x3d\x41\x08\x21\xea\xa3\x05\x5d\x0a\xe0\x94\x04\xc8\x9d\xcc\x90\x3b\x1f\x8f\x2f\x93\x6f\xc4\xf7\x39\x08\x81\xbc\x67\xc2\x89\x27\x81\xa3\x17\xc2\xb7\x34\x5c\x9e\x5f\xbf\xbf\x38\x3d\xb9\xb8\x69\x50\x7d\x41\x02\x12\x7a\xd0\xa5\xea\x19\xcb\xb2\xea\x34\x94\x55\xbd\x53\x42\x4c\xfd\x1a\xd5\xff\x7a\x7d\xa1\xe0\x14\x02\x64\x0d\xe9\x7b\x95\x32\x39\x3d\x6b\xce\x3f\xb6\x1e\xfa\x8f\x60\xe1\x22\xff\x60\x79\x6c\x98\xfa\x58\xc0\xcf\xec\xf4\xa6\xce\xe7\xb9\xe3\xde\xb6\x3e\xc0\x6c\x9f\x8e\x7f\xa2\xe5\x74\x36\x7c\x98\xa1\x2f\xa3\xd9\x27\xf4\x2e\x59\x19\xb9\xb7\x0f\xce\xbd\xe3\xce\xd0\x87\xc7\x6c\xcd\x9d\xa0\xfb\x91\xfb\xef\xe1\x78\xee\xec\x17\x86\x5f\x0b\x0b\xb7\xc3\xdb\x4f\x0e\x7a\xf7\x06\x7c\x68\xf2\xc5\x75\xee\xd0\x87\x47\x6b\xa0\xc3\xf1\xcc\x79\x30\xe2\xcc\xf9\x2a\x04\x7f\xa6\x7e\x93\xbe\x4f\x8c\x3f\x01\x95\x98\xc3\xcf\x35\x88\x4e\x23\xb1\xca\xda\xe8\xd6\x92\xf0\x65\xad\x9f\x5e\xd7\x38\xea\x2a\xf6\x53\x3b\x5a\x1a\x52\x49\x89\x04\x1f\x2f\xb6\x78\x2d\x80\xa3\x05\x63\x01\x90\xb0\xc6\xfb\x21\x92\xe0\x67\xdf\xd3\x65\x8f\xc3\x6e\x37\x91\x48\xd2\x15\x08\x49\x56\x11\x7a\xa5\xf2\x99\xad\x93\x15\xf4\x8b\x85\x90\x12\xaf\x23\xdf\x9e\x38\x3b\x22\xb9\x8d\x00\xd1\x50\xc2\x12\x38\xba\x73\x3e\x0e\xe7\xe3\x19\xfa\x8b\x6d\x4c\x55\x0f\xba\xaf\xd8\xd2\xc8\x39\x7a\x8c\x59\xe2\xed\x2c\xd6\x34\xf2\xd4\x98\xab\x12\x1a\x62\x2f\x00\x7f\x09\xbc\xcb\x90\x4b\x39\x66\x91\x26\x62\x3d\x42\x6f\xef\x5a\x15\x7f\x4f\xc8\xf1\x33\x11\xcf\x76\x91\x14\x71\x78\xa1\x6c\x2d\xb0\x71\x67\x16\xd2\x9c\x84\x82\xec\xea\x03\xbc\xbb\x59\x1a\xbc\x3c\xdd\xc2\x22\xe0\xa4\xcd\x06\x2f\x60\xc2\x18\x70\x4a\x4e\xc8\x92\x50\xf6\xf7\x2a\x62\x5c\x02\xc7\x2f\xc0\x45\x5c\xe7\x54\xc5\xbe\x53\xb2\x15\x93\x24\xc0\x5e\x5c\x1b\x69\xf2\xd9\x13\x00\x8e\x18\x0b\xb4\xb7\xb8\x00\xfc\x04\x5a\xeb\xec\xbe\x73\x10\xc0\x5f\xb4\x34\x2b\xb2\xc1\x72\x83\x05\x48\x2c\xe8\x2f\x95\xcc\x90\x39\xf6\x67\x1d\x11\x2e\xa9\x47\x23\xd2\x6d\x35\x56\x2f\xa0\x70\x13\x68\x70\xa9\xfb\xb5\xb7\x46\xa5\xf0\xd3\x13\x36\x56\x4d\xb1\xb3\x67\xa6\x3e\x3b\x1b\x0c\x14\x8a\x2a\x37\x78\x7a\x02\x4f\x8a\xa4\xfa\x39\xe8\x98\xfb\x4a\xd3\x8d\xd2\x8e\x9e\xac\x5b\x61\xef\x2c\x65\x37\x4a\x55\x13\x77\x3d\xb9\x21\x7d\xe7\x9b\x7a\x09\x18\x8b\x72\xa9\x90\x5b\xb5\x44\x24\x8a\x02\xea\x25\xd8\x18\xf7\x81\xeb\x22\xae\x54\x82\x54\xbe\xf9\x20\x09\x0d\x52\x5f\x4f\xd7\xc4\xae\xfd\xcb\xa2\xae\x8b\x88\x4a\xef\x94\x5d\x3a\xc7\xbb\xc4\xdd\x94\xcf\x33\xd6\x21\x7b\x3d\x57\x2b\x3e\x1f\x42\x49\x9f\x68\x5c\xea\xd5\x1e\x8b\x90\x71\x6f\x9a\xc2\xb5\x8d\xde\xd8\x7f\x32\xbe\xfd\x46\x6e\x55\xd2\xef\x8b\x5a\x13\xe6\xee\x23\xb6\x2a\xb1\x21\x5a\xe3\x08\xcd\x48\x9b\xd0\x44\x64\xbb\x82\xb0\x97\x26\xa7\xca\xda\x18\xb5\xd9\x06\x7d\xc4\x1e\xbb\x09\x29\x45\xb7\x6d\xe5\x50\xc5\xdd\xd7\x65\xa6\x91\x73\xf4\x80\xb0\xc4\xdb\x59\x38\x68\xe4\xa9\xc1\x50\x25\x34\x5c\x5a\x0a\xdf\xbd\x3f\x1e\xc7\x7e\x65\x79\xbf\xdf\x8e\xcd\xf8\xfb\xb3\x67\x59\xae\x85\x5d\xf7\x1b\x9a\xf0\x15\x8b\x82\x9e\x6a\x7a\x9d\x08\xfb\xaa\xde\xaa\x72\x31\xd7\xf5\x86\x14\xa5\xd3\xb3\x2f\x57\x37\xc8\x3b\xba\xab\xb7\xc4\xdf\x99\xab\x1b\xe4\xaa\xae\xae\xdb\x60\x48\x65\x85\x6d\x3d\xb9\x77\xee\xd2\x45\x0d\xed\xa7\x25\x69\x41\x6b\x9a\xc2\x58\x97\xe8\xcd\xb5\xb6\x66\x92\x9f\x4b\x6f\x98\x51\x10\x7d\xc8\xea\xa6\x31\x6f\xa9\xdd\x35\x23\x18\xb9\xc1\x10\xbe\x40\xc0\x22\x40\x12\x36\x6a\xbf\xb3\xc1\x1c\xc4\x3a\x90\xba\xaf\x2b\x90\x44\xf7\x2d\xc6\xa9\xfd\x2e\xe8\x32\x24\x72\xcd\xa1\xee\xa7\xa0\xbf\x5f\x5f\x7c\xfb\xbe\xef\x64\xfe\xfb\xbf\xba\x5e\xe6\xdb\x77\x65\x32\x03\x2b\x96\xcc\x75\xd5\xc6\x27\x67\x16\xb2\x10\x6c\x5a\xa3\x98\x99\xca\x27\x43\x47\x57\x80\x17\x6c\x1d\xfa\x22\x36\xcf\xdf\x38\x09\x97\x60\xf9\x33\x0c\xa2\x7e\x16\x3a\xa9\x52\x2d\xa3\x3f\x89\x9d\x89\x3b\x56\x7f\x79\x40\x09\xc5\xed\x64\x3c\xbf\x77\x63\x6b\x4f\x9d\xd9\xbe\x6d\x83\x8d\x7c\x21\xc1\xf9\x99\xe6\x07\x8d\xb3\xc1\x80\xc3\xd2\x0b\x88\x10\x09\x10\xab\x49\x70\x1f\x70\x14\x19\xad\x60\x69\x66\xc7\x0a\xbc\x56\xd3\x93\x3e\x60\x6a\x24\xb5\x02\xdb\x38\x75\x69\x0d\x59\x14\xda\xf8\xfe\xe0\x2a\x10\xf3\xc9\x81\x1d\xd4\x6a\xbb\x6a\x0b\x53\x69\x1c\x7b\xb0\xa9\x22\xa3\x95\x35\x35\x2d\xc8\xc1\x00\x0b\x05\xec\x71\x81\x16\x5a\xee\x76\x80\xcb\x35\xba\x2d\x70\x6d\x7d\xdc\x03\x70\xad\xac\x56\x96\x36\x54\x6c\xb6\xc0\xf3\xc4\xaf\xe4\xf4\xfd\xe8\x1d\xff\x80\x6d\x76\x0a\xb7\x13\x77\x3a\x7b\x18\x8e\xdc\x0e\x2f\x9d\xe4\x4a\x1c\xde\xdd\x15\xb8\x9b\xf4\x41\x73\x77\xf4\x79\xee\xa0\xf3\xfd\xf2\x81\x38\xa3\x3f\x04\xba\x58\x0b\xf4\xaf\x87\xd1\xfd\xf0\xe1\x11\xfd\xd3\x79\x44\xe7\x06\x40\xca\x15\xa7\xbd\xbd\xfa\x02\x58\x15\xd4\x08\xb4\x56\xab\x56\x80\x35\x97\x9d\xe1\x1e\xeb\x0b\x7c\xbd\xb8\xc6\x23\x68\xd0\xb0\xd5\x41\x28\x89\x53\x9f\x0b\x7b\x02\x5f\x15\xd4\x08\xbb\x56\xab\x56\x80\xb5\x09\xd3\x98\x0b\xfb\x3a\x00\x9d\xc0\xc6\x83\x68\xd4\xd2\xea\x40\x16\xf9\x64\x25\x03\x35\x72\xef\x9c\xaf\x6d\x7b\xe7\xdd\xa6\x02\x33\x34\x71\xeb\x3b\xe9\xf9\x74\xe4\xfe\x03\x2d\x24\x07\x40\xe7\x29\xf1\xa5\xd2\xa5\xea\x54\x8d\x9b\xee\x6e\xf4\xdc\xb5\xef\x56\x4a\x56\x9b\x7e\x9d\x6e\x49\xef\xdb\x8d\x76\x09\x2f\x3b\xfd\x2a\xe3\x85\x4b\x75\x90\xa0\x8d\x04\xcc\x22\x1c\x15\x0a\xb1\x83\x94\x4e\x6f\xcd\x44\xf7\x22\xd7\xa2\xfa\x9a\x4c\x5b\x02\xa2\x4e\xfa\x2e\x6b\x1f\x00\x5c\x22\x8b\x0b\x1a\xcb\x4d\x1f\xd0\x52\xae\x1a\xcb\x1c\x08\xae\x3c\x07\xad\x87\xc4\x22\x1c\x7b\x2d\x7b\x23\xa2\x14\xca\x9e\xdb\xa1\x46\x2a\x1a\xa4\x5e\xe3\xfc\x75\xd0\x62\xdb\xad\x1d\xca\x8c\x8b\x00\xb2\x77\x4f\x25\x8d\xf5\xfa\x15\xcf\xbd\x7b\x25\x15\xee\x76\xe1\xac\x53\x57\x26\x26\x93\xdd\x38\xc0\x9e\xdb\xe1\xae\x6c\xe1\xb6\x34\xf4\x61\x83\xab\x6f\xb2\x31\x0b\x71\xfa\xe6\xba\xbb\x13\x37\x8a\x2a\x02\xcd\x5f\x87\x97\xaf\xa3\x84\xb0\x25\x92\x2e\xdd\xa6\x49\x8a\x59\x7f\x2b\x23\xa4\x31\x12\xf3\xcc\x5f\xcc\x75\xe0\x51\x66\x21\xc6\x40\xcd\x29\xdb\xa1\xe8\xef\xfc\x4b\x42\x0e\xcd\x33\x7a\x96\x95\xa7\x86\x7d\x1a\x41\x79\xd6\x68\x04\x53\xd9\xd0\x0e\x5a\xe1\x59\xe8\x11\x6c\x53\x7c\x84\x6a\xc2\x55\xa0\x6d\x07\xa9\xee\xc9\xeb\x11\xb0\xd5\xbe\xb4\x35\x81\xac\xdb\xd4\x0e\x6d\x56\x4c\x1e\x01\x61\xfe\xc3\x94\x09\x55\x63\x6f\x50\x66\x5f\x98\xca\xf6\x9a\x20\xaa\x72\x6a\x8b\xa9\x43\xd2\x44\x99\x71\xf9\xa2\xed\x3c\x4f\x34\x09\xb3\x41\xd4\xba\x0e\xa8\x08\xdc\x46\x6f\xf3\x33\x0b\x4c\xdb\x08\xac\x90\x6c\x23\x1b\xf7\x2a\x16\x6f\xfd\x3a\x98\x2a\xa9\x7d\x11\xb9\xff\x1f\xbc\x3b\xf6\x1a\xc6\x6b\x3e\x67\x11\x92\x64\x11\x80\x5a\x50\x78\x44\x78\xc4\x87\x9b\x5a\xaa\x7c\xe2\xd9\x48\xa5\x8c\x11\x1b\xa9\xb3\x58\x6f\x24\xd2\x74\x26\x76\x7b\x0c\x74\xca\xec\xab\x91\x5a\x5b\x22\xdb\xee\xda\x53\xfe\x3f\x00\x00\xff\xff\x50\xcc\x93\x12\x53\x39\x00\x00")

func migrations001_squashedSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations001_squashedSql,
		"migrations/001_squashed.sql",
	)
}

func migrations001_squashedSql() (*asset, error) {
	bytes, err := migrations001_squashedSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/001_squashed.sql", size: 14675, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations003_update_forfeit_request_created_atSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\xb1\x6a\x85\x30\x14\xc6\xf1\x3d\x90\x77\x38\x63\x4b\xf1\x09\x9c\xd4\xa4\x56\x50\x23\x69\x84\x76\x92\xd0\x1e\x6b\x06\x8d\x4d\x8e\x48\xfb\xf4\x77\x70\x11\xee\x1d\x5c\x3f\xfe\xc3\xef\x4b\x12\x78\x99\xdd\x4f\xb0\x84\xd0\xaf\x9c\x65\xb5\x91\x1a\x4c\x96\xd7\x12\x26\x17\xc9\x87\xbf\x61\xf4\x61\x44\x47\x43\xc0\xdf\x0d\x23\x45\x38\xa2\x42\xd5\x7d\xd3\xc2\x57\x40\x4b\xf8\x3d\x58\x02\xf3\xd9\x49\xc8\xab\xb2\x6a\x0d\xf4\xef\x55\x5b\x82\xfc\x30\x3a\x2b\xcc\x93\xec\x54\xf1\x06\xaf\x5a\x35\xa7\xfe\x39\xe5\x8c\xb3\xb3\x40\xf8\x7d\xb9\x68\x10\x5a\x75\xf7\x84\xf4\xea\x03\x21\x1e\xf8\xc9\xcd\x18\xc9\xce\x2b\xec\x8e\x26\xbf\x1d\x0b\xfc\xfb\x05\x53\xce\x6e\x01\x00\x00\xff\xff\xe2\x21\x0a\x66\x2b\x01\x00\x00")

func migrations003_update_forfeit_request_created_atSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations003_update_forfeit_request_created_atSql,
		"migrations/003_update_forfeit_request_created_at.sql",
	)
}

func migrations003_update_forfeit_request_created_atSql() (*asset, error) {
	bytes, err := migrations003_update_forfeit_request_created_atSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/003_update_forfeit_request_created_at.sql", size: 299, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations004_change_asset_lengthSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xc8\x2c\x2e\xc9\x2f\xaa\x8c\x4f\x4a\xcc\x49\xcc\x4b\x4e\x2d\x56\x80\x48\x3a\xfb\xfb\x84\xfa\xfa\x29\x24\x16\x17\xa7\x96\x28\x84\x44\x06\xb8\x2a\x24\x67\x24\x16\x25\x26\x97\xa4\x16\x29\x94\x25\x16\x55\x66\xe6\xa5\x6b\x98\x68\x5a\xf3\x72\xf1\x72\x21\x9b\xee\x92\x5f\x9e\x47\x35\xf3\x8d\x35\x15\x42\x83\x3d\xfd\xdc\x15\x8a\x4b\x93\x8a\x4b\x8a\x34\xc0\x8a\x75\x14\x0c\x75\x14\x8c\x35\xad\x01\x01\x00\x00\xff\xff\xc6\x71\xf2\x2d\xd4\x00\x00\x00")

func migrations004_change_asset_lengthSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations004_change_asset_lengthSql,
		"migrations/004_change_asset_length.sql",
	)
}

func migrations004_change_asset_lengthSql() (*asset, error) {
	bytes, err := migrations004_change_asset_lengthSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/004_change_asset_length.sql", size: 212, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations005_change_exchange_kycSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xc8\x2c\x2e\xc9\x2f\xaa\x8c\x4f\x4a\xcc\x49\xcc\x4b\x4e\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xae\x4c\xb6\xe6\xe5\xe2\xe5\x42\x36\xc0\x25\xbf\x3c\x8f\x80\x11\x8e\x2e\x2e\x48\x26\x28\x64\x15\xe7\xe7\x25\x59\x03\x02\x00\x00\xff\xff\x92\x1b\xba\x5b\x85\x00\x00\x00")

func migrations005_change_exchange_kycSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations005_change_exchange_kycSql,
		"migrations/005_change_exchange_kyc.sql",
	)
}

func migrations005_change_exchange_kycSql() (*asset, error) {
	bytes, err := migrations005_change_exchange_kycSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/005_change_exchange_kyc.sql", size: 133, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations006_pending_submitterSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4d\x6b\x32\x51\x0c\x85\xf7\x03\xf3\x1f\xb2\x54\xde\x57\x68\xa5\x76\xe3\xca\xb6\xee\xc4\x42\xd1\xf5\x25\xce\x84\x3b\xa1\x63\xee\x25\x37\xa3\x4e\x7f\x7d\xb1\x63\x3f\xc0\xcf\xed\xe1\x39\x27\x9c\x24\x83\x01\xfc\x5b\xb3\x57\x34\x82\x65\xcc\xb3\x3c\x7b\x7e\x9b\x4e\x16\x53\x58\x4c\x9e\x66\x53\x88\x24\x25\x8b\x77\xa6\x28\x09\x0b\xe3\x20\x2e\xb1\x17\xd2\x04\xbd\x3c\x03\x00\xe0\x12\x56\xec\x13\x29\x63\xfd\xbf\x93\x4e\xb9\x3a\x8c\xc5\x60\xfe\xba\x80\xf9\x72\x36\x3b\xc0\x5d\x9c\xe3\x92\xc4\xd8\xda\xcb\x54\x6c\x56\x35\x17\xee\x9d\x5a\x28\x2a\x54\x2c\x8c\x14\x36\xa8\x2d\x8b\xef\x3d\x3e\xf4\x7f\x6c\x79\xd6\x1f\xdf\xd2\xe6\x52\x0d\xdb\xb9\x0a\x53\x75\x65\xd2\x2f\x4c\xb2\xa1\x3a\x44\x3a\x61\xb8\xbf\x1b\x1e\x5b\x42\x24\xc5\xaf\xe5\x58\x1b\x09\x58\x8c\x3c\xe9\x79\xea\x7a\xeb\xef\x65\xd9\xfe\x9c\x67\xf2\x6c\xe7\x94\x52\x53\xdb\x89\xac\xe1\x68\x74\x14\x56\x28\xa1\x51\xe9\xd0\xc0\x78\x4d\xc9\x70\x1d\x61\xcb\x56\x85\xa6\x53\xe0\x23\x08\x1d\xe0\x26\x96\xb7\xc3\x2c\x6c\x8c\x16\xf4\xc6\x5b\xfe\xfd\xd5\x97\xb0\x95\xbd\x56\x6a\x88\x60\xb8\xaa\xe9\xd2\xaf\x8e\xaf\x81\x7b\xe2\x33\x00\x00\xff\xff\x39\x71\x2f\xbb\x0b\x03\x00\x00")

func migrations006_pending_submitterSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations006_pending_submitterSql,
		"migrations/006_pending_submitter.sql",
	)
}

func migrations006_pending_submitterSql() (*asset, error) {
	bytes, err := migrations006_pending_submitterSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/006_pending_submitter.sql", size: 779, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations007_move_forfeit_requests_to_paymentSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xc1\x4e\xeb\x30\x10\x45\xf7\x96\xfc\x0f\x77\xd9\xea\xbd\x4a\x2c\x10\x9b\xae\x42\x13\x56\xa6\x45\x55\xb2\x8e\xdc\x64\x9a\x8e\x44\x6c\xe3\x4c\xa8\xc2\xd7\x23\xda\x06\x50\x41\x22\xdb\x33\xc7\xf6\xe8\x5e\x2f\x16\xf8\xd7\x72\x13\xad\x10\x8a\xa0\x55\xba\xdd\x3c\x21\x4f\xee\x4d\x86\x03\x77\xe2\xe3\x50\xee\x7d\xdc\x13\x4b\x19\xe9\xa5\xa7\x4e\xba\xa5\x56\x89\xc9\xb3\xed\x95\x16\xec\xd0\x92\xfb\xd2\x90\xa4\x29\x56\x1b\x53\x3c\xae\x71\x61\xa5\x0c\x81\xc0\x4e\x96\x5a\x69\xf5\xfd\xe9\xd4\x1f\xdd\x07\x5b\x6d\xb3\x24\xcf\xfe\x58\x00\x33\xad\x00\x80\x6b\xec\xb8\x61\x27\x58\x6f\x72\xac\x0b\x63\xfe\x9f\x07\x62\x63\x43\x82\xea\x60\xa3\xad\x84\x22\x5e\x6d\x1c\xd8\x35\xb3\xbb\xdb\xf9\xb5\x6b\x5b\xdf\xbb\x89\x2e\x3b\x16\xb6\x42\x75\xb9\x1b\xca\xbe\xa3\x88\x9d\xf7\xcf\x64\xdd\x8f\x4b\xab\x8a\x82\x50\x3d\xce\x2f\xb8\x8a\x74\x3a\x6d\x05\xc2\x2d\x75\x62\xdb\x80\x23\xcb\xc1\xf7\x67\x82\x37\xef\xe8\x22\xf7\xa1\x9e\x2e\x8f\x11\x8d\x01\x53\x43\x11\x69\xf6\x90\x14\x26\xc7\xcd\xe7\x7a\x5a\xcd\x4f\xd1\x4f\xea\xef\xf4\x15\x7e\x29\x70\xf9\x1e\x00\x00\xff\xff\xc2\x8d\x39\x01\x34\x02\x00\x00")

func migrations007_move_forfeit_requests_to_paymentSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations007_move_forfeit_requests_to_paymentSql,
		"migrations/007_move_forfeit_requests_to_payment.sql",
	)
}

func migrations007_move_forfeit_requests_to_paymentSql() (*asset, error) {
	bytes, err := migrations007_move_forfeit_requests_to_paymentSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/007_move_forfeit_requests_to_payment.sql", size: 564, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations008_use_random_salt_in_txSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xc8\x2c\x2e\xc9\x2f\xaa\x8c\x2f\x29\x4a\xcc\x2b\x4e\x4c\x2e\xc9\xcc\xcf\x2b\x56\x08\x72\xf5\x73\xf4\x75\x55\x70\xf6\xf7\x09\xf5\xf5\x53\x48\x4c\x4e\xce\x2f\xcd\x2b\x89\x2f\x4e\x2d\x2c\x4d\xcd\x4b\x4e\x55\x08\xf1\x57\x28\x4e\xcc\x29\xb1\xe6\xe5\xe2\xe5\x42\x36\xdb\x25\xbf\x3c\x0f\x24\x46\xa2\xf9\x20\xb3\x40\x66\xa2\xdb\x63\xcd\xcb\x05\x08\x00\x00\xff\xff\xce\x55\x14\xb5\xba\x00\x00\x00")

func migrations008_use_random_salt_in_txSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations008_use_random_salt_in_txSql,
		"migrations/008_use_random_salt_in_tx.sql",
	)
}

func migrations008_use_random_salt_in_txSql() (*asset, error) {
	bytes, err := migrations008_use_random_salt_in_txSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/008_use_random_salt_in_tx.sql", size: 186, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations009_use_long_assetsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xc8\x2c\x2e\xc9\x2f\xaa\x8c\x4f\x4a\xcc\x49\xcc\x4b\x4e\x2d\x56\x80\x48\x3a\xfb\xfb\x84\xfa\xfa\x29\x24\x16\x17\xa7\x96\x28\x84\x44\x06\xb8\x2a\x24\x67\x24\x16\x25\x26\x97\xa4\x16\x29\x94\x25\x16\x55\x66\xe6\xa5\x6b\x18\x9a\x69\x5a\xf3\x72\xf1\x72\x21\x1b\xef\x92\x5f\x9e\x47\x35\x0b\xcc\x34\x15\x42\x83\x3d\xfd\xdc\x15\x8a\x4b\x93\x8a\x4b\x8a\x34\xc0\x8a\x75\x14\x0c\x75\x14\xcc\x34\xad\x01\x01\x00\x00\xff\xff\xe4\x8d\xd8\x28\xd5\x00\x00\x00")

func migrations009_use_long_assetsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations009_use_long_assetsSql,
		"migrations/009_use_long_assets.sql",
	)
}

func migrations009_use_long_assetsSql() (*asset, error) {
	bytes, err := migrations009_use_long_assetsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/009_use_long_assets.sql", size: 213, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations014_balance_historySql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xb1\x4e\xf4\x40\x0c\x84\xeb\x8b\x94\x77\x98\x32\xd1\x7f\xe9\x7e\xd1\x5c\x4b\x45\x01\x05\xa2\x8e\x9c\xc4\x97\x58\x6c\xbc\x2b\xaf\xc3\x29\x3c\x3d\x5a\x10\x70\x50\x50\xce\x78\x3c\xb6\xbe\xae\xc3\xbf\x55\x66\x23\x67\x3c\xa5\xba\xaa\xab\xd1\xb8\x08\xa7\x21\x30\x16\xc9\x1e\x6d\xef\x07\x0a\xa4\x23\xf7\x5b\x9a\xc8\x39\xa3\xa9\xab\x83\x4c\x18\x64\xce\x6c\x42\x01\xc9\x64\x25\xdb\xf1\xcc\xfb\xb1\xae\x0e\x9f\x79\x99\xf0\x42\x36\x2e\x64\xcd\xcd\xff\x16\xc6\x67\x36\xd6\x91\xf3\xef\xe6\x8c\xe6\x7b\xa7\x85\x46\x87\x6e\x21\x94\x2e\x5a\xe3\xa6\x5e\x6e\x89\xfa\x8f\xc9\xc7\x37\x53\x4f\x0e\x97\x95\xb3\xd3\x9a\x70\x11\x5f\xde\x25\x5e\xa3\xf2\x57\x1e\x5d\x77\xe5\x4a\x86\xa8\xb3\xba\x44\xa5\x70\xc4\x39\x1a\x98\xb2\xb0\xe1\xee\xf1\xe1\x1e\x89\x2c\x8b\xce\x75\xd5\x9e\x0a\x93\x6b\x4a\xb7\xf1\xa2\xc5\x9b\x2c\xa6\xbf\x29\x9d\xde\x02\x00\x00\xff\xff\xb6\xb6\x0a\xcb\x5d\x01\x00\x00")

func migrations014_balance_historySqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations014_balance_historySql,
		"migrations/014_balance_history.sql",
	)
}

func migrations014_balance_historySql() (*asset, error) {
	bytes, err := migrations014_balance_historySqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/014_balance_history.sql", size: 349, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations015_account_typeSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcd\x31\x0a\xc2\x40\x10\x85\xe1\x3e\x90\x3b\xbc\x5e\x02\xf6\x69\xbd\x82\x75\x18\x77\x47\x5d\x98\xcc\x2c\x9b\xb7\x48\x6e\x2f\x82\x85\x85\x90\xf6\x2f\xfe\x6f\x9a\x70\x5a\xcb\xa3\x09\x15\xd7\x3a\x0e\xe3\x20\x46\x6d\xa0\xdc\x4c\xf1\x2c\x1b\xa3\xed\x8b\xa4\x14\xdd\xb9\x41\x72\x46\x0a\xeb\xab\xe3\xdb\x16\xee\x55\x51\x9c\xf0\x20\xbc\x9b\x21\xeb\x5d\xba\x11\xe7\xf9\xf3\xfb\x15\x2e\xf1\xf2\x43\x23\xb7\xa8\xff\x90\xf9\x1d\x00\x00\xff\xff\x63\x5e\x52\x1f\xac\x00\x00\x00")

func migrations015_account_typeSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations015_account_typeSql,
		"migrations/015_account_type.sql",
	)
}

func migrations015_account_typeSql() (*asset, error) {
	bytes, err := migrations015_account_typeSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/015_account_type.sql", size: 172, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations016_balance_updates_indexSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\xe2\xe5\x72\x0e\x72\x75\x0c\x71\x55\xf0\xf4\x73\x71\x8d\x50\xc8\x48\x2a\x8d\x4f\x4a\xcc\x49\xcc\x4b\x4e\x8d\xcf\x4c\x89\xcf\xcc\x4b\x49\xad\x50\xf0\xf7\x53\xc8\xc8\x2c\x2e\xc9\x2f\xaa\x84\xcb\x95\x16\xa4\x24\x96\xa4\x16\x2b\x84\x06\x7b\xfa\xb9\x2b\x78\x38\x06\x7b\x28\x68\x20\xf4\x69\x5a\x83\x0c\x46\xb6\xca\x25\xbf\x3c\x0f\x24\xe6\x12\xe4\x1f\x80\xc7\x2a\x6b\x5e\x2e\x40\x00\x00\x00\xff\xff\x06\x8c\x62\xc1\xa1\x00\x00\x00")

func migrations016_balance_updates_indexSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations016_balance_updates_indexSql,
		"migrations/016_balance_updates_index.sql",
	)
}

func migrations016_balance_updates_indexSql() (*asset, error) {
	bytes, err := migrations016_balance_updates_indexSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/016_balance_updates_index.sql", size: 161, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations017_reviewable_requestSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd1\x41\x4f\xc2\x30\x14\x07\xf0\x7b\x93\x7e\x87\x77\xdc\xa2\xdc\x94\x0b\xa7\x32\xaa\x36\xce\x41\x4a\x31\x70\x5a\x0a\x7b\x4a\x09\xae\xd8\x56\x89\xdf\xde\x14\x97\x0c\xcc\x32\x7a\xec\xfb\xa5\xfd\xe7\xfd\x07\x03\xb8\xf9\x30\xef\x4e\x07\x84\xc5\x81\x12\x4a\x32\xc9\x99\xe2\xa0\xd8\x38\xe7\xe0\xf0\xdb\xe0\x51\xaf\xf7\x58\x3a\xfc\xfc\x42\x1f\x20\xa1\x04\xc0\x54\x70\x76\xc6\xe2\x51\x14\x0a\x8a\xa9\x82\x62\x91\xe7\xb7\x51\x34\xdc\xba\x93\x78\x65\x32\x7b\x62\x32\xb9\x1f\xa6\x00\xff\x61\xfc\x02\xff\x5c\x3f\x7c\x43\x87\xf5\x06\x2f\xe0\xf0\x2e\x6d\xa6\x3b\xdc\x84\xd2\xa1\xf6\xb6\x06\xc5\x97\xaa\xcd\xd7\x15\xac\x0c\x3f\x07\x04\x88\xb9\xaf\x40\x1f\xe2\x72\x7a\xe0\x56\xfb\x6d\x3b\x8a\xa9\x58\xa6\xf8\x29\xda\x25\xac\x30\x68\xb3\xf7\xad\xdd\x79\x5b\xaf\xbb\x1f\x9d\x49\xf1\xc2\xe4\x0a\x9e\xf9\x0a\x12\x53\xa5\x94\xa4\xa3\x58\xcf\x79\x61\x13\x7b\xac\xe3\xdd\x44\x4e\x67\x4d\x61\xe2\x01\xf8\x52\xcc\xd5\xbc\xa3\xba\x11\x25\xbf\x01\x00\x00\xff\xff\xf1\xbe\xd9\xd3\xef\x01\x00\x00")

func migrations017_reviewable_requestSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations017_reviewable_requestSql,
		"migrations/017_reviewable_request.sql",
	)
}

func migrations017_reviewable_requestSql() (*asset, error) {
	bytes, err := migrations017_reviewable_requestSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/017_reviewable_request.sql", size: 495, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations018_saleSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xdf\x6a\xf2\x30\x1c\x86\xcf\x03\xb9\x87\xdf\x61\xcb\xa7\xe0\x37\xd8\x4e\x64\x42\xac\xd9\x0c\x5a\x95\x18\x87\x1e\x95\xcc\x66\x33\xa0\x8d\x4b\x22\xc2\xae\x7e\x54\xfb\x6f\x0a\xe2\x72\x96\xe4\x79\x12\xf2\xe6\x6d\xb7\xe1\xdf\x4e\x7f\x5a\xe9\x15\x2c\xf6\x18\x61\x14\x71\x4a\x04\x05\x41\xfa\x63\x0a\x4e\x6e\x15\x46\x01\x46\x00\x3a\x85\x7a\xf4\xd9\x2b\x9b\x88\x72\x36\x99\x0a\x98\x2c\xc6\x63\x88\x86\x34\x1a\x41\xa0\x53\xe8\x3d\x43\x27\x6c\xe5\x9e\x39\x66\xca\x26\x85\xfd\x46\x78\x34\x24\x3c\x78\x7c\x0a\x1b\xde\x89\x7b\x97\x4e\x25\xd2\x39\xe5\x1b\xdc\xff\x6b\xee\xeb\x60\x7c\x05\xde\xe0\x9c\x97\xd6\x27\x5e\xef\x14\x00\x08\x16\xd3\xb9\x20\xf1\x0c\x8e\xda\x6f\xcc\xc1\xc3\x69\xe3\xdb\x64\xea\xb7\xa5\xb2\xb4\x74\xfe\x60\xed\xad\x5e\xab\x2a\x8d\x45\x4c\x39\x8b\x82\x87\x4e\xab\x13\x5e\x65\x73\x46\x7b\x65\x3a\xce\x7c\xf8\x64\x2d\xf7\x77\x98\x15\x5a\x67\xbb\x91\x36\xbd\xd3\xae\xd0\xda\x5e\x1f\xac\x55\x59\x71\xfd\x6d\xbb\x89\xd6\x07\xa4\xca\x4b\xbd\x75\xe7\x67\x0b\xba\x14\x75\x41\x2e\xbf\xc2\x57\xf1\x34\x7a\x73\xc9\xcd\x38\x8b\x09\x5f\xc1\x88\xae\xf2\x12\x85\x18\x85\xdd\xbc\x92\xcd\x92\x0e\xcc\x31\xcb\xd7\x06\x7c\x3a\x2b\x4a\xca\x5e\x80\x2e\xd9\x5c\xcc\x4f\x75\xed\x62\xf4\x13\x00\x00\xff\xff\x98\xfb\x27\x87\xd5\x02\x00\x00")

func migrations018_saleSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations018_saleSql,
		"migrations/018_sale.sql",
	)
}

func migrations018_saleSql() (*asset, error) {
	bytes, err := migrations018_saleSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/018_sale.sql", size: 725, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations019_add_timestamps_2_reviewable_reqSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xb1\xca\xc2\x30\x18\x45\xf7\x40\xde\xe1\xee\x3f\x7d\x82\x4e\xfd\x4d\xb7\xd8\x4a\x69\xe7\x12\xed\x87\x06\x4c\x13\xd3\x2f\x06\x7c\x7a\x07\x07\x0b\x0e\xda\xf5\xc2\x3d\x9c\x53\x14\xf8\x73\xf6\x1c\x0d\x13\x86\x20\x85\x14\x95\xee\xeb\x0e\x7d\xf5\xaf\x6b\x44\xba\x5b\xca\xe6\x78\xa5\x31\xd2\x2d\xd1\xc2\xa8\x94\xc2\xae\xd5\xc3\xbe\xc1\x29\x92\x61\x9a\x46\xc3\x60\xeb\x68\x61\xe3\x02\xb2\xe5\x8b\x4f\xaf\x05\x0f\x3f\x13\x9a\xb6\x47\x33\x68\x5d\x6e\x61\xa7\x30\x6d\x64\x4b\xb1\x6e\x51\x3e\xcf\x3f\xd4\xa8\xae\x3d\x7c\xe6\x7c\x37\x5d\xff\xde\xaa\xa5\x14\xcf\x00\x00\x00\xff\xff\x50\xe2\xa6\xf8\x50\x01\x00\x00")

func migrations019_add_timestamps_2_reviewable_reqSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations019_add_timestamps_2_reviewable_reqSql,
		"migrations/019_add_timestamps_2_reviewable_req.sql",
	)
}

func migrations019_add_timestamps_2_reviewable_reqSql() (*asset, error) {
	bytes, err := migrations019_add_timestamps_2_reviewable_reqSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/019_add_timestamps_2_reviewable_req.sql", size: 336, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations020_alter_sales_detailsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4e\xcc\x49\x55\x80\x08\x38\xfb\xfb\x84\xfa\xfa\x29\xa4\xa4\x96\x24\x66\xe6\x14\x2b\x84\x44\x06\xb8\x2a\x64\x15\xe7\xe7\x25\x29\x84\x06\x7b\xfa\xb9\x2b\x94\xe4\xc7\x83\xb9\x1a\x50\x15\x56\x56\x20\xae\xa6\x35\x2f\x17\x2f\x17\xb2\x15\x2e\xf9\xe5\x79\x24\x59\x52\x92\x5a\x51\x62\xcd\xcb\x05\x08\x00\x00\xff\xff\xe9\x93\x6f\x92\xa7\x00\x00\x00")

func migrations020_alter_sales_detailsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations020_alter_sales_detailsSql,
		"migrations/020_alter_sales_details.sql",
	)
}

func migrations020_alter_sales_detailsSql() (*asset, error) {
	bytes, err := migrations020_alter_sales_detailsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/020_alter_sales_details.sql", size: 167, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations021_sale_quote_assetsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd0\x31\x4b\xc4\x30\x1c\x05\xf0\xbd\xd0\xef\xf0\xc6\x16\x2d\x54\x07\x97\x82\x10\x93\x40\xc5\x34\x95\xd0\xb8\x96\xa8\x51\x2a\xb5\xad\x4d\x8a\x5f\xff\xb8\xbb\xa5\x43\x8e\xdc\x9c\xf7\x1e\xbf\xfc\x8b\x02\x37\xbf\xc3\xf7\x6a\xbc\x85\x5e\xd2\x84\x88\x8e\x2b\x74\xe4\x49\x70\x38\x33\x5a\x10\xc6\x40\x5b\xa1\x1b\x89\xbf\x6d\xf6\xb6\x37\xce\x59\xef\xf0\xe3\xe6\xe9\xbd\x0a\x14\x98\x6a\x5f\x03\x8d\x58\x74\x59\x87\x0f\x1b\x0a\xed\x00\x9f\xf6\xcb\x6c\xa3\xef\x77\xb3\x78\x23\x8a\xd6\x44\x65\x77\x0f\x39\x00\xd9\x76\x90\x5a\x88\x2a\x4d\xd2\x64\xff\x37\x36\xff\x4f\xd7\x63\x5d\x4c\x1b\x90\x44\xec\xb8\x80\x8e\xd4\x4e\x67\x81\xd4\x0d\x57\xcf\x34\xbb\x2f\x6f\xcb\x1c\xb4\xe6\xf4\x05\xd9\xf9\xe9\x11\xe5\x71\xe3\x10\x00\x00\xff\xff\x3e\x74\xc6\x38\xc8\x01\x00\x00")

func migrations021_sale_quote_assetsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations021_sale_quote_assetsSql,
		"migrations/021_sale_quote_assets.sql",
	)
}

func migrations021_sale_quote_assetsSql() (*asset, error) {
	bytes, err := migrations021_sale_quote_assetsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/021_sale_quote_assets.sql", size: 456, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations022_sale_quote_assetsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4e\xcc\x49\x55\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\x4a\x2c\x4e\x8d\x4f\x2e\x2d\x2a\x4a\xcd\x2b\x89\x4f\x4e\x2c\x50\xf0\x0b\xf5\x75\x0d\xf2\x74\xd6\x30\x32\xd0\x31\xd0\x54\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\x51\x70\x71\x75\x73\x0c\xf5\x09\x51\x30\xb0\x26\xc2\xbc\x8c\xc4\xa2\x14\x62\x0d\xe3\xe5\x42\x76\xae\x4b\x7e\x79\x1e\x16\x0b\x5c\x82\xfc\x03\x70\xb9\x18\x9b\x83\x30\xd4\xc3\x5c\x64\xcd\xcb\x05\x08\x00\x00\xff\xff\x50\x74\x2c\x8c\x1e\x01\x00\x00")

func migrations022_sale_quote_assetsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations022_sale_quote_assetsSql,
		"migrations/022_sale_quote_assets.sql",
	)
}

func migrations022_sale_quote_assetsSql() (*asset, error) {
	bytes, err := migrations022_sale_quote_assetsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/022_sale_quote_assets.sql", size: 286, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations023_sale_current_capSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcb\xc1\x0a\xc2\x20\x1c\x07\xe0\xbb\xe0\x3b\xfc\x8e\x1b\x35\x90\xae\xa3\xc0\xd4\x28\xfa\x4f\x43\xf4\x1c\x32\x24\x82\x5a\xc3\x16\xbd\xfe\xae\x3b\xec\xfe\x7d\x4d\x83\xcd\xfb\xf9\x28\x69\xca\x88\x23\x67\x92\x82\xf1\x08\xf2\x48\x06\xdf\xf4\xca\xd0\xde\xdd\xa0\x1c\xc5\xce\xa2\xff\x95\x92\x87\xe9\xde\xa7\xb1\xe5\x8c\xb3\x65\xd6\x9f\xff\xb0\xd2\xa5\xd6\x2b\x1b\x36\x76\xc6\x5f\x54\xb5\x13\x5b\x51\xc3\xba\x00\x1b\x89\xa0\xce\x46\x5d\x51\x2d\xe5\x61\x0f\x51\x43\x9b\x93\x8c\x14\x20\x5a\xce\xe6\x00\x00\x00\xff\xff\xf8\x20\xae\x9a\xb3\x00\x00\x00")

func migrations023_sale_current_capSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations023_sale_current_capSql,
		"migrations/023_sale_current_cap.sql",
	)
}

func migrations023_sale_current_capSql() (*asset, error) {
	bytes, err := migrations023_sale_current_capSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/023_sale_current_cap.sql", size: 179, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations024_sale_typeSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe5\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4e\xcc\x49\x55\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x03\xf3\xe3\x4b\x2a\x0b\x52\x15\x3c\xfd\x42\x14\xfc\xfc\x43\x14\xfc\x42\x7d\x7c\x14\x5c\x5c\xdd\x1c\x43\x7d\x42\x14\x0c\xad\x79\xb9\x78\xb9\x90\x0d\x74\xc9\x2f\xcf\xc3\x62\xa4\x4b\x90\x7f\x00\xcc\x4c\x84\xa1\xd6\xbc\x5c\x80\x00\x00\x00\xff\xff\xec\x82\x2d\xf9\x8d\x00\x00\x00")

func migrations024_sale_typeSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations024_sale_typeSql,
		"migrations/024_sale_type.sql",
	)
}

func migrations024_sale_typeSql() (*asset, error) {
	bytes, err := migrations024_sale_typeSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/024_sale_type.sql", size: 141, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations025_ledger_changesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x6a\xc3\x30\x0c\x86\xef\x06\xbf\x83\x8e\x1d\x6b\x9f\xa0\xa7\x76\xf5\x86\x21\xa4\xa3\x75\xa1\x37\xe3\xc5\x6a\x6a\x68\x6d\xa3\x78\x2c\x7e\xfb\xe1\x2d\x81\x6c\x90\x31\x9d\x84\xf8\xf4\x4b\x7c\xab\x15\x3c\xde\x5d\x4b\x26\x21\x9c\x22\x67\x9c\x3d\x1d\xc4\x46\x09\x50\x9b\x6d\x25\xe0\xea\xba\x14\x28\xeb\x1b\xda\x16\x49\x37\x57\xe3\x5b\xec\x38\x5b\x70\x06\x90\x7a\xed\x2c\x8c\xb5\x95\x2f\xb2\x56\xa5\xab\xf7\x0a\xea\x53\x55\x2d\x0b\x14\xe2\x7f\x20\xb2\x48\xda\xbf\xdf\xdf\x90\x00\x06\xe2\x37\x84\x97\x0b\x36\x69\x4c\x9a\x83\x7c\xa2\xac\x53\x8e\xf8\x07\x14\x4d\xbe\x05\x33\x7e\xa5\xc4\x59\xfd\x84\x38\x7b\x58\x17\x15\x0d\x61\xf1\xe2\xbc\xc5\x1e\x82\x9f\xb1\x01\x8b\x2f\x11\xcb\xc9\xed\xef\xf5\xa9\xdb\x5d\xf8\xf0\x65\xb6\x3b\xec\x5f\x07\xb7\xf2\x19\xc4\x59\x1e\xd5\x71\x26\x77\xfd\x19\x00\x00\xff\xff\x59\x2e\xfd\xc9\x9c\x01\x00\x00")

func migrations025_ledger_changesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations025_ledger_changesSql,
		"migrations/025_ledger_changes.sql",
	)
}

func migrations025_ledger_changesSql() (*asset, error) {
	bytes, err := migrations025_ledger_changesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/025_ledger_changes.sql", size: 412, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations026_contractsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\x4d\x6b\xea\x40\x14\xdd\x07\xf2\x1f\xee\xd2\xf0\x9e\xf0\x36\xaf\x1b\x69\x21\xc6\xb1\x06\xe3\x07\x31\x96\x4a\x29\x61\x9a\x0c\x75\x8a\xce\xc8\xcc\x4d\x6d\xfb\xeb\x4b\x9a\x8c\x26\xb6\xa9\x0a\x5d\x74\x56\xc3\xcd\x39\xf7\xde\x73\x4e\x98\x76\x1b\xfe\xac\xf9\xa3\xa2\xc8\x60\xbe\xb1\x2d\xdb\xf2\x42\xe2\x46\x04\x22\xb7\x1b\x10\x58\x72\x8d\x52\xbd\xc6\x89\x14\xa8\x68\x82\xda\xb6\x5a\xb6\x05\xc0\x53\xa8\x9d\xae\x7f\xed\x8f\xa3\xe2\x3e\x9e\x44\x30\x9e\x07\x01\x78\x03\xe2\x0d\xa1\xc5\x53\xb8\xba\x84\x7f\xce\xdf\x9c\x68\x1a\x49\x55\x80\x6f\xdc\xd0\x1b\xb8\x61\xeb\xff\x85\xb3\x23\x16\xc0\x4c\xa3\x5c\x33\x65\x26\x34\x02\x99\x4e\x94\xdc\xee\x57\x69\x04\x6a\xa4\x0a\x63\xe4\x6b\x56\x00\x23\x7f\x44\x66\x91\x3b\x9a\xc2\x96\xe3\x52\x66\x08\x1f\xdf\xde\xa4\x60\x07\x13\x44\x5a\xa1\x9d\x41\xe4\x82\x23\xa7\xab\x38\x65\x48\xf9\x4a\xc3\x93\x96\xe2\x01\xea\x2e\x95\xc0\x67\xc9\x13\xa6\xeb\x76\xde\xdd\xe7\xf7\x1e\xe9\xbb\xf3\xa0\xae\x03\x59\xc5\xfb\x9d\xf1\x87\x5d\xa7\xa1\x3f\x72\xc3\x05\x0c\xc9\x22\x4f\xc1\xb1\x2d\xa7\x73\x3c\x61\xb3\x6d\x99\xb4\xa9\xc7\x3c\xfd\x36\xe5\x2a\x6e\x1f\xb7\x51\x9e\x9f\x46\xf5\x34\xc3\xe5\xf1\xff\x41\x31\x8a\x2c\x8d\x29\x9e\x16\x80\x11\x5b\xf0\x80\x8b\x94\xbd\x80\x14\xcd\x7a\x6b\x12\x4e\x33\x8a\xeb\x4d\x86\xec\x67\x9c\x52\x8c\x6a\x29\xe0\x77\x3b\x55\x0a\xfe\xc2\xaa\xea\x3b\xd2\x93\x5b\x91\xd7\x7a\xe1\x64\x5a\x9a\xe7\xf7\x81\xdc\xfa\xb3\x68\xf6\xb9\x6b\xe7\x54\xa0\x09\xea\x0c\x42\xb9\x6f\xe7\x3d\x00\x00\xff\xff\x45\xf6\xbf\xe2\xe6\x04\x00\x00")

func migrations026_contractsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations026_contractsSql,
		"migrations/026_contracts.sql",
	)
}

func migrations026_contractsSql() (*asset, error) {
	bytes, err := migrations026_contractsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/026_contracts.sql", size: 1254, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations027_reviewable_request_tasksSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x8b\xc2\x30\x10\x46\xef\x85\xfe\x87\xb9\xf5\xb0\x14\xf6\xde\x53\x76\x13\x41\x88\xa9\x94\x04\xbc\x95\x48\x87\x12\x8c\xb1\x26\xd1\x0a\xe2\x7f\x17\x41\x68\x15\xc1\x8a\x73\xff\x1e\xf3\x5e\x9e\xc3\xcf\xd6\xb4\x5e\x47\x04\xd5\xa5\x49\x9a\x10\x2e\x59\x05\x92\xfc\x71\x06\x1e\x8f\x06\x7b\xbd\xb6\x58\x7b\xdc\x1f\x30\x44\x20\x94\x82\xb6\xb6\x8e\x3a\x6c\x02\xdc\x6f\x2e\x24\x00\x88\x52\x82\x50\x9c\x03\x65\x33\xa2\xb8\x84\xdf\x62\x12\xae\x43\xd7\x18\xd7\x0e\xc8\xef\x70\x78\x8a\xe8\x9d\xb6\x75\x83\x51\x1b\x1b\x40\xb2\x95\x7c\x81\xcb\xce\x97\xac\xb8\x19\x8f\x1b\xd0\x5d\xef\x26\x54\xa0\x55\xb9\x84\xff\x92\xab\x85\x18\x6a\xbc\x7f\x6f\x3c\x7b\xb0\xfe\x6c\xfa\x6c\x58\xa4\xc9\x35\x00\x00\xff\xff\x03\x16\xa8\xe5\xc8\x01\x00\x00")

func migrations027_reviewable_request_tasksSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations027_reviewable_request_tasksSql,
		"migrations/027_reviewable_request_tasks.sql",
	)
}

func migrations027_reviewable_request_tasksSql() (*asset, error) {
	bytes, err := migrations027_reviewable_request_tasksSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/027_reviewable_request_tasks.sql", size: 456, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations028_add_customer_details_to_contractSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcd\x31\xaa\xc2\x30\x18\x07\xf0\x3d\x90\x3b\xfc\xb7\x0e\x8f\x9e\xa0\x53\x9e\x49\xa1\xf0\xd9\x4a\x9b\x80\x5b\xa9\xb5\x68\xc5\x26\x92\x7c\x22\x22\xde\xdd\x49\x10\x1c\x3c\xc1\x2f\xcf\xf1\xb7\xcc\x87\x38\xf0\x04\x77\x91\x42\x91\x35\x2d\xac\xfa\x27\x83\xe3\x9c\x38\xc4\x7b\x3f\x06\xcf\x71\x18\x39\x41\x69\x8d\x55\x43\x6e\x5d\x63\xbc\x26\x0e\xcb\x14\xfb\xfd\xc4\xc3\x7c\x4e\x38\xa5\xe0\x77\xa8\x1b\x8b\xda\x11\x41\x9b\x52\x39\xb2\xc8\x1e\xcf\xac\x90\x42\x8a\x4f\x49\x87\x9b\xff\x65\xe9\xb6\xd9\xbc\xb1\xaa\x84\xd9\x56\x9d\xed\xbe\xd8\x42\x8a\x57\x00\x00\x00\xff\xff\x74\x9d\xc3\x85\xc3\x00\x00\x00")

func migrations028_add_customer_details_to_contractSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations028_add_customer_details_to_contractSql,
		"migrations/028_add_customer_details_to_contract.sql",
	)
}

func migrations028_add_customer_details_to_contractSql() (*asset, error) {
	bytes, err := migrations028_add_customer_details_to_contractSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/028_add_customer_details_to_contract.sql", size: 195, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations029_offerSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd2\x41\x4f\xc2\x30\x14\x07\xf0\xfb\x92\x7e\x87\x77\x84\x28\x07\x0f\x7a\xe1\x54\xa0\x62\xe3\xdc\x48\x19\x46\x4e\x4d\xd9\x8a\xbc\x84\xb5\xd8\xbe\x85\xe0\xa7\x37\x82\x07\xd9\x94\xd0\x53\xd3\xfc\x5e\xf2\x7f\xcd\x7f\x30\x80\x9b\x1a\xdf\x83\x21\x0b\x8b\x1d\x4b\x58\x32\x56\x82\x17\x02\x0a\x3e\x4a\x05\x6c\x30\x92\x0f\x07\xed\xd7\x6b\x1b\x58\xd2\x63\x09\x00\x00\x56\xd0\x39\x23\x39\x9d\x0b\x25\x79\x0a\x00\x59\x5e\x40\xb6\x48\xd3\xdb\x13\x3f\x0e\xeb\xf3\xa1\x91\x9c\xca\xac\x38\xdd\xdb\x7c\xef\x3a\xfc\x95\xab\xf1\x13\x57\xbd\xfb\x87\x7e\x9b\xaf\x4c\xb4\xda\xc4\x68\xa9\xcb\xef\xba\xfc\xa3\xf1\xd4\xf6\x17\x38\x46\xbd\x6a\x0e\xad\x55\xf3\x3c\x15\x3c\xfb\x2b\x3b\x3a\x24\x34\x5b\x7d\x0a\x55\xfb\xc6\xd1\xa5\x55\xcb\x26\x04\xeb\xe8\x5a\xbe\x0b\x58\xda\xee\xbf\xff\xc7\x31\xea\xd2\xb8\xd2\x6e\x6d\x75\x4d\xf6\x32\x58\x43\xb6\xd2\x86\x00\x08\x6b\x1b\xc9\xd4\x3b\xd8\x23\x6d\x7c\x43\xc7\x17\xf8\xf4\xce\xb6\xc7\x66\x4a\xbe\x70\xb5\x84\x67\xb1\x84\x1e\x56\x7d\x96\xf4\x87\xdf\x3d\xfa\xdd\xac\x89\xdf\x3b\x96\x4c\x54\x3e\xfb\xe9\x95\x7c\x04\xf1\x26\xe7\xc5\xfc\xbc\x61\xc3\xaf\x00\x00\x00\xff\xff\x69\x00\xf9\x28\x8f\x02\x00\x00")

func migrations029_offerSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations029_offerSql,
		"migrations/029_offer.sql",
	)
}

func migrations029_offerSql() (*asset, error) {
	bytes, err := migrations029_offerSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/029_offer.sql", size: 655, mode: os.FileMode(438), modTime: time.Unix(1541846539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations030_v2Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x4d\x8f\xe3\x36\x0c\xbd\x0f\x30\xff\x81\xc7\x19\x34\x59\x14\xdb\x62\x2f\x7b\x6d\x6f\x8b\xed\x65\x16\xed\x4d\xa0\x25\x3a\xd6\xae\x22\x79\x44\x6a\x92\xf4\xd7\x17\xfe\x4c\xec\xc8\x99\x18\xdd\xe4\x92\x98\x8f\xe4\xe3\x13\x45\xc9\xdb\x2d\xfc\xb2\xb7\xbb\x88\x42\xf0\xad\x7e\x7c\x68\xbe\x3a\x52\xf3\x57\xb0\x70\x04\x8e\xcc\x8e\x22\xc3\xd3\xe3\x03\x00\x80\x35\x50\xd8\x9d\xf5\x02\x3e\x08\xf8\xe4\x1c\xd4\xd1\xee\x31\x9e\xe0\x07\x9d\x36\x1d\x88\xe9\x35\x91\xd7\x34\x87\xf6\xe6\x0a\xb9\x02\x5d\x61\x44\x2d\x14\x9f\x3e\xfd\xfe\x3c\x47\xd4\x91\xde\x6c\x48\xac\xde\x87\xca\x51\xe9\x90\xbc\x40\x26\x91\x41\x41\x10\x3a\x5e\x19\xb4\x0b\x4c\x46\xa1\x80\xd8\x3d\xb1\xe0\xbe\x86\x83\x95\x2a\xa4\xee\x09\xfc\x1b\x3c\x3d\x3e\x3c\x7f\xbe\x92\x43\x22\x7a\x46\x2d\x36\xf8\x1b\x9a\x6c\x60\xbb\xdd\x82\x0e\x9e\x2d\x0b\xf7\x1a\x9e\x65\x41\x86\xdf\x3e\x02\xdb\x9d\xb7\xa5\xd5\xe8\x05\x0a\x2b\xfc\x01\xfe\x26\xe0\x2a\x24\x67\xda\x40\x87\x10\xe3\x09\x24\xc0\x3e\xe9\x0a\xb0\x68\xc8\x99\x54\x3b\xab\xb1\x49\xdf\xe5\xde\x6e\x01\x42\x09\xd6\x70\x13\x95\x1b\xa4\x65\x4e\x04\x07\xeb\x1c\x14\x04\x15\x7a\xe3\xc8\x80\x49\xd1\xfa\xdd\x40\xc5\x7a\xa6\x28\xfc\x61\x71\x41\xbe\xfe\xf5\x02\x5f\xbf\x7d\xf9\x92\x59\xdd\x2e\x84\x1a\xab\xb1\x5e\xa8\x89\x39\xb8\x4c\x61\xad\xd4\xaa\x15\xf5\x86\xd6\xbd\x0f\xd6\x63\x79\x2a\x44\xd3\x12\xcd\x06\x47\xdd\x2d\xfa\x48\x1a\xde\x30\x9e\xac\xdf\x4d\xc8\xf7\xe0\x50\x53\xec\x62\x8e\x9d\x92\x8b\x49\xfe\x8d\x5c\xa8\xa9\xeb\x98\x99\x31\x12\x27\x27\x59\xd3\x9e\x86\x2e\x9b\x19\xde\xd0\x59\xa3\xb0\x6c\xe8\xdd\xa8\x7d\xde\x9c\x9d\x5b\x41\x65\x88\x37\x35\x1b\xfd\xb2\x8d\x3a\xc8\x5f\xa1\xdf\x51\xdf\xaa\x72\x54\xd6\xc0\xf0\xe9\x7b\x16\x60\x4a\x20\xd4\xf7\x80\x9a\xc5\x51\x3e\xed\x0b\x8a\x00\x3d\x62\x0e\xa2\xb2\x24\x3d\x58\x16\x41\x5e\xe2\x49\xc9\xa9\xa6\x1b\xa0\x1a\x4f\x2e\xe0\xc0\xaa\xd5\x7a\x02\x9a\x29\x60\xbd\xa1\x23\x04\x7f\x25\x42\x2b\xc0\xe6\x22\x67\x46\xb8\xbe\xb5\x7a\xc9\xee\x98\x77\x68\x4c\x24\xe6\x85\x5e\x5c\xa0\x98\xbc\x7d\x4d\x17\x4c\xcf\x59\xfb\x70\x19\x66\x05\x3a\xf4\x9a\x56\x30\xeb\x82\xaa\xcc\x80\xba\x9f\x78\x07\x65\x26\x51\x3a\x18\xfa\x7f\x65\x9e\x4b\x58\x2e\x73\xdc\xae\xf7\x17\xda\x35\x76\xae\xc6\xb6\xb1\xae\x9e\x1a\x12\xb4\x8e\xe1\x3b\x07\x5f\x4c\x4d\xab\xc6\xd6\xd4\x95\x43\x8a\xbc\x52\xa0\xae\xe4\x1a\xa3\x58\x6d\x6b\xf4\xa2\xba\x5d\xf3\xd3\x16\xb9\x57\xfc\xc2\xbc\x6e\x41\x2f\x77\x72\x46\xae\xf3\x6c\xbd\xce\xbf\xb4\x2b\xb3\xd5\x9e\x79\x6e\xc0\x9a\x67\x38\x54\x14\xe9\x92\xbd\xe5\x31\xf0\xb5\x80\xcd\x7d\x81\x0e\xcd\x4f\x15\x9b\x73\x89\x57\x08\xd8\x3b\x84\x78\x8f\x12\x5d\x22\xba\x13\x5b\x52\x6c\x8f\xc8\x2c\xb8\xc7\x7c\x27\x2d\x2a\x12\x72\xf0\xf0\xf2\xe7\x3f\x2f\xf3\x18\x2d\x39\x95\xef\xe3\xc1\xca\xd2\x09\x3c\x33\x4f\xcf\xf5\x65\xa2\x9d\x94\xef\xdd\x87\xa6\x3e\xa9\x36\xab\x7d\x6e\x6c\x3b\x74\x4e\x09\xf2\x0f\xbe\xae\xa2\x26\x6f\xac\xdf\x2d\x99\xe9\x28\x14\x3d\x3a\x35\x44\x9f\x5c\xf8\xb2\xdb\x8d\xd1\xad\x98\xa2\x1c\x4a\x51\x1a\x6b\xf0\x69\x4f\xd1\xea\xa7\x8f\xbf\x6e\xe0\xd3\xf3\x5c\xea\x68\xde\x05\x15\xc8\xa4\x74\x8a\x91\xfc\xfb\x11\x5b\xf0\x5d\x61\x9b\x72\x16\x1a\x24\x1c\x3c\x45\xb5\x62\xd0\xb7\x59\xdb\xe1\x70\x0f\xda\x50\x89\xc9\x89\x7a\x4d\x41\x56\xb8\xb1\x60\x94\x95\xc3\x95\xbc\x59\xe9\x91\xed\x87\x21\x7f\x6e\xbb\x5c\x54\xb1\xd0\x45\x8f\x0f\x97\xef\x4b\x7f\x84\x83\x6f\x9e\x99\x18\xea\xd9\xdb\x92\x46\xd6\x68\xe8\xf3\xc4\x38\x79\x77\xc8\x22\x66\xf7\x95\x2c\x66\xbc\x29\x64\xad\xe3\x01\x9b\xb5\x5e\x1c\xad\x59\x7b\x6e\x32\x67\x81\xb9\x79\x9b\x05\x76\x5b\x6d\x30\xfd\x17\x00\x00\xff\xff\x3f\x5f\x6d\x04\x6e\x0e\x00\x00")

func migrations030_v2SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations030_v2Sql,
		"migrations/030_v2.sql",
	)
}

func migrations030_v2Sql() (*asset, error) {
	bytes, err := migrations030_v2SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/030_v2.sql", size: 3694, mode: os.FileMode(438), modTime: time.Unix(1546711761, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations031_notifiersSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x93\x51\x6b\xdb\x3e\x14\xc5\xdf\x0b\xfd\x0e\xe7\xa1\xd0\x86\x7f\xf3\xff\x02\x66\x0f\x9a\x7d\xed\x19\x52\x39\xc8\x32\xe9\x9b\x11\xcd\x9d\x2b\x70\x6c\x47\x52\xda\xe5\xdb\x0f\xa7\x49\xd6\xb5\xe9\xb2\xc1\x1e\xf6\x60\x30\x97\xcb\x39\x3f\x9d\x23\x4d\xa7\xf8\x6f\x65\x1b\x67\x02\xa3\x1a\x2e\x2f\xa6\xd3\xf1\xc3\xdd\xc6\x07\xf8\x60\xb6\x30\x1e\x7d\xc7\x68\x6d\xc7\xe3\xff\xcb\x6e\xef\x10\x1c\x9b\xe0\x61\xc3\x38\xf5\xfc\xc4\xce\xb4\xf0\x3c\x98\x9d\x94\x0f\x26\xf0\x8a\xbb\xe0\x5f\x24\x63\x45\x42\x13\x0a\x05\x45\xf3\x99\x88\x09\x69\x25\x63\x9d\x17\x12\x1d\x3f\xd7\x8f\xd6\x87\xde\x6d\xeb\x96\x97\x0d\xbb\xda\xf3\xba\xee\xfa\x60\xbf\x6e\x6f\x26\x50\xa4\x2b\x25\x4b\x04\x67\x9b\x86\x1d\x44\x89\xab\x2b\x24\x14\xcf\x84\x22\x0c\x66\xdb\xf6\x66\x89\x27\xe3\x1e\x1e\x8d\x8b\xb0\xb2\x4b\x6c\x36\x76\x19\xe1\x33\x65\xb9\x3c\x2e\x7c\x42\x2c\x4a\x7d\x23\x69\xf1\xbf\xe7\xf5\x86\xbb\x07\x1e\xa5\x02\x7f\x0b\x93\x08\x73\x52\x69\xa1\xee\x30\x34\x07\xe3\xeb\xd3\x5c\xd7\xb7\x07\xc5\x49\xb4\x47\x83\xa4\x45\x04\x92\x49\x34\x82\xcd\x84\xcc\x2a\x91\x11\x86\x76\x68\xfc\xba\x8d\x2e\x2f\x8e\xc7\xd7\x2a\xcf\x32\x52\xf8\x59\xd6\xd7\xb6\xf3\xec\x02\x44\xaa\x49\x21\x97\x25\x29\x8d\x42\xbe\x5d\x43\x5a\x28\x90\x88\xbf\x40\x15\x0b\xd0\x3d\xc5\x95\x26\xcc\x55\x11\x53\x52\x29\x3a\x17\xe4\x0e\xe4\x6c\x13\x07\xa4\x7f\xa6\x82\x57\x40\x7f\x25\xfb\x33\x99\xff\x41\xd6\xa7\xa2\xda\x39\xbe\x7e\x53\x49\xff\xdc\x8d\xb3\x44\x15\xf3\x23\x43\x9e\x82\xee\xf3\x52\x97\x1f\xdd\x84\xf7\xe5\x47\x7b\x89\x63\x59\x3f\x34\x7e\xdd\xfb\xbe\x95\xdb\x5d\x23\x93\xe8\x43\x92\xf7\x04\xbf\xe7\x7c\x22\x85\x37\x96\xdf\x03\x00\x00\xff\xff\x0b\xd0\xf6\x58\x63\x04\x00\x00")

func migrations031_notifiersSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations031_notifiersSql,
		"migrations/031_notifiers.sql",
	)
}

func migrations031_notifiersSql() (*asset, error) {
	bytes, err := migrations031_notifiersSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/031_notifiers.sql", size: 1123, mode: os.FileMode(438), modTime: time.Unix(1546710281, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migrations/0010_trades.sql": migrations0010_tradesSql,
	"migrations/0011_history_price.sql": migrations0011_history_priceSql,
	"migrations/0012_update_pending_tx_op_key.sql": migrations0012_update_pending_tx_op_keySql,
	"migrations/0013_signer_name.sql": migrations0013_signer_nameSql,
	"migrations/001_squashed.sql": migrations001_squashedSql,
	"migrations/003_update_forfeit_request_created_at.sql": migrations003_update_forfeit_request_created_atSql,
	"migrations/004_change_asset_length.sql": migrations004_change_asset_lengthSql,
	"migrations/005_change_exchange_kyc.sql": migrations005_change_exchange_kycSql,
	"migrations/006_pending_submitter.sql": migrations006_pending_submitterSql,
	"migrations/007_move_forfeit_requests_to_payment.sql": migrations007_move_forfeit_requests_to_paymentSql,
	"migrations/008_use_random_salt_in_tx.sql": migrations008_use_random_salt_in_txSql,
	"migrations/009_use_long_assets.sql": migrations009_use_long_assetsSql,
	"migrations/014_balance_history.sql": migrations014_balance_historySql,
	"migrations/015_account_type.sql": migrations015_account_typeSql,
	"migrations/016_balance_updates_index.sql": migrations016_balance_updates_indexSql,
	"migrations/017_reviewable_request.sql": migrations017_reviewable_requestSql,
	"migrations/018_sale.sql": migrations018_saleSql,
	"migrations/019_add_timestamps_2_reviewable_req.sql": migrations019_add_timestamps_2_reviewable_reqSql,
	"migrations/020_alter_sales_details.sql": migrations020_alter_sales_detailsSql,
	"migrations/021_sale_quote_assets.sql": migrations021_sale_quote_assetsSql,
	"migrations/022_sale_quote_assets.sql": migrations022_sale_quote_assetsSql,
	"migrations/023_sale_current_cap.sql": migrations023_sale_current_capSql,
	"migrations/024_sale_type.sql": migrations024_sale_typeSql,
	"migrations/025_ledger_changes.sql": migrations025_ledger_changesSql,
	"migrations/026_contracts.sql": migrations026_contractsSql,
	"migrations/027_reviewable_request_tasks.sql": migrations027_reviewable_request_tasksSql,
	"migrations/028_add_customer_details_to_contract.sql": migrations028_add_customer_details_to_contractSql,
	"migrations/029_offer.sql": migrations029_offerSql,
	"migrations/030_v2.sql": migrations030_v2Sql,
	"migrations/031_notifiers.sql": migrations031_notifiersSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"migrations": &bintree{nil, map[string]*bintree{
		"0010_trades.sql": &bintree{migrations0010_tradesSql, map[string]*bintree{}},
		"0011_history_price.sql": &bintree{migrations0011_history_priceSql, map[string]*bintree{}},
		"0012_update_pending_tx_op_key.sql": &bintree{migrations0012_update_pending_tx_op_keySql, map[string]*bintree{}},
		"0013_signer_name.sql": &bintree{migrations0013_signer_nameSql, map[string]*bintree{}},
		"001_squashed.sql": &bintree{migrations001_squashedSql, map[string]*bintree{}},
		"003_update_forfeit_request_created_at.sql": &bintree{migrations003_update_forfeit_request_created_atSql, map[string]*bintree{}},
		"004_change_asset_length.sql": &bintree{migrations004_change_asset_lengthSql, map[string]*bintree{}},
		"005_change_exchange_kyc.sql": &bintree{migrations005_change_exchange_kycSql, map[string]*bintree{}},
		"006_pending_submitter.sql": &bintree{migrations006_pending_submitterSql, map[string]*bintree{}},
		"007_move_forfeit_requests_to_payment.sql": &bintree{migrations007_move_forfeit_requests_to_paymentSql, map[string]*bintree{}},
		"008_use_random_salt_in_tx.sql": &bintree{migrations008_use_random_salt_in_txSql, map[string]*bintree{}},
		"009_use_long_assets.sql": &bintree{migrations009_use_long_assetsSql, map[string]*bintree{}},
		"014_balance_history.sql": &bintree{migrations014_balance_historySql, map[string]*bintree{}},
		"015_account_type.sql": &bintree{migrations015_account_typeSql, map[string]*bintree{}},
		"016_balance_updates_index.sql": &bintree{migrations016_balance_updates_indexSql, map[string]*bintree{}},
		"017_reviewable_request.sql": &bintree{migrations017_reviewable_requestSql, map[string]*bintree{}},
		"018_sale.sql": &bintree{migrations018_saleSql, map[string]*bintree{}},
		"019_add_timestamps_2_reviewable_req.sql": &bintree{migrations019_add_timestamps_2_reviewable_reqSql, map[string]*bintree{}},
		"020_alter_sales_details.sql": &bintree{migrations020_alter_sales_detailsSql, map[string]*bintree{}},
		"021_sale_quote_assets.sql": &bintree{migrations021_sale_quote_assetsSql, map[string]*bintree{}},
		"022_sale_quote_assets.sql": &bintree{migrations022_sale_quote_assetsSql, map[string]*bintree{}},
		"023_sale_current_cap.sql": &bintree{migrations023_sale_current_capSql, map[string]*bintree{}},
		"024_sale_type.sql": &bintree{migrations024_sale_typeSql, map[string]*bintree{}},
		"025_ledger_changes.sql": &bintree{migrations025_ledger_changesSql, map[string]*bintree{}},
		"026_contracts.sql": &bintree{migrations026_contractsSql, map[string]*bintree{}},
		"027_reviewable_request_tasks.sql": &bintree{migrations027_reviewable_request_tasksSql, map[string]*bintree{}},
		"028_add_customer_details_to_contract.sql": &bintree{migrations028_add_customer_details_to_contractSql, map[string]*bintree{}},
		"029_offer.sql": &bintree{migrations029_offerSql, map[string]*bintree{}},
		"030_v2.sql": &bintree{migrations030_v2Sql, map[string]*bintree{}},
		"031_notifiers.sql": &bintree{migrations031_notifiersSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

